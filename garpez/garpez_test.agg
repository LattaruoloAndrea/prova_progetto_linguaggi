int x;
int y=5;
const int z=12;
int a, b=16, c;

int main(const int x, const int y) {
	return 0;
}

void main(int x) {
	return;
}

const int prova() {
	return 0;
}

int main() {

}

int square(int x) {
	return x * x + 1;
}

int main(int argc, char** argv) {
	const float pippo = 1.0+5;

	if( Latta == "romano" ) {
		string ans = "Gigi la trottola\n";
	}

	if( IfElse == true ) {
		string ans = "True";
	}else if( IfElseIf == true ) {
		string ans = "False->True";
	}else {
		string ans = "False->False";
	}

	{
		{
			{
				// Neasted empty blocks
			}
		}
	}

	// Neasted control-flow
	for(int x=-1; x<=17*square(2); ++x) {
		if(true) {
			x += 5;
		}else if(x < 12) {
			x += 1;
		}else {
			do {
				x++;
			}while(false);

			while(true) {
				do {
					x++;
					break;
				}while(false);

				continue;
			}
		}
	}

	// Write
	writeInt(12);
	writeFloat(36.12);
	writeChar('x');
	writeString("pippo");
	writeInt("Type checking!!");


	// Array
	int[26] v_1;
	const float[12] v_2;
	string[readInt()] v_s;

	// Initialized array
	int[10] v = {1,2,3,4,5,6,7,8,9,10};

	// Exotic assignments
	int[3] w = {
		v[5] += v[2] *= 5,
		square(readInt()++) /= 1.5,
		true &= (v[2] == 1) |= false
	};

	return square( 6+12-(2*5)*z*square(pippo) );
}

// Pass by reference
void refsquare(int ref x) {
	x *= x;
	return;
}