comment "//" ;
comment "/*" "*/" ;

entrypoints Program ;


-- PROGRAM /////////////////////////////////////////////////////////////////////////

Prog.						Program ::= [Declaration] ;

ConstDecl.					Declaration ::= "const" [InitItem] ";" ;
VarDecl.					Declaration ::= Type [InitItem] ";" ;
InitDecl.					InitItem ::= Id "=" RExp ;

separator InitItem "," ;
terminator Declaration "" ;



-- TYPE ////////////////////////////////////////////////////////////////////////////

SType.						Type ::= SimpleType ;
AType.						Type ::= Type "[" PInt "]" ;
PType.						Type ::= Type "*" ;

rules SimpleType ::= "bool" | "char" | "int" | "float" | "string" | "void" ;



position token Id ( letter (letter | digit | '_' )* ) ;
position token PBool {"true"} | {"false"} ;
position token PChar ( '\'' ((char - ["'\\"]) | ('\\' ["'\\nt"])) '\'' ) ;
position token PInt ( digit+ ) ;
position token PFloat ( digit+ '.' digit+ ) ;
position token PString ( '"' ((char - ["\"\\"]) | ('\\' ["\"\\nt"]))* '"' ) ;
