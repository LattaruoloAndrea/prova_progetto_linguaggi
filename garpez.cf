entrypoints Program ;

comment "//" ;
comment "/*" "*/" ;


Prog.					Program ::= [Global] ;

FunDecl.				Global ::= FunctionDefinition ;
GlobalDecl.				Global ::= Declaration ";";

terminator Global "" ;




ProcDef.				FunctionDefinition ::= "void" FunRest ;
FunDef.					FunctionDefinition ::= Qualified_Type FunRest ;

Rest.					FunRest ::= Id "(" [FormalParam] ")" Block ;

FormParam.				FormalParam ::= Qualified_Type Id ;
separator FormalParam "," ;

NoQualifier.			Qualified_Type ::= Type ;
YesQualifier.			Qualified_Type ::= Qualifier Type ;

ConstQualifier.			Qualifier ::= "const" ;

TInt.					Type ::= "int" ;
TFloat.					Type ::= "float" ;


Blk.					Block ::= "{" [Statement] "}" ;
terminator Statement ";" ;

StmRet1.				Statement ::= "return" ;
StmRet2.				Statement ::= "return" RExp ;
StmDecl.				Statement ::= Declaration ;




Decl.					Declaration ::= Qualified_Type [Init] ;

NameInit.				Init ::= Id ;
ValueInit.				Init ::= Id "=" RExp ;

separator nonempty Init "," ;

LitExp.					RExp ::= Literal ;

LitInt.					Literal ::= PInt ;





position token Id ( letter (letter | digit | '_' )* ) ;
position token PInt ( digit+ ) ;