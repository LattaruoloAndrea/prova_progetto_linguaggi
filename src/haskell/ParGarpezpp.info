-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParGarpezpp.y
-----------------------------------------------------------------------------

state 72 contains 1 shift/reduce conflicts.
state 203 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Char -> L_charac                                   (2)
	Integer -> L_integ                                 (3)
	Double -> L_doubl                                  (4)
	String -> L_quoted                                 (5)
	Boolean -> L_Boolean                               (6)
	Program -> ListFDecl                               (7)
	FDecl -> RType Ident '(' ListParam ')' Block       (8)
	Param -> Type PassBy Ident                         (9)
	PassBy ->                                          (10)
	PassBy -> '&'                                      (11)
	DList -> Type ListVDecl ';'                        (12)
	DList -> 'const' ListCDecl ';'                     (13)
	VDecl -> Ident                                     (14)
	VDecl -> Ident '=' RExp                            (15)
	CDecl -> Ident '=' RExp                            (16)
	Type -> Basic Compound                             (17)
	Compound ->                                        (18)
	Compound -> '[' RExp ']' Compound                  (19)
	Compound -> '*' Compound                           (20)
	Basic -> 'bool'                                    (21)
	Basic -> 'char'                                    (22)
	Basic -> 'int'                                     (23)
	Basic -> 'float'                                   (24)
	Basic -> 'string'                                  (25)
	RType -> Basic                                     (26)
	RType -> Type '&'                                  (27)
	Block -> '{' ListDList ListStm '}'                 (28)
	Stm -> Block                                       (29)
	Stm -> Ident '(' ListRExp ')' ';'                  (30)
	Stm -> PWrite '(' RExp ')' ';'                     (31)
	Stm -> LExp AssignOp RExp ';'                      (32)
	Stm -> LExp ';'                                    (33)
	Stm -> 'if' '(' RExp ')' Stm                       (34)
	Stm -> 'if' '(' RExp ')' Stm 'else' Stm            (35)
	Stm -> 'while' '(' RExp ')' Stm                    (36)
	Stm -> 'do' Stm 'while' '(' RExp ')' ';'           (37)
	Stm -> 'for' '(' Ident '=' RExp Dir RExp ')' Stm   (38)
	Stm -> Jump ';'                                    (39)
	Dir -> 'upto'                                      (40)
	Dir -> 'downto'                                    (41)
	Jump -> 'return'                                   (42)
	Jump -> 'return' RExp                              (43)
	Jump -> 'break'                                    (44)
	Jump -> 'continue'                                 (45)
	LExp -> LExp1                                      (46)
	LExp -> '*' LExp1                                  (47)
	LExp1 -> LExp2                                     (48)
	LExp1 -> LExp2 IncDecOp                            (49)
	LExp2 -> LExp3                                     (50)
	LExp2 -> IncDecOp LExp3                            (51)
	LExp3 -> LExp4                                     (52)
	LExp3 -> LExp3 '[' RExp ']'                        (53)
	LExp4 -> '(' LExp ')'                              (54)
	LExp4 -> Ident                                     (55)
	RExp -> RExp1                                      (56)
	RExp -> RExp '||' RExp1                            (57)
	RExp1 -> RExp2                                     (58)
	RExp1 -> RExp1 '&&' RExp2                          (59)
	RExp2 -> RExp3                                     (60)
	RExp2 -> '!' RExp3                                 (61)
	RExp3 -> RExp4                                     (62)
	RExp3 -> RExp3 CompOp RExp4                        (63)
	RExp4 -> RExp5                                     (64)
	RExp4 -> RExp4 '+' RExp5                           (65)
	RExp4 -> RExp4 '-' RExp5                           (66)
	RExp5 -> RExp6                                     (67)
	RExp5 -> RExp5 '*' RExp6                           (68)
	RExp5 -> RExp5 '/' RExp6                           (69)
	RExp5 -> RExp5 '%' RExp6                           (70)
	RExp6 -> RExp7                                     (71)
	RExp6 -> RExp7 '^' RExp6                           (72)
	RExp7 -> RExp8                                     (73)
	RExp7 -> SignOp RExp8                              (74)
	RExp7 -> '&' LExp                                  (75)
	RExp8 -> RExp9                                     (76)
	RExp8 -> LExp                                      (77)
	RExp9 -> RExp10                                    (78)
	RExp9 -> Ident '(' ListRExp ')'                    (79)
	RExp9 -> PRead '(' ')'                             (80)
	RExp10 -> '(' RExp ')'                             (81)
	RExp10 -> Literal                                  (82)
	PRead -> 'readChar'                                (83)
	PRead -> 'readInt'                                 (84)
	PRead -> 'readFloat'                               (85)
	PRead -> 'readString'                              (86)
	PWrite -> 'writeChar'                              (87)
	PWrite -> 'writeInt'                               (88)
	PWrite -> 'writeFloat'                             (89)
	PWrite -> 'writeString'                            (90)
	AssignOp -> '='                                    (91)
	AssignOp -> '+='                                   (92)
	AssignOp -> '-='                                   (93)
	AssignOp -> '*='                                   (94)
	AssignOp -> '/='                                   (95)
	AssignOp -> '%='                                   (96)
	AssignOp -> '^='                                   (97)
	AssignOp -> '&='                                   (98)
	AssignOp -> '|='                                   (99)
	CompOp -> '<'                                      (100)
	CompOp -> '<='                                     (101)
	CompOp -> '=='                                     (102)
	CompOp -> '!='                                     (103)
	CompOp -> '>='                                     (104)
	CompOp -> '>'                                      (105)
	IncDecOp -> '++'                                   (106)
	IncDecOp -> '--'                                   (107)
	SignOp -> '+'                                      (108)
	SignOp -> '-'                                      (109)
	Literal -> Boolean                                 (110)
	Literal -> Char                                    (111)
	Literal -> Integer                                 (112)
	Literal -> Double                                  (113)
	Literal -> String                                  (114)
	ListParam ->                                       (115)
	ListParam -> Param                                 (116)
	ListParam -> Param ',' ListParam                   (117)
	ListFDecl -> FDecl                                 (118)
	ListFDecl -> FDecl ListFDecl                       (119)
	ListVDecl -> VDecl                                 (120)
	ListVDecl -> VDecl ',' ListVDecl                   (121)
	ListCDecl -> CDecl                                 (122)
	ListCDecl -> CDecl ',' ListCDecl                   (123)
	ListDList ->                                       (124)
	ListDList -> ListDList DList                       (125)
	ListStm ->                                         (126)
	ListStm -> ListStm Stm                             (127)
	ListRExp -> RExp                                   (128)
	ListRExp -> RExp ',' ListRExp                      (129)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'%='           { PT _ (TS _ 4) }
	'&'            { PT _ (TS _ 5) }
	'&&'           { PT _ (TS _ 6) }
	'&='           { PT _ (TS _ 7) }
	'('            { PT _ (TS _ 8) }
	')'            { PT _ (TS _ 9) }
	'*'            { PT _ (TS _ 10) }
	'*='           { PT _ (TS _ 11) }
	'+'            { PT _ (TS _ 12) }
	'++'           { PT _ (TS _ 13) }
	'+='           { PT _ (TS _ 14) }
	','            { PT _ (TS _ 15) }
	'-'            { PT _ (TS _ 16) }
	'--'           { PT _ (TS _ 17) }
	'-='           { PT _ (TS _ 18) }
	'/'            { PT _ (TS _ 19) }
	'/='           { PT _ (TS _ 20) }
	';'            { PT _ (TS _ 21) }
	'<'            { PT _ (TS _ 22) }
	'<='           { PT _ (TS _ 23) }
	'='            { PT _ (TS _ 24) }
	'=='           { PT _ (TS _ 25) }
	'>'            { PT _ (TS _ 26) }
	'>='           { PT _ (TS _ 27) }
	'['            { PT _ (TS _ 28) }
	']'            { PT _ (TS _ 29) }
	'^'            { PT _ (TS _ 30) }
	'^='           { PT _ (TS _ 31) }
	'bool'         { PT _ (TS _ 32) }
	'break'        { PT _ (TS _ 33) }
	'char'         { PT _ (TS _ 34) }
	'const'        { PT _ (TS _ 35) }
	'continue'     { PT _ (TS _ 36) }
	'do'           { PT _ (TS _ 37) }
	'downto'       { PT _ (TS _ 38) }
	'else'         { PT _ (TS _ 39) }
	'float'        { PT _ (TS _ 40) }
	'for'          { PT _ (TS _ 41) }
	'if'           { PT _ (TS _ 42) }
	'int'          { PT _ (TS _ 43) }
	'readChar'     { PT _ (TS _ 44) }
	'readFloat'    { PT _ (TS _ 45) }
	'readInt'      { PT _ (TS _ 46) }
	'readString'   { PT _ (TS _ 47) }
	'return'       { PT _ (TS _ 48) }
	'string'       { PT _ (TS _ 49) }
	'upto'         { PT _ (TS _ 50) }
	'while'        { PT _ (TS _ 51) }
	'writeChar'    { PT _ (TS _ 52) }
	'writeFloat'   { PT _ (TS _ 53) }
	'writeInt'     { PT _ (TS _ 54) }
	'writeString'  { PT _ (TS _ 55) }
	'{'            { PT _ (TS _ 56) }
	'|='           { PT _ (TS _ 57) }
	'||'           { PT _ (TS _ 58) }
	'}'            { PT _ (TS _ 59) }
	L_ident        { PT _ (TV $$) }
	L_charac       { PT _ (TC $$) }
	L_integ        { PT _ (TI $$) }
	L_doubl        { PT _ (TD $$) }
	L_quoted       { PT _ (TL $$) }
	L_Boolean      { PT _ (T_Boolean $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Char            rule  2
	Integer         rule  3
	Double          rule  4
	String          rule  5
	Boolean         rule  6
	Program         rule  7
	FDecl           rule  8
	Param           rule  9
	PassBy          rules 10, 11
	DList           rules 12, 13
	VDecl           rules 14, 15
	CDecl           rule  16
	Type            rule  17
	Compound        rules 18, 19, 20
	Basic           rules 21, 22, 23, 24, 25
	RType           rules 26, 27
	Block           rule  28
	Stm             rules 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39
	Dir             rules 40, 41
	Jump            rules 42, 43, 44, 45
	LExp            rules 46, 47
	LExp1           rules 48, 49
	LExp2           rules 50, 51
	LExp3           rules 52, 53
	LExp4           rules 54, 55
	RExp            rules 56, 57
	RExp1           rules 58, 59
	RExp2           rules 60, 61
	RExp3           rules 62, 63
	RExp4           rules 64, 65, 66
	RExp5           rules 67, 68, 69, 70
	RExp6           rules 71, 72
	RExp7           rules 73, 74, 75
	RExp8           rules 76, 77
	RExp9           rules 78, 79, 80
	RExp10          rules 81, 82
	PRead           rules 83, 84, 85, 86
	PWrite          rules 87, 88, 89, 90
	AssignOp        rules 91, 92, 93, 94, 95, 96, 97, 98, 99
	CompOp          rules 100, 101, 102, 103, 104, 105
	IncDecOp        rules 106, 107
	SignOp          rules 108, 109
	Literal         rules 110, 111, 112, 113, 114
	ListParam       rules 115, 116, 117
	ListFDecl       rules 118, 119
	ListVDecl       rules 120, 121
	ListCDecl       rules 122, 123
	ListDList       rules 124, 125
	ListStm         rules 126, 127
	ListRExp        rules 128, 129

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'bool'         shift, and enter state 9
	'char'         shift, and enter state 10
	'float'        shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13

	Program        goto state 3
	FDecl          goto state 4
	Type           goto state 5
	Basic          goto state 6
	RType          goto state 7
	ListFDecl      goto state 8

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'%='           reduce using rule 1
	'&&'           reduce using rule 1
	'&='           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'*='           reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	'+='           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'-='           reduce using rule 1
	'/'            reduce using rule 1
	'/='           reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'^'            reduce using rule 1
	'^='           reduce using rule 1
	'downto'       reduce using rule 1
	'upto'         reduce using rule 1
	'|='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListFDecl -> FDecl .                                (rule 118)
	ListFDecl -> FDecl . ListFDecl                      (rule 119)

	'bool'         shift, and enter state 9
	'char'         shift, and enter state 10
	'float'        shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	%eof           reduce using rule 118

	FDecl          goto state 4
	Type           goto state 5
	Basic          goto state 6
	RType          goto state 7
	ListFDecl      goto state 19

State 5

	RType -> Type . '&'                                 (rule 27)

	'&'            shift, and enter state 18


State 6

	Type -> Basic . Compound                            (rule 17)
	RType -> Basic .                                    (rule 26)

	'&'            reduce using rule 18
	'*'            shift, and enter state 16
	'['            shift, and enter state 17
	L_ident        reduce using rule 26

	Compound       goto state 15

State 7

	FDecl -> RType . Ident '(' ListParam ')' Block      (rule 8)

	L_ident        shift, and enter state 2

	Ident          goto state 14

State 8

	Program -> ListFDecl .                              (rule 7)

	%eof           reduce using rule 7


State 9

	Basic -> 'bool' .                                   (rule 21)

	'&'            reduce using rule 21
	'*'            reduce using rule 21
	'['            reduce using rule 21
	L_ident        reduce using rule 21


State 10

	Basic -> 'char' .                                   (rule 22)

	'&'            reduce using rule 22
	'*'            reduce using rule 22
	'['            reduce using rule 22
	L_ident        reduce using rule 22


State 11

	Basic -> 'float' .                                  (rule 24)

	'&'            reduce using rule 24
	'*'            reduce using rule 24
	'['            reduce using rule 24
	L_ident        reduce using rule 24


State 12

	Basic -> 'int' .                                    (rule 23)

	'&'            reduce using rule 23
	'*'            reduce using rule 23
	'['            reduce using rule 23
	L_ident        reduce using rule 23


State 13

	Basic -> 'string' .                                 (rule 25)

	'&'            reduce using rule 25
	'*'            reduce using rule 25
	'['            reduce using rule 25
	L_ident        reduce using rule 25


State 14

	FDecl -> RType Ident . '(' ListParam ')' Block      (rule 8)

	'('            shift, and enter state 64


State 15

	Type -> Basic Compound .                            (rule 17)

	'&'            reduce using rule 17
	L_ident        reduce using rule 17


State 16

	Compound -> '*' . Compound                          (rule 20)

	'&'            reduce using rule 18
	'*'            shift, and enter state 16
	'['            shift, and enter state 17
	L_ident        reduce using rule 18

	Compound       goto state 63

State 17

	Compound -> '[' . RExp ']' Compound                 (rule 19)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 31
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 18

	RType -> Type '&' .                                 (rule 27)

	L_ident        reduce using rule 27


State 19

	ListFDecl -> FDecl ListFDecl .                      (rule 119)

	%eof           reduce using rule 119


State 20

	LExp4 -> Ident .                                    (rule 55)
	RExp9 -> Ident . '(' ListRExp ')'                   (rule 79)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            shift, and enter state 97
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'++'           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'^'            reduce using rule 55
	'downto'       reduce using rule 55
	'upto'         reduce using rule 55
	'||'           reduce using rule 55


State 21

	Literal -> Char .                                   (rule 111)

	'!='           reduce using rule 111
	'%'            reduce using rule 111
	'&&'           reduce using rule 111
	')'            reduce using rule 111
	'*'            reduce using rule 111
	'+'            reduce using rule 111
	','            reduce using rule 111
	'-'            reduce using rule 111
	'/'            reduce using rule 111
	';'            reduce using rule 111
	'<'            reduce using rule 111
	'<='           reduce using rule 111
	'=='           reduce using rule 111
	'>'            reduce using rule 111
	'>='           reduce using rule 111
	']'            reduce using rule 111
	'^'            reduce using rule 111
	'downto'       reduce using rule 111
	'upto'         reduce using rule 111
	'||'           reduce using rule 111


State 22

	Literal -> Integer .                                (rule 112)

	'!='           reduce using rule 112
	'%'            reduce using rule 112
	'&&'           reduce using rule 112
	')'            reduce using rule 112
	'*'            reduce using rule 112
	'+'            reduce using rule 112
	','            reduce using rule 112
	'-'            reduce using rule 112
	'/'            reduce using rule 112
	';'            reduce using rule 112
	'<'            reduce using rule 112
	'<='           reduce using rule 112
	'=='           reduce using rule 112
	'>'            reduce using rule 112
	'>='           reduce using rule 112
	']'            reduce using rule 112
	'^'            reduce using rule 112
	'downto'       reduce using rule 112
	'upto'         reduce using rule 112
	'||'           reduce using rule 112


State 23

	Literal -> Double .                                 (rule 113)

	'!='           reduce using rule 113
	'%'            reduce using rule 113
	'&&'           reduce using rule 113
	')'            reduce using rule 113
	'*'            reduce using rule 113
	'+'            reduce using rule 113
	','            reduce using rule 113
	'-'            reduce using rule 113
	'/'            reduce using rule 113
	';'            reduce using rule 113
	'<'            reduce using rule 113
	'<='           reduce using rule 113
	'=='           reduce using rule 113
	'>'            reduce using rule 113
	'>='           reduce using rule 113
	']'            reduce using rule 113
	'^'            reduce using rule 113
	'downto'       reduce using rule 113
	'upto'         reduce using rule 113
	'||'           reduce using rule 113


State 24

	Literal -> String .                                 (rule 114)

	'!='           reduce using rule 114
	'%'            reduce using rule 114
	'&&'           reduce using rule 114
	')'            reduce using rule 114
	'*'            reduce using rule 114
	'+'            reduce using rule 114
	','            reduce using rule 114
	'-'            reduce using rule 114
	'/'            reduce using rule 114
	';'            reduce using rule 114
	'<'            reduce using rule 114
	'<='           reduce using rule 114
	'=='           reduce using rule 114
	'>'            reduce using rule 114
	'>='           reduce using rule 114
	']'            reduce using rule 114
	'^'            reduce using rule 114
	'downto'       reduce using rule 114
	'upto'         reduce using rule 114
	'||'           reduce using rule 114


State 25

	Literal -> Boolean .                                (rule 110)

	'!='           reduce using rule 110
	'%'            reduce using rule 110
	'&&'           reduce using rule 110
	')'            reduce using rule 110
	'*'            reduce using rule 110
	'+'            reduce using rule 110
	','            reduce using rule 110
	'-'            reduce using rule 110
	'/'            reduce using rule 110
	';'            reduce using rule 110
	'<'            reduce using rule 110
	'<='           reduce using rule 110
	'=='           reduce using rule 110
	'>'            reduce using rule 110
	'>='           reduce using rule 110
	']'            reduce using rule 110
	'^'            reduce using rule 110
	'downto'       reduce using rule 110
	'upto'         reduce using rule 110
	'||'           reduce using rule 110


State 26

	RExp8 -> LExp .                                     (rule 77)

	'!='           reduce using rule 77
	'%'            reduce using rule 77
	'&&'           reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'+'            reduce using rule 77
	','            reduce using rule 77
	'-'            reduce using rule 77
	'/'            reduce using rule 77
	';'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	']'            reduce using rule 77
	'^'            reduce using rule 77
	'downto'       reduce using rule 77
	'upto'         reduce using rule 77
	'||'           reduce using rule 77


State 27

	LExp -> LExp1 .                                     (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'%='           reduce using rule 46
	'&&'           reduce using rule 46
	'&='           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'*='           reduce using rule 46
	'+'            reduce using rule 46
	'+='           reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'-='           reduce using rule 46
	'/'            reduce using rule 46
	'/='           reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	']'            reduce using rule 46
	'^'            reduce using rule 46
	'^='           reduce using rule 46
	'downto'       reduce using rule 46
	'upto'         reduce using rule 46
	'|='           reduce using rule 46
	'||'           reduce using rule 46


State 28

	LExp1 -> LExp2 .                                    (rule 48)
	LExp1 -> LExp2 . IncDecOp                           (rule 49)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'%='           reduce using rule 48
	'&&'           reduce using rule 48
	'&='           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'*='           reduce using rule 48
	'+'            reduce using rule 48
	'++'           shift, and enter state 51
	'+='           reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'--'           shift, and enter state 53
	'-='           reduce using rule 48
	'/'            reduce using rule 48
	'/='           reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	']'            reduce using rule 48
	'^'            reduce using rule 48
	'^='           reduce using rule 48
	'downto'       reduce using rule 48
	'upto'         reduce using rule 48
	'|='           reduce using rule 48
	'||'           reduce using rule 48

	IncDecOp       goto state 96

State 29

	LExp2 -> LExp3 .                                    (rule 50)
	LExp3 -> LExp3 . '[' RExp ']'                       (rule 53)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'%='           reduce using rule 50
	'&&'           reduce using rule 50
	'&='           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'*='           reduce using rule 50
	'+'            reduce using rule 50
	'++'           reduce using rule 50
	'+='           reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'--'           reduce using rule 50
	'-='           reduce using rule 50
	'/'            reduce using rule 50
	'/='           reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            shift, and enter state 95
	']'            reduce using rule 50
	'^'            reduce using rule 50
	'^='           reduce using rule 50
	'downto'       reduce using rule 50
	'upto'         reduce using rule 50
	'|='           reduce using rule 50
	'||'           reduce using rule 50


State 30

	LExp3 -> LExp4 .                                    (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'%='           reduce using rule 52
	'&&'           reduce using rule 52
	'&='           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'*='           reduce using rule 52
	'+'            reduce using rule 52
	'++'           reduce using rule 52
	'+='           reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'--'           reduce using rule 52
	'-='           reduce using rule 52
	'/'            reduce using rule 52
	'/='           reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'^'            reduce using rule 52
	'^='           reduce using rule 52
	'downto'       reduce using rule 52
	'upto'         reduce using rule 52
	'|='           reduce using rule 52
	'||'           reduce using rule 52


State 31

	Compound -> '[' RExp . ']' Compound                 (rule 19)
	RExp -> RExp . '||' RExp1                           (rule 57)

	']'            shift, and enter state 93
	'||'           shift, and enter state 94


State 32

	RExp -> RExp1 .                                     (rule 56)
	RExp1 -> RExp1 . '&&' RExp2                         (rule 59)

	'&&'           shift, and enter state 92
	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	']'            reduce using rule 56
	'downto'       reduce using rule 56
	'upto'         reduce using rule 56
	'||'           reduce using rule 56


State 33

	RExp1 -> RExp2 .                                    (rule 58)

	'&&'           reduce using rule 58
	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	']'            reduce using rule 58
	'downto'       reduce using rule 58
	'upto'         reduce using rule 58
	'||'           reduce using rule 58


State 34

	RExp2 -> RExp3 .                                    (rule 60)
	RExp3 -> RExp3 . CompOp RExp4                       (rule 63)

	'!='           shift, and enter state 86
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	'<'            shift, and enter state 87
	'<='           shift, and enter state 88
	'=='           shift, and enter state 89
	'>'            shift, and enter state 90
	'>='           shift, and enter state 91
	']'            reduce using rule 60
	'downto'       reduce using rule 60
	'upto'         reduce using rule 60
	'||'           reduce using rule 60

	CompOp         goto state 85

State 35

	RExp3 -> RExp4 .                                    (rule 62)
	RExp4 -> RExp4 . '+' RExp5                          (rule 65)
	RExp4 -> RExp4 . '-' RExp5                          (rule 66)

	'!='           reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'+'            shift, and enter state 83
	','            reduce using rule 62
	'-'            shift, and enter state 84
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'downto'       reduce using rule 62
	'upto'         reduce using rule 62
	'||'           reduce using rule 62


State 36

	RExp4 -> RExp5 .                                    (rule 64)
	RExp5 -> RExp5 . '*' RExp6                          (rule 68)
	RExp5 -> RExp5 . '/' RExp6                          (rule 69)
	RExp5 -> RExp5 . '%' RExp6                          (rule 70)

	'!='           reduce using rule 64
	'%'            shift, and enter state 80
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            shift, and enter state 81
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            shift, and enter state 82
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'downto'       reduce using rule 64
	'upto'         reduce using rule 64
	'||'           reduce using rule 64


State 37

	RExp5 -> RExp6 .                                    (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'downto'       reduce using rule 67
	'upto'         reduce using rule 67
	'||'           reduce using rule 67


State 38

	RExp6 -> RExp7 .                                    (rule 71)
	RExp6 -> RExp7 . '^' RExp6                          (rule 72)

	'!='           reduce using rule 71
	'%'            reduce using rule 71
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'+'            reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'/'            reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	']'            reduce using rule 71
	'^'            shift, and enter state 79
	'downto'       reduce using rule 71
	'upto'         reduce using rule 71
	'||'           reduce using rule 71


State 39

	RExp7 -> RExp8 .                                    (rule 73)

	'!='           reduce using rule 73
	'%'            reduce using rule 73
	'&&'           reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'/'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	']'            reduce using rule 73
	'^'            reduce using rule 73
	'downto'       reduce using rule 73
	'upto'         reduce using rule 73
	'||'           reduce using rule 73


State 40

	RExp8 -> RExp9 .                                    (rule 76)

	'!='           reduce using rule 76
	'%'            reduce using rule 76
	'&&'           reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	'+'            reduce using rule 76
	','            reduce using rule 76
	'-'            reduce using rule 76
	'/'            reduce using rule 76
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	']'            reduce using rule 76
	'^'            reduce using rule 76
	'downto'       reduce using rule 76
	'upto'         reduce using rule 76
	'||'           reduce using rule 76


State 41

	RExp9 -> RExp10 .                                   (rule 78)

	'!='           reduce using rule 78
	'%'            reduce using rule 78
	'&&'           reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'+'            reduce using rule 78
	','            reduce using rule 78
	'-'            reduce using rule 78
	'/'            reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	']'            reduce using rule 78
	'^'            reduce using rule 78
	'downto'       reduce using rule 78
	'upto'         reduce using rule 78
	'||'           reduce using rule 78


State 42

	RExp9 -> PRead . '(' ')'                            (rule 80)

	'('            shift, and enter state 78


State 43

	LExp2 -> IncDecOp . LExp3                           (rule 51)

	'('            shift, and enter state 71
	L_ident        shift, and enter state 2

	Ident          goto state 69
	LExp3          goto state 77
	LExp4          goto state 30

State 44

	RExp7 -> SignOp . RExp8                             (rule 74)

	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'++'           shift, and enter state 51
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp8          goto state 76
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	Literal        goto state 45

State 45

	RExp10 -> Literal .                                 (rule 82)

	'!='           reduce using rule 82
	'%'            reduce using rule 82
	'&&'           reduce using rule 82
	')'            reduce using rule 82
	'*'            reduce using rule 82
	'+'            reduce using rule 82
	','            reduce using rule 82
	'-'            reduce using rule 82
	'/'            reduce using rule 82
	';'            reduce using rule 82
	'<'            reduce using rule 82
	'<='           reduce using rule 82
	'=='           reduce using rule 82
	'>'            reduce using rule 82
	'>='           reduce using rule 82
	']'            reduce using rule 82
	'^'            reduce using rule 82
	'downto'       reduce using rule 82
	'upto'         reduce using rule 82
	'||'           reduce using rule 82


State 46

	RExp2 -> '!' . RExp3                                (rule 61)

	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp3          goto state 75
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 47

	RExp7 -> '&' . LExp                                 (rule 75)

	'('            shift, and enter state 71
	'*'            shift, and enter state 49
	'++'           shift, and enter state 51
	'--'           shift, and enter state 53
	L_ident        shift, and enter state 2

	Ident          goto state 69
	LExp           goto state 74
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	IncDecOp       goto state 43

State 48

	LExp4 -> '(' . LExp ')'                             (rule 54)
	RExp10 -> '(' . RExp ')'                            (rule 81)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 72
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 73
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 49

	LExp -> '*' . LExp1                                 (rule 47)

	'('            shift, and enter state 71
	'++'           shift, and enter state 51
	'--'           shift, and enter state 53
	L_ident        shift, and enter state 2

	Ident          goto state 69
	LExp1          goto state 70
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	IncDecOp       goto state 43

State 50

	SignOp -> '+' .                                     (rule 108)

	'('            reduce using rule 108
	'*'            reduce using rule 108
	'++'           reduce using rule 108
	'--'           reduce using rule 108
	'readChar'     reduce using rule 108
	'readFloat'    reduce using rule 108
	'readInt'      reduce using rule 108
	'readString'   reduce using rule 108
	L_ident        reduce using rule 108
	L_charac       reduce using rule 108
	L_integ        reduce using rule 108
	L_doubl        reduce using rule 108
	L_quoted       reduce using rule 108
	L_Boolean      reduce using rule 108


State 51

	IncDecOp -> '++' .                                  (rule 106)

	'!='           reduce using rule 106
	'%'            reduce using rule 106
	'%='           reduce using rule 106
	'&&'           reduce using rule 106
	'&='           reduce using rule 106
	'('            reduce using rule 106
	')'            reduce using rule 106
	'*'            reduce using rule 106
	'*='           reduce using rule 106
	'+'            reduce using rule 106
	'+='           reduce using rule 106
	','            reduce using rule 106
	'-'            reduce using rule 106
	'-='           reduce using rule 106
	'/'            reduce using rule 106
	'/='           reduce using rule 106
	';'            reduce using rule 106
	'<'            reduce using rule 106
	'<='           reduce using rule 106
	'='            reduce using rule 106
	'=='           reduce using rule 106
	'>'            reduce using rule 106
	'>='           reduce using rule 106
	']'            reduce using rule 106
	'^'            reduce using rule 106
	'^='           reduce using rule 106
	'downto'       reduce using rule 106
	'upto'         reduce using rule 106
	'|='           reduce using rule 106
	'||'           reduce using rule 106
	L_ident        reduce using rule 106


State 52

	SignOp -> '-' .                                     (rule 109)

	'('            reduce using rule 109
	'*'            reduce using rule 109
	'++'           reduce using rule 109
	'--'           reduce using rule 109
	'readChar'     reduce using rule 109
	'readFloat'    reduce using rule 109
	'readInt'      reduce using rule 109
	'readString'   reduce using rule 109
	L_ident        reduce using rule 109
	L_charac       reduce using rule 109
	L_integ        reduce using rule 109
	L_doubl        reduce using rule 109
	L_quoted       reduce using rule 109
	L_Boolean      reduce using rule 109


State 53

	IncDecOp -> '--' .                                  (rule 107)

	'!='           reduce using rule 107
	'%'            reduce using rule 107
	'%='           reduce using rule 107
	'&&'           reduce using rule 107
	'&='           reduce using rule 107
	'('            reduce using rule 107
	')'            reduce using rule 107
	'*'            reduce using rule 107
	'*='           reduce using rule 107
	'+'            reduce using rule 107
	'+='           reduce using rule 107
	','            reduce using rule 107
	'-'            reduce using rule 107
	'-='           reduce using rule 107
	'/'            reduce using rule 107
	'/='           reduce using rule 107
	';'            reduce using rule 107
	'<'            reduce using rule 107
	'<='           reduce using rule 107
	'='            reduce using rule 107
	'=='           reduce using rule 107
	'>'            reduce using rule 107
	'>='           reduce using rule 107
	']'            reduce using rule 107
	'^'            reduce using rule 107
	'^='           reduce using rule 107
	'downto'       reduce using rule 107
	'upto'         reduce using rule 107
	'|='           reduce using rule 107
	'||'           reduce using rule 107
	L_ident        reduce using rule 107


State 54

	PRead -> 'readChar' .                               (rule 83)

	'('            reduce using rule 83


State 55

	PRead -> 'readFloat' .                              (rule 85)

	'('            reduce using rule 85


State 56

	PRead -> 'readInt' .                                (rule 84)

	'('            reduce using rule 84


State 57

	PRead -> 'readString' .                             (rule 86)

	'('            reduce using rule 86


State 58

	Char -> L_charac .                                  (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'^'            reduce using rule 2
	'downto'       reduce using rule 2
	'upto'         reduce using rule 2
	'||'           reduce using rule 2


State 59

	Integer -> L_integ .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'^'            reduce using rule 3
	'downto'       reduce using rule 3
	'upto'         reduce using rule 3
	'||'           reduce using rule 3


State 60

	Double -> L_doubl .                                 (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	']'            reduce using rule 4
	'^'            reduce using rule 4
	'downto'       reduce using rule 4
	'upto'         reduce using rule 4
	'||'           reduce using rule 4


State 61

	String -> L_quoted .                                (rule 5)

	'!='           reduce using rule 5
	'%'            reduce using rule 5
	'&&'           reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'+'            reduce using rule 5
	','            reduce using rule 5
	'-'            reduce using rule 5
	'/'            reduce using rule 5
	';'            reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'=='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	']'            reduce using rule 5
	'^'            reduce using rule 5
	'downto'       reduce using rule 5
	'upto'         reduce using rule 5
	'||'           reduce using rule 5


State 62

	Boolean -> L_Boolean .                              (rule 6)

	'!='           reduce using rule 6
	'%'            reduce using rule 6
	'&&'           reduce using rule 6
	')'            reduce using rule 6
	'*'            reduce using rule 6
	'+'            reduce using rule 6
	','            reduce using rule 6
	'-'            reduce using rule 6
	'/'            reduce using rule 6
	';'            reduce using rule 6
	'<'            reduce using rule 6
	'<='           reduce using rule 6
	'=='           reduce using rule 6
	'>'            reduce using rule 6
	'>='           reduce using rule 6
	']'            reduce using rule 6
	'^'            reduce using rule 6
	'downto'       reduce using rule 6
	'upto'         reduce using rule 6
	'||'           reduce using rule 6


State 63

	Compound -> '*' Compound .                          (rule 20)

	'&'            reduce using rule 20
	L_ident        reduce using rule 20


State 64

	FDecl -> RType Ident '(' . ListParam ')' Block      (rule 8)

	')'            reduce using rule 115
	'bool'         shift, and enter state 9
	'char'         shift, and enter state 10
	'float'        shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13

	Param          goto state 65
	Type           goto state 66
	Basic          goto state 67
	ListParam      goto state 68

State 65

	ListParam -> Param .                                (rule 116)
	ListParam -> Param . ',' ListParam                  (rule 117)

	')'            reduce using rule 116
	','            shift, and enter state 118


State 66

	Param -> Type . PassBy Ident                        (rule 9)

	'&'            shift, and enter state 117
	L_ident        reduce using rule 10

	PassBy         goto state 116

State 67

	Type -> Basic . Compound                            (rule 17)

	'&'            reduce using rule 18
	'*'            shift, and enter state 16
	'['            shift, and enter state 17
	L_ident        reduce using rule 18

	Compound       goto state 15

State 68

	FDecl -> RType Ident '(' ListParam . ')' Block      (rule 8)

	')'            shift, and enter state 115


State 69

	LExp4 -> Ident .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'%='           reduce using rule 55
	'&&'           reduce using rule 55
	'&='           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'*='           reduce using rule 55
	'+'            reduce using rule 55
	'++'           reduce using rule 55
	'+='           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'-='           reduce using rule 55
	'/'            reduce using rule 55
	'/='           reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'^'            reduce using rule 55
	'^='           reduce using rule 55
	'downto'       reduce using rule 55
	'upto'         reduce using rule 55
	'|='           reduce using rule 55
	'||'           reduce using rule 55


State 70

	LExp -> '*' LExp1 .                                 (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'%='           reduce using rule 47
	'&&'           reduce using rule 47
	'&='           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'*='           reduce using rule 47
	'+'            reduce using rule 47
	'+='           reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'-='           reduce using rule 47
	'/'            reduce using rule 47
	'/='           reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	']'            reduce using rule 47
	'^'            reduce using rule 47
	'^='           reduce using rule 47
	'downto'       reduce using rule 47
	'upto'         reduce using rule 47
	'|='           reduce using rule 47
	'||'           reduce using rule 47


State 71

	LExp4 -> '(' . LExp ')'                             (rule 54)

	'('            shift, and enter state 71
	'*'            shift, and enter state 49
	'++'           shift, and enter state 51
	'--'           shift, and enter state 53
	L_ident        shift, and enter state 2

	Ident          goto state 69
	LExp           goto state 114
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	IncDecOp       goto state 43

State 72

	LExp4 -> '(' LExp . ')'                             (rule 54)
	RExp8 -> LExp .                                     (rule 77)

	'!='           reduce using rule 77
	'%'            reduce using rule 77
	'&&'           reduce using rule 77
	')'            shift, and enter state 113
			(reduce using rule 77)

	'*'            reduce using rule 77
	'+'            reduce using rule 77
	'-'            reduce using rule 77
	'/'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	'^'            reduce using rule 77
	'||'           reduce using rule 77


State 73

	RExp -> RExp . '||' RExp1                           (rule 57)
	RExp10 -> '(' RExp . ')'                            (rule 81)

	')'            shift, and enter state 112
	'||'           shift, and enter state 94


State 74

	RExp7 -> '&' LExp .                                 (rule 75)

	'!='           reduce using rule 75
	'%'            reduce using rule 75
	'&&'           reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	'+'            reduce using rule 75
	','            reduce using rule 75
	'-'            reduce using rule 75
	'/'            reduce using rule 75
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	']'            reduce using rule 75
	'^'            reduce using rule 75
	'downto'       reduce using rule 75
	'upto'         reduce using rule 75
	'||'           reduce using rule 75


State 75

	RExp2 -> '!' RExp3 .                                (rule 61)
	RExp3 -> RExp3 . CompOp RExp4                       (rule 63)

	'!='           shift, and enter state 86
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	'<'            shift, and enter state 87
	'<='           shift, and enter state 88
	'=='           shift, and enter state 89
	'>'            shift, and enter state 90
	'>='           shift, and enter state 91
	']'            reduce using rule 61
	'downto'       reduce using rule 61
	'upto'         reduce using rule 61
	'||'           reduce using rule 61

	CompOp         goto state 85

State 76

	RExp7 -> SignOp RExp8 .                             (rule 74)

	'!='           reduce using rule 74
	'%'            reduce using rule 74
	'&&'           reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'/'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	']'            reduce using rule 74
	'^'            reduce using rule 74
	'downto'       reduce using rule 74
	'upto'         reduce using rule 74
	'||'           reduce using rule 74


State 77

	LExp2 -> IncDecOp LExp3 .                           (rule 51)
	LExp3 -> LExp3 . '[' RExp ']'                       (rule 53)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'%='           reduce using rule 51
	'&&'           reduce using rule 51
	'&='           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'*='           reduce using rule 51
	'+'            reduce using rule 51
	'++'           reduce using rule 51
	'+='           reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'--'           reduce using rule 51
	'-='           reduce using rule 51
	'/'            reduce using rule 51
	'/='           reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            shift, and enter state 95
	']'            reduce using rule 51
	'^'            reduce using rule 51
	'^='           reduce using rule 51
	'downto'       reduce using rule 51
	'upto'         reduce using rule 51
	'|='           reduce using rule 51
	'||'           reduce using rule 51


State 78

	RExp9 -> PRead '(' . ')'                            (rule 80)

	')'            shift, and enter state 111


State 79

	RExp6 -> RExp7 '^' . RExp6                          (rule 72)

	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp6          goto state 110
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 80

	RExp5 -> RExp5 '%' . RExp6                          (rule 70)

	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp6          goto state 109
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 81

	RExp5 -> RExp5 '*' . RExp6                          (rule 68)

	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp6          goto state 108
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 82

	RExp5 -> RExp5 '/' . RExp6                          (rule 69)

	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp6          goto state 107
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 83

	RExp4 -> RExp4 '+' . RExp5                          (rule 65)

	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp5          goto state 106
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 84

	RExp4 -> RExp4 '-' . RExp5                          (rule 66)

	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp5          goto state 105
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 85

	RExp3 -> RExp3 CompOp . RExp4                       (rule 63)

	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp4          goto state 104
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 86

	CompOp -> '!=' .                                    (rule 103)

	'&'            reduce using rule 103
	'('            reduce using rule 103
	'*'            reduce using rule 103
	'+'            reduce using rule 103
	'++'           reduce using rule 103
	'-'            reduce using rule 103
	'--'           reduce using rule 103
	'readChar'     reduce using rule 103
	'readFloat'    reduce using rule 103
	'readInt'      reduce using rule 103
	'readString'   reduce using rule 103
	L_ident        reduce using rule 103
	L_charac       reduce using rule 103
	L_integ        reduce using rule 103
	L_doubl        reduce using rule 103
	L_quoted       reduce using rule 103
	L_Boolean      reduce using rule 103


State 87

	CompOp -> '<' .                                     (rule 100)

	'&'            reduce using rule 100
	'('            reduce using rule 100
	'*'            reduce using rule 100
	'+'            reduce using rule 100
	'++'           reduce using rule 100
	'-'            reduce using rule 100
	'--'           reduce using rule 100
	'readChar'     reduce using rule 100
	'readFloat'    reduce using rule 100
	'readInt'      reduce using rule 100
	'readString'   reduce using rule 100
	L_ident        reduce using rule 100
	L_charac       reduce using rule 100
	L_integ        reduce using rule 100
	L_doubl        reduce using rule 100
	L_quoted       reduce using rule 100
	L_Boolean      reduce using rule 100


State 88

	CompOp -> '<=' .                                    (rule 101)

	'&'            reduce using rule 101
	'('            reduce using rule 101
	'*'            reduce using rule 101
	'+'            reduce using rule 101
	'++'           reduce using rule 101
	'-'            reduce using rule 101
	'--'           reduce using rule 101
	'readChar'     reduce using rule 101
	'readFloat'    reduce using rule 101
	'readInt'      reduce using rule 101
	'readString'   reduce using rule 101
	L_ident        reduce using rule 101
	L_charac       reduce using rule 101
	L_integ        reduce using rule 101
	L_doubl        reduce using rule 101
	L_quoted       reduce using rule 101
	L_Boolean      reduce using rule 101


State 89

	CompOp -> '==' .                                    (rule 102)

	'&'            reduce using rule 102
	'('            reduce using rule 102
	'*'            reduce using rule 102
	'+'            reduce using rule 102
	'++'           reduce using rule 102
	'-'            reduce using rule 102
	'--'           reduce using rule 102
	'readChar'     reduce using rule 102
	'readFloat'    reduce using rule 102
	'readInt'      reduce using rule 102
	'readString'   reduce using rule 102
	L_ident        reduce using rule 102
	L_charac       reduce using rule 102
	L_integ        reduce using rule 102
	L_doubl        reduce using rule 102
	L_quoted       reduce using rule 102
	L_Boolean      reduce using rule 102


State 90

	CompOp -> '>' .                                     (rule 105)

	'&'            reduce using rule 105
	'('            reduce using rule 105
	'*'            reduce using rule 105
	'+'            reduce using rule 105
	'++'           reduce using rule 105
	'-'            reduce using rule 105
	'--'           reduce using rule 105
	'readChar'     reduce using rule 105
	'readFloat'    reduce using rule 105
	'readInt'      reduce using rule 105
	'readString'   reduce using rule 105
	L_ident        reduce using rule 105
	L_charac       reduce using rule 105
	L_integ        reduce using rule 105
	L_doubl        reduce using rule 105
	L_quoted       reduce using rule 105
	L_Boolean      reduce using rule 105


State 91

	CompOp -> '>=' .                                    (rule 104)

	'&'            reduce using rule 104
	'('            reduce using rule 104
	'*'            reduce using rule 104
	'+'            reduce using rule 104
	'++'           reduce using rule 104
	'-'            reduce using rule 104
	'--'           reduce using rule 104
	'readChar'     reduce using rule 104
	'readFloat'    reduce using rule 104
	'readInt'      reduce using rule 104
	'readString'   reduce using rule 104
	L_ident        reduce using rule 104
	L_charac       reduce using rule 104
	L_integ        reduce using rule 104
	L_doubl        reduce using rule 104
	L_quoted       reduce using rule 104
	L_Boolean      reduce using rule 104


State 92

	RExp1 -> RExp1 '&&' . RExp2                         (rule 59)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp2          goto state 103
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 93

	Compound -> '[' RExp ']' . Compound                 (rule 19)

	'&'            reduce using rule 18
	'*'            shift, and enter state 16
	'['            shift, and enter state 17
	L_ident        reduce using rule 18

	Compound       goto state 102

State 94

	RExp -> RExp '||' . RExp1                           (rule 57)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp1          goto state 101
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 95

	LExp3 -> LExp3 '[' . RExp ']'                       (rule 53)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 100
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 96

	LExp1 -> LExp2 IncDecOp .                           (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'%='           reduce using rule 49
	'&&'           reduce using rule 49
	'&='           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'*='           reduce using rule 49
	'+'            reduce using rule 49
	'+='           reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'-='           reduce using rule 49
	'/'            reduce using rule 49
	'/='           reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'^'            reduce using rule 49
	'^='           reduce using rule 49
	'downto'       reduce using rule 49
	'upto'         reduce using rule 49
	'|='           reduce using rule 49
	'||'           reduce using rule 49


State 97

	RExp9 -> Ident '(' . ListRExp ')'                   (rule 79)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 98
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45
	ListRExp       goto state 99

State 98

	RExp -> RExp . '||' RExp1                           (rule 57)
	ListRExp -> RExp .                                  (rule 128)
	ListRExp -> RExp . ',' ListRExp                     (rule 129)

	')'            reduce using rule 128
	','            shift, and enter state 125
	'||'           shift, and enter state 94


State 99

	RExp9 -> Ident '(' ListRExp . ')'                   (rule 79)

	')'            shift, and enter state 124


State 100

	LExp3 -> LExp3 '[' RExp . ']'                       (rule 53)
	RExp -> RExp . '||' RExp1                           (rule 57)

	']'            shift, and enter state 123
	'||'           shift, and enter state 94


State 101

	RExp -> RExp '||' RExp1 .                           (rule 57)
	RExp1 -> RExp1 . '&&' RExp2                         (rule 59)

	'&&'           shift, and enter state 92
	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	']'            reduce using rule 57
	'downto'       reduce using rule 57
	'upto'         reduce using rule 57
	'||'           reduce using rule 57


State 102

	Compound -> '[' RExp ']' Compound .                 (rule 19)

	'&'            reduce using rule 19
	L_ident        reduce using rule 19


State 103

	RExp1 -> RExp1 '&&' RExp2 .                         (rule 59)

	'&&'           reduce using rule 59
	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	']'            reduce using rule 59
	'downto'       reduce using rule 59
	'upto'         reduce using rule 59
	'||'           reduce using rule 59


State 104

	RExp3 -> RExp3 CompOp RExp4 .                       (rule 63)
	RExp4 -> RExp4 . '+' RExp5                          (rule 65)
	RExp4 -> RExp4 . '-' RExp5                          (rule 66)

	'!='           reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'+'            shift, and enter state 83
	','            reduce using rule 63
	'-'            shift, and enter state 84
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'downto'       reduce using rule 63
	'upto'         reduce using rule 63
	'||'           reduce using rule 63


State 105

	RExp4 -> RExp4 '-' RExp5 .                          (rule 66)
	RExp5 -> RExp5 . '*' RExp6                          (rule 68)
	RExp5 -> RExp5 . '/' RExp6                          (rule 69)
	RExp5 -> RExp5 . '%' RExp6                          (rule 70)

	'!='           reduce using rule 66
	'%'            shift, and enter state 80
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            shift, and enter state 81
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            shift, and enter state 82
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'downto'       reduce using rule 66
	'upto'         reduce using rule 66
	'||'           reduce using rule 66


State 106

	RExp4 -> RExp4 '+' RExp5 .                          (rule 65)
	RExp5 -> RExp5 . '*' RExp6                          (rule 68)
	RExp5 -> RExp5 . '/' RExp6                          (rule 69)
	RExp5 -> RExp5 . '%' RExp6                          (rule 70)

	'!='           reduce using rule 65
	'%'            shift, and enter state 80
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            shift, and enter state 81
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            shift, and enter state 82
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'downto'       reduce using rule 65
	'upto'         reduce using rule 65
	'||'           reduce using rule 65


State 107

	RExp5 -> RExp5 '/' RExp6 .                          (rule 69)

	'!='           reduce using rule 69
	'%'            reduce using rule 69
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'/'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'downto'       reduce using rule 69
	'upto'         reduce using rule 69
	'||'           reduce using rule 69


State 108

	RExp5 -> RExp5 '*' RExp6 .                          (rule 68)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'downto'       reduce using rule 68
	'upto'         reduce using rule 68
	'||'           reduce using rule 68


State 109

	RExp5 -> RExp5 '%' RExp6 .                          (rule 70)

	'!='           reduce using rule 70
	'%'            reduce using rule 70
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'/'            reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'downto'       reduce using rule 70
	'upto'         reduce using rule 70
	'||'           reduce using rule 70


State 110

	RExp6 -> RExp7 '^' RExp6 .                          (rule 72)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&&'           reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'/'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	']'            reduce using rule 72
	'downto'       reduce using rule 72
	'upto'         reduce using rule 72
	'||'           reduce using rule 72


State 111

	RExp9 -> PRead '(' ')' .                            (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	')'            reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	','            reduce using rule 80
	'-'            reduce using rule 80
	'/'            reduce using rule 80
	';'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	']'            reduce using rule 80
	'^'            reduce using rule 80
	'downto'       reduce using rule 80
	'upto'         reduce using rule 80
	'||'           reduce using rule 80


State 112

	RExp10 -> '(' RExp ')' .                            (rule 81)

	'!='           reduce using rule 81
	'%'            reduce using rule 81
	'&&'           reduce using rule 81
	')'            reduce using rule 81
	'*'            reduce using rule 81
	'+'            reduce using rule 81
	','            reduce using rule 81
	'-'            reduce using rule 81
	'/'            reduce using rule 81
	';'            reduce using rule 81
	'<'            reduce using rule 81
	'<='           reduce using rule 81
	'=='           reduce using rule 81
	'>'            reduce using rule 81
	'>='           reduce using rule 81
	']'            reduce using rule 81
	'^'            reduce using rule 81
	'downto'       reduce using rule 81
	'upto'         reduce using rule 81
	'||'           reduce using rule 81


State 113

	LExp4 -> '(' LExp ')' .                             (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'%='           reduce using rule 54
	'&&'           reduce using rule 54
	'&='           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'*='           reduce using rule 54
	'+'            reduce using rule 54
	'++'           reduce using rule 54
	'+='           reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'--'           reduce using rule 54
	'-='           reduce using rule 54
	'/'            reduce using rule 54
	'/='           reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	'^'            reduce using rule 54
	'^='           reduce using rule 54
	'downto'       reduce using rule 54
	'upto'         reduce using rule 54
	'|='           reduce using rule 54
	'||'           reduce using rule 54


State 114

	LExp4 -> '(' LExp . ')'                             (rule 54)

	')'            shift, and enter state 113


State 115

	FDecl -> RType Ident '(' ListParam ')' . Block      (rule 8)

	'{'            shift, and enter state 122

	Block          goto state 121

State 116

	Param -> Type PassBy . Ident                        (rule 9)

	L_ident        shift, and enter state 2

	Ident          goto state 120

State 117

	PassBy -> '&' .                                     (rule 11)

	L_ident        reduce using rule 11


State 118

	ListParam -> Param ',' . ListParam                  (rule 117)

	')'            reduce using rule 115
	'bool'         shift, and enter state 9
	'char'         shift, and enter state 10
	'float'        shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13

	Param          goto state 65
	Type           goto state 66
	Basic          goto state 67
	ListParam      goto state 119

State 119

	ListParam -> Param ',' ListParam .                  (rule 117)

	')'            reduce using rule 117


State 120

	Param -> Type PassBy Ident .                        (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 121

	FDecl -> RType Ident '(' ListParam ')' Block .      (rule 8)

	'bool'         reduce using rule 8
	'char'         reduce using rule 8
	'float'        reduce using rule 8
	'int'          reduce using rule 8
	'string'       reduce using rule 8
	%eof           reduce using rule 8


State 122

	Block -> '{' . ListDList ListStm '}'                (rule 28)

	'('            reduce using rule 124
	'*'            reduce using rule 124
	'++'           reduce using rule 124
	'--'           reduce using rule 124
	'bool'         reduce using rule 124
	'break'        reduce using rule 124
	'char'         reduce using rule 124
	'const'        reduce using rule 124
	'continue'     reduce using rule 124
	'do'           reduce using rule 124
	'float'        reduce using rule 124
	'for'          reduce using rule 124
	'if'           reduce using rule 124
	'int'          reduce using rule 124
	'return'       reduce using rule 124
	'string'       reduce using rule 124
	'while'        reduce using rule 124
	'writeChar'    reduce using rule 124
	'writeFloat'   reduce using rule 124
	'writeInt'     reduce using rule 124
	'writeString'  reduce using rule 124
	'{'            reduce using rule 124
	'}'            reduce using rule 124
	L_ident        reduce using rule 124

	ListDList      goto state 127

State 123

	LExp3 -> LExp3 '[' RExp ']' .                       (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'%='           reduce using rule 53
	'&&'           reduce using rule 53
	'&='           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'*='           reduce using rule 53
	'+'            reduce using rule 53
	'++'           reduce using rule 53
	'+='           reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'--'           reduce using rule 53
	'-='           reduce using rule 53
	'/'            reduce using rule 53
	'/='           reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'^'            reduce using rule 53
	'^='           reduce using rule 53
	'downto'       reduce using rule 53
	'upto'         reduce using rule 53
	'|='           reduce using rule 53
	'||'           reduce using rule 53


State 124

	RExp9 -> Ident '(' ListRExp ')' .                   (rule 79)

	'!='           reduce using rule 79
	'%'            reduce using rule 79
	'&&'           reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	'+'            reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	'/'            reduce using rule 79
	';'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	']'            reduce using rule 79
	'^'            reduce using rule 79
	'downto'       reduce using rule 79
	'upto'         reduce using rule 79
	'||'           reduce using rule 79


State 125

	ListRExp -> RExp ',' . ListRExp                     (rule 129)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 98
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45
	ListRExp       goto state 126

State 126

	ListRExp -> RExp ',' ListRExp .                     (rule 129)

	')'            reduce using rule 129


State 127

	Block -> '{' ListDList . ListStm '}'                (rule 28)
	ListDList -> ListDList . DList                      (rule 125)

	'('            reduce using rule 126
	'*'            reduce using rule 126
	'++'           reduce using rule 126
	'--'           reduce using rule 126
	'bool'         shift, and enter state 9
	'break'        reduce using rule 126
	'char'         shift, and enter state 10
	'const'        shift, and enter state 131
	'continue'     reduce using rule 126
	'do'           reduce using rule 126
	'float'        shift, and enter state 11
	'for'          reduce using rule 126
	'if'           reduce using rule 126
	'int'          shift, and enter state 12
	'return'       reduce using rule 126
	'string'       shift, and enter state 13
	'while'        reduce using rule 126
	'writeChar'    reduce using rule 126
	'writeFloat'   reduce using rule 126
	'writeInt'     reduce using rule 126
	'writeString'  reduce using rule 126
	'{'            reduce using rule 126
	'}'            reduce using rule 126
	L_ident        reduce using rule 126

	DList          goto state 128
	Type           goto state 129
	Basic          goto state 67
	ListStm        goto state 130

State 128

	ListDList -> ListDList DList .                      (rule 125)

	'('            reduce using rule 125
	'*'            reduce using rule 125
	'++'           reduce using rule 125
	'--'           reduce using rule 125
	'bool'         reduce using rule 125
	'break'        reduce using rule 125
	'char'         reduce using rule 125
	'const'        reduce using rule 125
	'continue'     reduce using rule 125
	'do'           reduce using rule 125
	'float'        reduce using rule 125
	'for'          reduce using rule 125
	'if'           reduce using rule 125
	'int'          reduce using rule 125
	'return'       reduce using rule 125
	'string'       reduce using rule 125
	'while'        reduce using rule 125
	'writeChar'    reduce using rule 125
	'writeFloat'   reduce using rule 125
	'writeInt'     reduce using rule 125
	'writeString'  reduce using rule 125
	'{'            reduce using rule 125
	'}'            reduce using rule 125
	L_ident        reduce using rule 125


State 129

	DList -> Type . ListVDecl ';'                       (rule 12)

	L_ident        shift, and enter state 2

	Ident          goto state 153
	VDecl          goto state 154
	ListVDecl      goto state 155

State 130

	Block -> '{' ListDList ListStm . '}'                (rule 28)
	ListStm -> ListStm . Stm                            (rule 127)

	'('            shift, and enter state 71
	'*'            shift, and enter state 49
	'++'           shift, and enter state 51
	'--'           shift, and enter state 53
	'break'        shift, and enter state 141
	'continue'     shift, and enter state 142
	'do'           shift, and enter state 143
	'for'          shift, and enter state 144
	'if'           shift, and enter state 145
	'return'       shift, and enter state 146
	'while'        shift, and enter state 147
	'writeChar'    shift, and enter state 148
	'writeFloat'   shift, and enter state 149
	'writeInt'     shift, and enter state 150
	'writeString'  shift, and enter state 151
	'{'            shift, and enter state 122
	'}'            shift, and enter state 152
	L_ident        shift, and enter state 2

	Ident          goto state 135
	Block          goto state 136
	Stm            goto state 137
	Jump           goto state 138
	LExp           goto state 139
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	PWrite         goto state 140
	IncDecOp       goto state 43

State 131

	DList -> 'const' . ListCDecl ';'                    (rule 13)

	L_ident        shift, and enter state 2

	Ident          goto state 132
	CDecl          goto state 133
	ListCDecl      goto state 134

State 132

	CDecl -> Ident . '=' RExp                           (rule 16)

	'='            shift, and enter state 180


State 133

	ListCDecl -> CDecl .                                (rule 122)
	ListCDecl -> CDecl . ',' ListCDecl                  (rule 123)

	','            shift, and enter state 179
	';'            reduce using rule 122


State 134

	DList -> 'const' ListCDecl . ';'                    (rule 13)

	';'            shift, and enter state 178


State 135

	Stm -> Ident . '(' ListRExp ')' ';'                 (rule 30)
	LExp4 -> Ident .                                    (rule 55)

	'%='           reduce using rule 55
	'&='           reduce using rule 55
	'('            shift, and enter state 177
	'*='           reduce using rule 55
	'++'           reduce using rule 55
	'+='           reduce using rule 55
	'--'           reduce using rule 55
	'-='           reduce using rule 55
	'/='           reduce using rule 55
	';'            reduce using rule 55
	'='            reduce using rule 55
	'['            reduce using rule 55
	'^='           reduce using rule 55
	'|='           reduce using rule 55


State 136

	Stm -> Block .                                      (rule 29)

	'('            reduce using rule 29
	'*'            reduce using rule 29
	'++'           reduce using rule 29
	'--'           reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'do'           reduce using rule 29
	'else'         reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'return'       reduce using rule 29
	'while'        reduce using rule 29
	'writeChar'    reduce using rule 29
	'writeFloat'   reduce using rule 29
	'writeInt'     reduce using rule 29
	'writeString'  reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_ident        reduce using rule 29


State 137

	ListStm -> ListStm Stm .                            (rule 127)

	'('            reduce using rule 127
	'*'            reduce using rule 127
	'++'           reduce using rule 127
	'--'           reduce using rule 127
	'break'        reduce using rule 127
	'continue'     reduce using rule 127
	'do'           reduce using rule 127
	'for'          reduce using rule 127
	'if'           reduce using rule 127
	'return'       reduce using rule 127
	'while'        reduce using rule 127
	'writeChar'    reduce using rule 127
	'writeFloat'   reduce using rule 127
	'writeInt'     reduce using rule 127
	'writeString'  reduce using rule 127
	'{'            reduce using rule 127
	'}'            reduce using rule 127
	L_ident        reduce using rule 127


State 138

	Stm -> Jump . ';'                                   (rule 39)

	';'            shift, and enter state 176


State 139

	Stm -> LExp . AssignOp RExp ';'                     (rule 32)
	Stm -> LExp . ';'                                   (rule 33)

	'%='           shift, and enter state 166
	'&='           shift, and enter state 167
	'*='           shift, and enter state 168
	'+='           shift, and enter state 169
	'-='           shift, and enter state 170
	'/='           shift, and enter state 171
	';'            shift, and enter state 172
	'='            shift, and enter state 173
	'^='           shift, and enter state 174
	'|='           shift, and enter state 175

	AssignOp       goto state 165

State 140

	Stm -> PWrite . '(' RExp ')' ';'                    (rule 31)

	'('            shift, and enter state 164


State 141

	Jump -> 'break' .                                   (rule 44)

	';'            reduce using rule 44


State 142

	Jump -> 'continue' .                                (rule 45)

	';'            reduce using rule 45


State 143

	Stm -> 'do' . Stm 'while' '(' RExp ')' ';'          (rule 37)

	'('            shift, and enter state 71
	'*'            shift, and enter state 49
	'++'           shift, and enter state 51
	'--'           shift, and enter state 53
	'break'        shift, and enter state 141
	'continue'     shift, and enter state 142
	'do'           shift, and enter state 143
	'for'          shift, and enter state 144
	'if'           shift, and enter state 145
	'return'       shift, and enter state 146
	'while'        shift, and enter state 147
	'writeChar'    shift, and enter state 148
	'writeFloat'   shift, and enter state 149
	'writeInt'     shift, and enter state 150
	'writeString'  shift, and enter state 151
	'{'            shift, and enter state 122
	L_ident        shift, and enter state 2

	Ident          goto state 135
	Block          goto state 136
	Stm            goto state 163
	Jump           goto state 138
	LExp           goto state 139
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	PWrite         goto state 140
	IncDecOp       goto state 43

State 144

	Stm -> 'for' . '(' Ident '=' RExp Dir RExp ')' Stm    (rule 38)

	'('            shift, and enter state 162


State 145

	Stm -> 'if' . '(' RExp ')' Stm                      (rule 34)
	Stm -> 'if' . '(' RExp ')' Stm 'else' Stm           (rule 35)

	'('            shift, and enter state 161


State 146

	Jump -> 'return' .                                  (rule 42)
	Jump -> 'return' . RExp                             (rule 43)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	';'            reduce using rule 42
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 160
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 147

	Stm -> 'while' . '(' RExp ')' Stm                   (rule 36)

	'('            shift, and enter state 159


State 148

	PWrite -> 'writeChar' .                             (rule 87)

	'('            reduce using rule 87


State 149

	PWrite -> 'writeFloat' .                            (rule 89)

	'('            reduce using rule 89


State 150

	PWrite -> 'writeInt' .                              (rule 88)

	'('            reduce using rule 88


State 151

	PWrite -> 'writeString' .                           (rule 90)

	'('            reduce using rule 90


State 152

	Block -> '{' ListDList ListStm '}' .                (rule 28)

	'('            reduce using rule 28
	'*'            reduce using rule 28
	'++'           reduce using rule 28
	'--'           reduce using rule 28
	'bool'         reduce using rule 28
	'break'        reduce using rule 28
	'char'         reduce using rule 28
	'continue'     reduce using rule 28
	'do'           reduce using rule 28
	'else'         reduce using rule 28
	'float'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'while'        reduce using rule 28
	'writeChar'    reduce using rule 28
	'writeFloat'   reduce using rule 28
	'writeInt'     reduce using rule 28
	'writeString'  reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_ident        reduce using rule 28
	%eof           reduce using rule 28


State 153

	VDecl -> Ident .                                    (rule 14)
	VDecl -> Ident . '=' RExp                           (rule 15)

	','            reduce using rule 14
	';'            reduce using rule 14
	'='            shift, and enter state 158


State 154

	ListVDecl -> VDecl .                                (rule 120)
	ListVDecl -> VDecl . ',' ListVDecl                  (rule 121)

	','            shift, and enter state 157
	';'            reduce using rule 120


State 155

	DList -> Type ListVDecl . ';'                       (rule 12)

	';'            shift, and enter state 156


State 156

	DList -> Type ListVDecl ';' .                       (rule 12)

	'('            reduce using rule 12
	'*'            reduce using rule 12
	'++'           reduce using rule 12
	'--'           reduce using rule 12
	'bool'         reduce using rule 12
	'break'        reduce using rule 12
	'char'         reduce using rule 12
	'const'        reduce using rule 12
	'continue'     reduce using rule 12
	'do'           reduce using rule 12
	'float'        reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'return'       reduce using rule 12
	'string'       reduce using rule 12
	'while'        reduce using rule 12
	'writeChar'    reduce using rule 12
	'writeFloat'   reduce using rule 12
	'writeInt'     reduce using rule 12
	'writeString'  reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_ident        reduce using rule 12


State 157

	ListVDecl -> VDecl ',' . ListVDecl                  (rule 121)

	L_ident        shift, and enter state 2

	Ident          goto state 153
	VDecl          goto state 154
	ListVDecl      goto state 191

State 158

	VDecl -> Ident '=' . RExp                           (rule 15)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 190
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 159

	Stm -> 'while' '(' . RExp ')' Stm                   (rule 36)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 189
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 160

	Jump -> 'return' RExp .                             (rule 43)
	RExp -> RExp . '||' RExp1                           (rule 57)

	';'            reduce using rule 43
	'||'           shift, and enter state 94


State 161

	Stm -> 'if' '(' . RExp ')' Stm                      (rule 34)
	Stm -> 'if' '(' . RExp ')' Stm 'else' Stm           (rule 35)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 188
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 162

	Stm -> 'for' '(' . Ident '=' RExp Dir RExp ')' Stm    (rule 38)

	L_ident        shift, and enter state 2

	Ident          goto state 187

State 163

	Stm -> 'do' Stm . 'while' '(' RExp ')' ';'          (rule 37)

	'while'        shift, and enter state 186


State 164

	Stm -> PWrite '(' . RExp ')' ';'                    (rule 31)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 185
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 165

	Stm -> LExp AssignOp . RExp ';'                     (rule 32)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 184
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 166

	AssignOp -> '%=' .                                  (rule 96)

	'!'            reduce using rule 96
	'&'            reduce using rule 96
	'('            reduce using rule 96
	'*'            reduce using rule 96
	'+'            reduce using rule 96
	'++'           reduce using rule 96
	'-'            reduce using rule 96
	'--'           reduce using rule 96
	'readChar'     reduce using rule 96
	'readFloat'    reduce using rule 96
	'readInt'      reduce using rule 96
	'readString'   reduce using rule 96
	L_ident        reduce using rule 96
	L_charac       reduce using rule 96
	L_integ        reduce using rule 96
	L_doubl        reduce using rule 96
	L_quoted       reduce using rule 96
	L_Boolean      reduce using rule 96


State 167

	AssignOp -> '&=' .                                  (rule 98)

	'!'            reduce using rule 98
	'&'            reduce using rule 98
	'('            reduce using rule 98
	'*'            reduce using rule 98
	'+'            reduce using rule 98
	'++'           reduce using rule 98
	'-'            reduce using rule 98
	'--'           reduce using rule 98
	'readChar'     reduce using rule 98
	'readFloat'    reduce using rule 98
	'readInt'      reduce using rule 98
	'readString'   reduce using rule 98
	L_ident        reduce using rule 98
	L_charac       reduce using rule 98
	L_integ        reduce using rule 98
	L_doubl        reduce using rule 98
	L_quoted       reduce using rule 98
	L_Boolean      reduce using rule 98


State 168

	AssignOp -> '*=' .                                  (rule 94)

	'!'            reduce using rule 94
	'&'            reduce using rule 94
	'('            reduce using rule 94
	'*'            reduce using rule 94
	'+'            reduce using rule 94
	'++'           reduce using rule 94
	'-'            reduce using rule 94
	'--'           reduce using rule 94
	'readChar'     reduce using rule 94
	'readFloat'    reduce using rule 94
	'readInt'      reduce using rule 94
	'readString'   reduce using rule 94
	L_ident        reduce using rule 94
	L_charac       reduce using rule 94
	L_integ        reduce using rule 94
	L_doubl        reduce using rule 94
	L_quoted       reduce using rule 94
	L_Boolean      reduce using rule 94


State 169

	AssignOp -> '+=' .                                  (rule 92)

	'!'            reduce using rule 92
	'&'            reduce using rule 92
	'('            reduce using rule 92
	'*'            reduce using rule 92
	'+'            reduce using rule 92
	'++'           reduce using rule 92
	'-'            reduce using rule 92
	'--'           reduce using rule 92
	'readChar'     reduce using rule 92
	'readFloat'    reduce using rule 92
	'readInt'      reduce using rule 92
	'readString'   reduce using rule 92
	L_ident        reduce using rule 92
	L_charac       reduce using rule 92
	L_integ        reduce using rule 92
	L_doubl        reduce using rule 92
	L_quoted       reduce using rule 92
	L_Boolean      reduce using rule 92


State 170

	AssignOp -> '-=' .                                  (rule 93)

	'!'            reduce using rule 93
	'&'            reduce using rule 93
	'('            reduce using rule 93
	'*'            reduce using rule 93
	'+'            reduce using rule 93
	'++'           reduce using rule 93
	'-'            reduce using rule 93
	'--'           reduce using rule 93
	'readChar'     reduce using rule 93
	'readFloat'    reduce using rule 93
	'readInt'      reduce using rule 93
	'readString'   reduce using rule 93
	L_ident        reduce using rule 93
	L_charac       reduce using rule 93
	L_integ        reduce using rule 93
	L_doubl        reduce using rule 93
	L_quoted       reduce using rule 93
	L_Boolean      reduce using rule 93


State 171

	AssignOp -> '/=' .                                  (rule 95)

	'!'            reduce using rule 95
	'&'            reduce using rule 95
	'('            reduce using rule 95
	'*'            reduce using rule 95
	'+'            reduce using rule 95
	'++'           reduce using rule 95
	'-'            reduce using rule 95
	'--'           reduce using rule 95
	'readChar'     reduce using rule 95
	'readFloat'    reduce using rule 95
	'readInt'      reduce using rule 95
	'readString'   reduce using rule 95
	L_ident        reduce using rule 95
	L_charac       reduce using rule 95
	L_integ        reduce using rule 95
	L_doubl        reduce using rule 95
	L_quoted       reduce using rule 95
	L_Boolean      reduce using rule 95


State 172

	Stm -> LExp ';' .                                   (rule 33)

	'('            reduce using rule 33
	'*'            reduce using rule 33
	'++'           reduce using rule 33
	'--'           reduce using rule 33
	'break'        reduce using rule 33
	'continue'     reduce using rule 33
	'do'           reduce using rule 33
	'else'         reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'return'       reduce using rule 33
	'while'        reduce using rule 33
	'writeChar'    reduce using rule 33
	'writeFloat'   reduce using rule 33
	'writeInt'     reduce using rule 33
	'writeString'  reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_ident        reduce using rule 33


State 173

	AssignOp -> '=' .                                   (rule 91)

	'!'            reduce using rule 91
	'&'            reduce using rule 91
	'('            reduce using rule 91
	'*'            reduce using rule 91
	'+'            reduce using rule 91
	'++'           reduce using rule 91
	'-'            reduce using rule 91
	'--'           reduce using rule 91
	'readChar'     reduce using rule 91
	'readFloat'    reduce using rule 91
	'readInt'      reduce using rule 91
	'readString'   reduce using rule 91
	L_ident        reduce using rule 91
	L_charac       reduce using rule 91
	L_integ        reduce using rule 91
	L_doubl        reduce using rule 91
	L_quoted       reduce using rule 91
	L_Boolean      reduce using rule 91


State 174

	AssignOp -> '^=' .                                  (rule 97)

	'!'            reduce using rule 97
	'&'            reduce using rule 97
	'('            reduce using rule 97
	'*'            reduce using rule 97
	'+'            reduce using rule 97
	'++'           reduce using rule 97
	'-'            reduce using rule 97
	'--'           reduce using rule 97
	'readChar'     reduce using rule 97
	'readFloat'    reduce using rule 97
	'readInt'      reduce using rule 97
	'readString'   reduce using rule 97
	L_ident        reduce using rule 97
	L_charac       reduce using rule 97
	L_integ        reduce using rule 97
	L_doubl        reduce using rule 97
	L_quoted       reduce using rule 97
	L_Boolean      reduce using rule 97


State 175

	AssignOp -> '|=' .                                  (rule 99)

	'!'            reduce using rule 99
	'&'            reduce using rule 99
	'('            reduce using rule 99
	'*'            reduce using rule 99
	'+'            reduce using rule 99
	'++'           reduce using rule 99
	'-'            reduce using rule 99
	'--'           reduce using rule 99
	'readChar'     reduce using rule 99
	'readFloat'    reduce using rule 99
	'readInt'      reduce using rule 99
	'readString'   reduce using rule 99
	L_ident        reduce using rule 99
	L_charac       reduce using rule 99
	L_integ        reduce using rule 99
	L_doubl        reduce using rule 99
	L_quoted       reduce using rule 99
	L_Boolean      reduce using rule 99


State 176

	Stm -> Jump ';' .                                   (rule 39)

	'('            reduce using rule 39
	'*'            reduce using rule 39
	'++'           reduce using rule 39
	'--'           reduce using rule 39
	'break'        reduce using rule 39
	'continue'     reduce using rule 39
	'do'           reduce using rule 39
	'else'         reduce using rule 39
	'for'          reduce using rule 39
	'if'           reduce using rule 39
	'return'       reduce using rule 39
	'while'        reduce using rule 39
	'writeChar'    reduce using rule 39
	'writeFloat'   reduce using rule 39
	'writeInt'     reduce using rule 39
	'writeString'  reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_ident        reduce using rule 39


State 177

	Stm -> Ident '(' . ListRExp ')' ';'                 (rule 30)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 98
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45
	ListRExp       goto state 183

State 178

	DList -> 'const' ListCDecl ';' .                    (rule 13)

	'('            reduce using rule 13
	'*'            reduce using rule 13
	'++'           reduce using rule 13
	'--'           reduce using rule 13
	'bool'         reduce using rule 13
	'break'        reduce using rule 13
	'char'         reduce using rule 13
	'const'        reduce using rule 13
	'continue'     reduce using rule 13
	'do'           reduce using rule 13
	'float'        reduce using rule 13
	'for'          reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'while'        reduce using rule 13
	'writeChar'    reduce using rule 13
	'writeFloat'   reduce using rule 13
	'writeInt'     reduce using rule 13
	'writeString'  reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_ident        reduce using rule 13


State 179

	ListCDecl -> CDecl ',' . ListCDecl                  (rule 123)

	L_ident        shift, and enter state 2

	Ident          goto state 132
	CDecl          goto state 133
	ListCDecl      goto state 182

State 180

	CDecl -> Ident '=' . RExp                           (rule 16)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 181
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 181

	CDecl -> Ident '=' RExp .                           (rule 16)
	RExp -> RExp . '||' RExp1                           (rule 57)

	','            reduce using rule 16
	';'            reduce using rule 16
	'||'           shift, and enter state 94


State 182

	ListCDecl -> CDecl ',' ListCDecl .                  (rule 123)

	';'            reduce using rule 123


State 183

	Stm -> Ident '(' ListRExp . ')' ';'                 (rule 30)

	')'            shift, and enter state 198


State 184

	Stm -> LExp AssignOp RExp . ';'                     (rule 32)
	RExp -> RExp . '||' RExp1                           (rule 57)

	';'            shift, and enter state 197
	'||'           shift, and enter state 94


State 185

	Stm -> PWrite '(' RExp . ')' ';'                    (rule 31)
	RExp -> RExp . '||' RExp1                           (rule 57)

	')'            shift, and enter state 196
	'||'           shift, and enter state 94


State 186

	Stm -> 'do' Stm 'while' . '(' RExp ')' ';'          (rule 37)

	'('            shift, and enter state 195


State 187

	Stm -> 'for' '(' Ident . '=' RExp Dir RExp ')' Stm    (rule 38)

	'='            shift, and enter state 194


State 188

	Stm -> 'if' '(' RExp . ')' Stm                      (rule 34)
	Stm -> 'if' '(' RExp . ')' Stm 'else' Stm           (rule 35)
	RExp -> RExp . '||' RExp1                           (rule 57)

	')'            shift, and enter state 193
	'||'           shift, and enter state 94


State 189

	Stm -> 'while' '(' RExp . ')' Stm                   (rule 36)
	RExp -> RExp . '||' RExp1                           (rule 57)

	')'            shift, and enter state 192
	'||'           shift, and enter state 94


State 190

	VDecl -> Ident '=' RExp .                           (rule 15)
	RExp -> RExp . '||' RExp1                           (rule 57)

	','            reduce using rule 15
	';'            reduce using rule 15
	'||'           shift, and enter state 94


State 191

	ListVDecl -> VDecl ',' ListVDecl .                  (rule 121)

	';'            reduce using rule 121


State 192

	Stm -> 'while' '(' RExp ')' . Stm                   (rule 36)

	'('            shift, and enter state 71
	'*'            shift, and enter state 49
	'++'           shift, and enter state 51
	'--'           shift, and enter state 53
	'break'        shift, and enter state 141
	'continue'     shift, and enter state 142
	'do'           shift, and enter state 143
	'for'          shift, and enter state 144
	'if'           shift, and enter state 145
	'return'       shift, and enter state 146
	'while'        shift, and enter state 147
	'writeChar'    shift, and enter state 148
	'writeFloat'   shift, and enter state 149
	'writeInt'     shift, and enter state 150
	'writeString'  shift, and enter state 151
	'{'            shift, and enter state 122
	L_ident        shift, and enter state 2

	Ident          goto state 135
	Block          goto state 136
	Stm            goto state 204
	Jump           goto state 138
	LExp           goto state 139
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	PWrite         goto state 140
	IncDecOp       goto state 43

State 193

	Stm -> 'if' '(' RExp ')' . Stm                      (rule 34)
	Stm -> 'if' '(' RExp ')' . Stm 'else' Stm           (rule 35)

	'('            shift, and enter state 71
	'*'            shift, and enter state 49
	'++'           shift, and enter state 51
	'--'           shift, and enter state 53
	'break'        shift, and enter state 141
	'continue'     shift, and enter state 142
	'do'           shift, and enter state 143
	'for'          shift, and enter state 144
	'if'           shift, and enter state 145
	'return'       shift, and enter state 146
	'while'        shift, and enter state 147
	'writeChar'    shift, and enter state 148
	'writeFloat'   shift, and enter state 149
	'writeInt'     shift, and enter state 150
	'writeString'  shift, and enter state 151
	'{'            shift, and enter state 122
	L_ident        shift, and enter state 2

	Ident          goto state 135
	Block          goto state 136
	Stm            goto state 203
	Jump           goto state 138
	LExp           goto state 139
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	PWrite         goto state 140
	IncDecOp       goto state 43

State 194

	Stm -> 'for' '(' Ident '=' . RExp Dir RExp ')' Stm    (rule 38)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 202
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 195

	Stm -> 'do' Stm 'while' '(' . RExp ')' ';'          (rule 37)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 201
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 196

	Stm -> PWrite '(' RExp ')' . ';'                    (rule 31)

	';'            shift, and enter state 200


State 197

	Stm -> LExp AssignOp RExp ';' .                     (rule 32)

	'('            reduce using rule 32
	'*'            reduce using rule 32
	'++'           reduce using rule 32
	'--'           reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'do'           reduce using rule 32
	'else'         reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'return'       reduce using rule 32
	'while'        reduce using rule 32
	'writeChar'    reduce using rule 32
	'writeFloat'   reduce using rule 32
	'writeInt'     reduce using rule 32
	'writeString'  reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_ident        reduce using rule 32


State 198

	Stm -> Ident '(' ListRExp ')' . ';'                 (rule 30)

	';'            shift, and enter state 199


State 199

	Stm -> Ident '(' ListRExp ')' ';' .                 (rule 30)

	'('            reduce using rule 30
	'*'            reduce using rule 30
	'++'           reduce using rule 30
	'--'           reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'do'           reduce using rule 30
	'else'         reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'return'       reduce using rule 30
	'while'        reduce using rule 30
	'writeChar'    reduce using rule 30
	'writeFloat'   reduce using rule 30
	'writeInt'     reduce using rule 30
	'writeString'  reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_ident        reduce using rule 30


State 200

	Stm -> PWrite '(' RExp ')' ';' .                    (rule 31)

	'('            reduce using rule 31
	'*'            reduce using rule 31
	'++'           reduce using rule 31
	'--'           reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'do'           reduce using rule 31
	'else'         reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'return'       reduce using rule 31
	'while'        reduce using rule 31
	'writeChar'    reduce using rule 31
	'writeFloat'   reduce using rule 31
	'writeInt'     reduce using rule 31
	'writeString'  reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31


State 201

	Stm -> 'do' Stm 'while' '(' RExp . ')' ';'          (rule 37)
	RExp -> RExp . '||' RExp1                           (rule 57)

	')'            shift, and enter state 209
	'||'           shift, and enter state 94


State 202

	Stm -> 'for' '(' Ident '=' RExp . Dir RExp ')' Stm    (rule 38)
	RExp -> RExp . '||' RExp1                           (rule 57)

	'downto'       shift, and enter state 207
	'upto'         shift, and enter state 208
	'||'           shift, and enter state 94

	Dir            goto state 206

State 203

	Stm -> 'if' '(' RExp ')' Stm .                      (rule 34)
	Stm -> 'if' '(' RExp ')' Stm . 'else' Stm           (rule 35)

	'('            reduce using rule 34
	'*'            reduce using rule 34
	'++'           reduce using rule 34
	'--'           reduce using rule 34
	'break'        reduce using rule 34
	'continue'     reduce using rule 34
	'do'           reduce using rule 34
	'else'         shift, and enter state 205
			(reduce using rule 34)

	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'return'       reduce using rule 34
	'while'        reduce using rule 34
	'writeChar'    reduce using rule 34
	'writeFloat'   reduce using rule 34
	'writeInt'     reduce using rule 34
	'writeString'  reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_ident        reduce using rule 34


State 204

	Stm -> 'while' '(' RExp ')' Stm .                   (rule 36)

	'('            reduce using rule 36
	'*'            reduce using rule 36
	'++'           reduce using rule 36
	'--'           reduce using rule 36
	'break'        reduce using rule 36
	'continue'     reduce using rule 36
	'do'           reduce using rule 36
	'else'         reduce using rule 36
	'for'          reduce using rule 36
	'if'           reduce using rule 36
	'return'       reduce using rule 36
	'while'        reduce using rule 36
	'writeChar'    reduce using rule 36
	'writeFloat'   reduce using rule 36
	'writeInt'     reduce using rule 36
	'writeString'  reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	L_ident        reduce using rule 36


State 205

	Stm -> 'if' '(' RExp ')' Stm 'else' . Stm           (rule 35)

	'('            shift, and enter state 71
	'*'            shift, and enter state 49
	'++'           shift, and enter state 51
	'--'           shift, and enter state 53
	'break'        shift, and enter state 141
	'continue'     shift, and enter state 142
	'do'           shift, and enter state 143
	'for'          shift, and enter state 144
	'if'           shift, and enter state 145
	'return'       shift, and enter state 146
	'while'        shift, and enter state 147
	'writeChar'    shift, and enter state 148
	'writeFloat'   shift, and enter state 149
	'writeInt'     shift, and enter state 150
	'writeString'  shift, and enter state 151
	'{'            shift, and enter state 122
	L_ident        shift, and enter state 2

	Ident          goto state 135
	Block          goto state 136
	Stm            goto state 212
	Jump           goto state 138
	LExp           goto state 139
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	PWrite         goto state 140
	IncDecOp       goto state 43

State 206

	Stm -> 'for' '(' Ident '=' RExp Dir . RExp ')' Stm    (rule 38)

	'!'            shift, and enter state 46
	'&'            shift, and enter state 47
	'('            shift, and enter state 48
	'*'            shift, and enter state 49
	'+'            shift, and enter state 50
	'++'           shift, and enter state 51
	'-'            shift, and enter state 52
	'--'           shift, and enter state 53
	'readChar'     shift, and enter state 54
	'readFloat'    shift, and enter state 55
	'readInt'      shift, and enter state 56
	'readString'   shift, and enter state 57
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 58
	L_integ        shift, and enter state 59
	L_doubl        shift, and enter state 60
	L_quoted       shift, and enter state 61
	L_Boolean      shift, and enter state 62

	Ident          goto state 20
	Char           goto state 21
	Integer        goto state 22
	Double         goto state 23
	String         goto state 24
	Boolean        goto state 25
	LExp           goto state 26
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	RExp           goto state 211
	RExp1          goto state 32
	RExp2          goto state 33
	RExp3          goto state 34
	RExp4          goto state 35
	RExp5          goto state 36
	RExp6          goto state 37
	RExp7          goto state 38
	RExp8          goto state 39
	RExp9          goto state 40
	RExp10         goto state 41
	PRead          goto state 42
	IncDecOp       goto state 43
	SignOp         goto state 44
	Literal        goto state 45

State 207

	Dir -> 'downto' .                                   (rule 41)

	'!'            reduce using rule 41
	'&'            reduce using rule 41
	'('            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	'++'           reduce using rule 41
	'-'            reduce using rule 41
	'--'           reduce using rule 41
	'readChar'     reduce using rule 41
	'readFloat'    reduce using rule 41
	'readInt'      reduce using rule 41
	'readString'   reduce using rule 41
	L_ident        reduce using rule 41
	L_charac       reduce using rule 41
	L_integ        reduce using rule 41
	L_doubl        reduce using rule 41
	L_quoted       reduce using rule 41
	L_Boolean      reduce using rule 41


State 208

	Dir -> 'upto' .                                     (rule 40)

	'!'            reduce using rule 40
	'&'            reduce using rule 40
	'('            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	'++'           reduce using rule 40
	'-'            reduce using rule 40
	'--'           reduce using rule 40
	'readChar'     reduce using rule 40
	'readFloat'    reduce using rule 40
	'readInt'      reduce using rule 40
	'readString'   reduce using rule 40
	L_ident        reduce using rule 40
	L_charac       reduce using rule 40
	L_integ        reduce using rule 40
	L_doubl        reduce using rule 40
	L_quoted       reduce using rule 40
	L_Boolean      reduce using rule 40


State 209

	Stm -> 'do' Stm 'while' '(' RExp ')' . ';'          (rule 37)

	';'            shift, and enter state 210


State 210

	Stm -> 'do' Stm 'while' '(' RExp ')' ';' .          (rule 37)

	'('            reduce using rule 37
	'*'            reduce using rule 37
	'++'           reduce using rule 37
	'--'           reduce using rule 37
	'break'        reduce using rule 37
	'continue'     reduce using rule 37
	'do'           reduce using rule 37
	'else'         reduce using rule 37
	'for'          reduce using rule 37
	'if'           reduce using rule 37
	'return'       reduce using rule 37
	'while'        reduce using rule 37
	'writeChar'    reduce using rule 37
	'writeFloat'   reduce using rule 37
	'writeInt'     reduce using rule 37
	'writeString'  reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_ident        reduce using rule 37


State 211

	Stm -> 'for' '(' Ident '=' RExp Dir RExp . ')' Stm    (rule 38)
	RExp -> RExp . '||' RExp1                           (rule 57)

	')'            shift, and enter state 213
	'||'           shift, and enter state 94


State 212

	Stm -> 'if' '(' RExp ')' Stm 'else' Stm .           (rule 35)

	'('            reduce using rule 35
	'*'            reduce using rule 35
	'++'           reduce using rule 35
	'--'           reduce using rule 35
	'break'        reduce using rule 35
	'continue'     reduce using rule 35
	'do'           reduce using rule 35
	'else'         reduce using rule 35
	'for'          reduce using rule 35
	'if'           reduce using rule 35
	'return'       reduce using rule 35
	'while'        reduce using rule 35
	'writeChar'    reduce using rule 35
	'writeFloat'   reduce using rule 35
	'writeInt'     reduce using rule 35
	'writeString'  reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_ident        reduce using rule 35


State 213

	Stm -> 'for' '(' Ident '=' RExp Dir RExp ')' . Stm    (rule 38)

	'('            shift, and enter state 71
	'*'            shift, and enter state 49
	'++'           shift, and enter state 51
	'--'           shift, and enter state 53
	'break'        shift, and enter state 141
	'continue'     shift, and enter state 142
	'do'           shift, and enter state 143
	'for'          shift, and enter state 144
	'if'           shift, and enter state 145
	'return'       shift, and enter state 146
	'while'        shift, and enter state 147
	'writeChar'    shift, and enter state 148
	'writeFloat'   shift, and enter state 149
	'writeInt'     shift, and enter state 150
	'writeString'  shift, and enter state 151
	'{'            shift, and enter state 122
	L_ident        shift, and enter state 2

	Ident          goto state 135
	Block          goto state 136
	Stm            goto state 214
	Jump           goto state 138
	LExp           goto state 139
	LExp1          goto state 27
	LExp2          goto state 28
	LExp3          goto state 29
	LExp4          goto state 30
	PWrite         goto state 140
	IncDecOp       goto state 43

State 214

	Stm -> 'for' '(' Ident '=' RExp Dir RExp ')' Stm .    (rule 38)

	'('            reduce using rule 38
	'*'            reduce using rule 38
	'++'           reduce using rule 38
	'--'           reduce using rule 38
	'break'        reduce using rule 38
	'continue'     reduce using rule 38
	'do'           reduce using rule 38
	'else'         reduce using rule 38
	'for'          reduce using rule 38
	'if'           reduce using rule 38
	'return'       reduce using rule 38
	'while'        reduce using rule 38
	'writeChar'    reduce using rule 38
	'writeFloat'   reduce using rule 38
	'writeInt'     reduce using rule 38
	'writeString'  reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	L_ident        reduce using rule 38


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 130
Number of terminals: 65
Number of non-terminals: 52
Number of states: 215
