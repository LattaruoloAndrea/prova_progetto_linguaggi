-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParGarpezpp.y
-----------------------------------------------------------------------------

state 76 contains 1 shift/reduce conflicts.
state 204 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Char -> L_charac                                   (2)
	Integer -> L_integ                                 (3)
	Double -> L_doubl                                  (4)
	String -> L_quoted                                 (5)
	Program -> ListFDecl                               (6)
	FDecl -> RType Ident '(' ListParam ')' Block       (7)
	Param -> Type PassBy Ident                         (8)
	PassBy -> 'val'                                    (9)
	PassBy -> 'ref'                                    (10)
	DList -> Type ListVDecl ';'                        (11)
	DList -> 'const' ListCDecl ';'                     (12)
	VDecl -> Ident                                     (13)
	VDecl -> Ident '=' RExp                            (14)
	CDecl -> Ident '=' RExp                            (15)
	Type -> Basic Compound                             (16)
	Compound ->                                        (17)
	Compound -> Compound '[' RExp ']'                  (18)
	Compound -> Compound '*'                           (19)
	Basic -> 'bool'                                    (20)
	Basic -> 'char'                                    (21)
	Basic -> 'int'                                     (22)
	Basic -> 'float'                                   (23)
	Basic -> 'string'                                  (24)
	RType -> 'void'                                    (25)
	RType -> Basic                                     (26)
	RType -> Type '&'                                  (27)
	Block -> '{' ListDList ListStm '}'                 (28)
	Stm -> Block                                       (29)
	Stm -> Ident '(' ListRExp ')' ';'                  (30)
	Stm -> PWrite '(' RExp ')' ';'                     (31)
	Stm -> LExp AssignOp RExp ';'                      (32)
	Stm -> LExp ';'                                    (33)
	Stm -> 'if' '(' RExp ')' Stm                       (34)
	Stm -> 'if' '(' RExp ')' Stm 'else' Stm            (35)
	Stm -> 'while' '(' RExp ')' Stm                    (36)
	Stm -> 'do' Stm 'while' '(' RExp ')' ';'           (37)
	Stm -> 'for' '(' Ident '=' RExp Dir RExp ')' Stm   (38)
	Stm -> Jump ';'                                    (39)
	Dir -> 'upto'                                      (40)
	Dir -> 'downto'                                    (41)
	Jump -> 'return'                                   (42)
	Jump -> 'return' RExp                              (43)
	Jump -> 'break'                                    (44)
	Jump -> 'continue'                                 (45)
	LExp -> LExp1                                      (46)
	LExp -> '*' LExp                                   (47)
	LExp1 -> LExp2                                     (48)
	LExp1 -> LExp2 IncDecOp                            (49)
	LExp2 -> LExp3                                     (50)
	LExp2 -> IncDecOp LExp3                            (51)
	LExp3 -> LExp4                                     (52)
	LExp3 -> LExp3 '[' RExp ']'                        (53)
	LExp4 -> '(' LExp ')'                              (54)
	LExp4 -> Ident                                     (55)
	RExp -> RExp1                                      (56)
	RExp -> RExp '||' RExp1                            (57)
	RExp1 -> RExp2                                     (58)
	RExp1 -> RExp1 '&&' RExp2                          (59)
	RExp2 -> RExp3                                     (60)
	RExp2 -> '!' RExp3                                 (61)
	RExp3 -> RExp4                                     (62)
	RExp3 -> RExp3 CompOp RExp4                        (63)
	RExp4 -> RExp5                                     (64)
	RExp4 -> RExp4 '+' RExp5                           (65)
	RExp4 -> RExp4 '-' RExp5                           (66)
	RExp5 -> RExp6                                     (67)
	RExp5 -> RExp5 '*' RExp6                           (68)
	RExp5 -> RExp5 '/' RExp6                           (69)
	RExp5 -> RExp5 '%' RExp6                           (70)
	RExp6 -> RExp7                                     (71)
	RExp6 -> RExp7 '^' RExp6                           (72)
	RExp7 -> RExp8                                     (73)
	RExp7 -> SignOp RExp8                              (74)
	RExp7 -> '&' LExp                                  (75)
	RExp8 -> RExp9                                     (76)
	RExp8 -> LExp                                      (77)
	RExp9 -> RExp10                                    (78)
	RExp9 -> '[' ListRExp ']'                          (79)
	RExp9 -> Ident '(' ListRExp ')'                    (80)
	RExp9 -> PRead '(' ')'                             (81)
	RExp10 -> '(' RExp ')'                             (82)
	RExp10 -> Literal                                  (83)
	PRead -> 'readChar'                                (84)
	PRead -> 'readInt'                                 (85)
	PRead -> 'readFloat'                               (86)
	PRead -> 'readString'                              (87)
	PWrite -> 'writeChar'                              (88)
	PWrite -> 'writeInt'                               (89)
	PWrite -> 'writeFloat'                             (90)
	PWrite -> 'writeString'                            (91)
	AssignOp -> '='                                    (92)
	AssignOp -> '+='                                   (93)
	AssignOp -> '-='                                   (94)
	AssignOp -> '*='                                   (95)
	AssignOp -> '/='                                   (96)
	AssignOp -> '%='                                   (97)
	CompOp -> '<'                                      (98)
	CompOp -> '<='                                     (99)
	CompOp -> '=='                                     (100)
	CompOp -> '!='                                     (101)
	CompOp -> '>='                                     (102)
	CompOp -> '>'                                      (103)
	IncDecOp -> '++'                                   (104)
	IncDecOp -> '--'                                   (105)
	SignOp -> '+'                                      (106)
	SignOp -> '-'                                      (107)
	Literal -> Boolean                                 (108)
	Literal -> Char                                    (109)
	Literal -> Integer                                 (110)
	Literal -> Double                                  (111)
	Literal -> String                                  (112)
	Boolean -> 'false'                                 (113)
	Boolean -> 'true'                                  (114)
	ListParam ->                                       (115)
	ListParam -> Param                                 (116)
	ListParam -> Param ',' ListParam                   (117)
	ListFDecl -> FDecl                                 (118)
	ListFDecl -> FDecl ListFDecl                       (119)
	ListVDecl -> VDecl                                 (120)
	ListVDecl -> VDecl ',' ListVDecl                   (121)
	ListCDecl -> CDecl                                 (122)
	ListCDecl -> CDecl ',' ListCDecl                   (123)
	ListDList ->                                       (124)
	ListDList -> ListDList DList                       (125)
	ListStm ->                                         (126)
	ListStm -> ListStm Stm                             (127)
	ListRExp -> RExp                                   (128)
	ListRExp -> RExp ',' ListRExp                      (129)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'%='           { PT _ (TS _ 4) }
	'&'            { PT _ (TS _ 5) }
	'&&'           { PT _ (TS _ 6) }
	'('            { PT _ (TS _ 7) }
	')'            { PT _ (TS _ 8) }
	'*'            { PT _ (TS _ 9) }
	'*='           { PT _ (TS _ 10) }
	'+'            { PT _ (TS _ 11) }
	'++'           { PT _ (TS _ 12) }
	'+='           { PT _ (TS _ 13) }
	','            { PT _ (TS _ 14) }
	'-'            { PT _ (TS _ 15) }
	'--'           { PT _ (TS _ 16) }
	'-='           { PT _ (TS _ 17) }
	'/'            { PT _ (TS _ 18) }
	'/='           { PT _ (TS _ 19) }
	';'            { PT _ (TS _ 20) }
	'<'            { PT _ (TS _ 21) }
	'<='           { PT _ (TS _ 22) }
	'='            { PT _ (TS _ 23) }
	'=='           { PT _ (TS _ 24) }
	'>'            { PT _ (TS _ 25) }
	'>='           { PT _ (TS _ 26) }
	'['            { PT _ (TS _ 27) }
	']'            { PT _ (TS _ 28) }
	'^'            { PT _ (TS _ 29) }
	'bool'         { PT _ (TS _ 30) }
	'break'        { PT _ (TS _ 31) }
	'char'         { PT _ (TS _ 32) }
	'const'        { PT _ (TS _ 33) }
	'continue'     { PT _ (TS _ 34) }
	'do'           { PT _ (TS _ 35) }
	'downto'       { PT _ (TS _ 36) }
	'else'         { PT _ (TS _ 37) }
	'false'        { PT _ (TS _ 38) }
	'float'        { PT _ (TS _ 39) }
	'for'          { PT _ (TS _ 40) }
	'if'           { PT _ (TS _ 41) }
	'int'          { PT _ (TS _ 42) }
	'readChar'     { PT _ (TS _ 43) }
	'readFloat'    { PT _ (TS _ 44) }
	'readInt'      { PT _ (TS _ 45) }
	'readString'   { PT _ (TS _ 46) }
	'ref'          { PT _ (TS _ 47) }
	'return'       { PT _ (TS _ 48) }
	'string'       { PT _ (TS _ 49) }
	'true'         { PT _ (TS _ 50) }
	'upto'         { PT _ (TS _ 51) }
	'val'          { PT _ (TS _ 52) }
	'void'         { PT _ (TS _ 53) }
	'while'        { PT _ (TS _ 54) }
	'writeChar'    { PT _ (TS _ 55) }
	'writeFloat'   { PT _ (TS _ 56) }
	'writeInt'     { PT _ (TS _ 57) }
	'writeString'  { PT _ (TS _ 58) }
	'{'            { PT _ (TS _ 59) }
	'||'           { PT _ (TS _ 60) }
	'}'            { PT _ (TS _ 61) }
	L_ident        { PT _ (TV $$) }
	L_charac       { PT _ (TC $$) }
	L_integ        { PT _ (TI $$) }
	L_doubl        { PT _ (TD $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Char            rule  2
	Integer         rule  3
	Double          rule  4
	String          rule  5
	Program         rule  6
	FDecl           rule  7
	Param           rule  8
	PassBy          rules 9, 10
	DList           rules 11, 12
	VDecl           rules 13, 14
	CDecl           rule  15
	Type            rule  16
	Compound        rules 17, 18, 19
	Basic           rules 20, 21, 22, 23, 24
	RType           rules 25, 26, 27
	Block           rule  28
	Stm             rules 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39
	Dir             rules 40, 41
	Jump            rules 42, 43, 44, 45
	LExp            rules 46, 47
	LExp1           rules 48, 49
	LExp2           rules 50, 51
	LExp3           rules 52, 53
	LExp4           rules 54, 55
	RExp            rules 56, 57
	RExp1           rules 58, 59
	RExp2           rules 60, 61
	RExp3           rules 62, 63
	RExp4           rules 64, 65, 66
	RExp5           rules 67, 68, 69, 70
	RExp6           rules 71, 72
	RExp7           rules 73, 74, 75
	RExp8           rules 76, 77
	RExp9           rules 78, 79, 80, 81
	RExp10          rules 82, 83
	PRead           rules 84, 85, 86, 87
	PWrite          rules 88, 89, 90, 91
	AssignOp        rules 92, 93, 94, 95, 96, 97
	CompOp          rules 98, 99, 100, 101, 102, 103
	IncDecOp        rules 104, 105
	SignOp          rules 106, 107
	Literal         rules 108, 109, 110, 111, 112
	Boolean         rules 113, 114
	ListParam       rules 115, 116, 117
	ListFDecl       rules 118, 119
	ListVDecl       rules 120, 121
	ListCDecl       rules 122, 123
	ListDList       rules 124, 125
	ListStm         rules 126, 127
	ListRExp        rules 128, 129

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'bool'         shift, and enter state 9
	'char'         shift, and enter state 10
	'float'        shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14

	Program        goto state 3
	FDecl          goto state 4
	Type           goto state 5
	Basic          goto state 6
	RType          goto state 7
	ListFDecl      goto state 8

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'%='           reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'*='           reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	'+='           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'-='           reduce using rule 1
	'/'            reduce using rule 1
	'/='           reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'^'            reduce using rule 1
	'downto'       reduce using rule 1
	'upto'         reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListFDecl -> FDecl .                                (rule 118)
	ListFDecl -> FDecl . ListFDecl                      (rule 119)

	'bool'         shift, and enter state 9
	'char'         shift, and enter state 10
	'float'        shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	%eof           reduce using rule 118

	FDecl          goto state 4
	Type           goto state 5
	Basic          goto state 6
	RType          goto state 7
	ListFDecl      goto state 18

State 5

	RType -> Type . '&'                                 (rule 27)

	'&'            shift, and enter state 17


State 6

	Type -> Basic . Compound                            (rule 16)
	RType -> Basic .                                    (rule 26)

	'&'            reduce using rule 17
	'*'            reduce using rule 17
	'['            reduce using rule 17
	L_ident        reduce using rule 26

	Compound       goto state 16

State 7

	FDecl -> RType . Ident '(' ListParam ')' Block      (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 15

State 8

	Program -> ListFDecl .                              (rule 6)

	%eof           reduce using rule 6


State 9

	Basic -> 'bool' .                                   (rule 20)

	'&'            reduce using rule 20
	'*'            reduce using rule 20
	'['            reduce using rule 20
	'ref'          reduce using rule 20
	'val'          reduce using rule 20
	L_ident        reduce using rule 20


State 10

	Basic -> 'char' .                                   (rule 21)

	'&'            reduce using rule 21
	'*'            reduce using rule 21
	'['            reduce using rule 21
	'ref'          reduce using rule 21
	'val'          reduce using rule 21
	L_ident        reduce using rule 21


State 11

	Basic -> 'float' .                                  (rule 23)

	'&'            reduce using rule 23
	'*'            reduce using rule 23
	'['            reduce using rule 23
	'ref'          reduce using rule 23
	'val'          reduce using rule 23
	L_ident        reduce using rule 23


State 12

	Basic -> 'int' .                                    (rule 22)

	'&'            reduce using rule 22
	'*'            reduce using rule 22
	'['            reduce using rule 22
	'ref'          reduce using rule 22
	'val'          reduce using rule 22
	L_ident        reduce using rule 22


State 13

	Basic -> 'string' .                                 (rule 24)

	'&'            reduce using rule 24
	'*'            reduce using rule 24
	'['            reduce using rule 24
	'ref'          reduce using rule 24
	'val'          reduce using rule 24
	L_ident        reduce using rule 24


State 14

	RType -> 'void' .                                   (rule 25)

	L_ident        reduce using rule 25


State 15

	FDecl -> RType Ident . '(' ListParam ')' Block      (rule 7)

	'('            shift, and enter state 21


State 16

	Type -> Basic Compound .                            (rule 16)
	Compound -> Compound . '[' RExp ']'                 (rule 18)
	Compound -> Compound . '*'                          (rule 19)

	'&'            reduce using rule 16
	'*'            shift, and enter state 19
	'['            shift, and enter state 20
	'ref'          reduce using rule 16
	'val'          reduce using rule 16
	L_ident        reduce using rule 16


State 17

	RType -> Type '&' .                                 (rule 27)

	L_ident        reduce using rule 27


State 18

	ListFDecl -> FDecl ListFDecl .                      (rule 119)

	%eof           reduce using rule 119


State 19

	Compound -> Compound '*' .                          (rule 19)

	'&'            reduce using rule 19
	'*'            reduce using rule 19
	'['            reduce using rule 19
	'ref'          reduce using rule 19
	'val'          reduce using rule 19
	L_ident        reduce using rule 19


State 20

	Compound -> Compound '[' . RExp ']'                 (rule 18)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 36
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 21

	FDecl -> RType Ident '(' . ListParam ')' Block      (rule 7)

	')'            reduce using rule 115
	'bool'         shift, and enter state 9
	'char'         shift, and enter state 10
	'float'        shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13

	Param          goto state 22
	Type           goto state 23
	Basic          goto state 24
	ListParam      goto state 25

State 22

	ListParam -> Param .                                (rule 116)
	ListParam -> Param . ',' ListParam                  (rule 117)

	')'            reduce using rule 116
	','            shift, and enter state 106


State 23

	Param -> Type . PassBy Ident                        (rule 8)

	'ref'          shift, and enter state 104
	'val'          shift, and enter state 105

	PassBy         goto state 103

State 24

	Type -> Basic . Compound                            (rule 16)

	'*'            reduce using rule 17
	'['            reduce using rule 17
	'ref'          reduce using rule 17
	'val'          reduce using rule 17
	L_ident        reduce using rule 17

	Compound       goto state 16

State 25

	FDecl -> RType Ident '(' ListParam . ')' Block      (rule 7)

	')'            shift, and enter state 102


State 26

	LExp4 -> Ident .                                    (rule 55)
	RExp9 -> Ident . '(' ListRExp ')'                   (rule 80)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            shift, and enter state 101
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'++'           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'^'            reduce using rule 55
	'downto'       reduce using rule 55
	'upto'         reduce using rule 55
	'||'           reduce using rule 55


State 27

	Literal -> Char .                                   (rule 109)

	'!='           reduce using rule 109
	'%'            reduce using rule 109
	'&&'           reduce using rule 109
	')'            reduce using rule 109
	'*'            reduce using rule 109
	'+'            reduce using rule 109
	','            reduce using rule 109
	'-'            reduce using rule 109
	'/'            reduce using rule 109
	';'            reduce using rule 109
	'<'            reduce using rule 109
	'<='           reduce using rule 109
	'=='           reduce using rule 109
	'>'            reduce using rule 109
	'>='           reduce using rule 109
	']'            reduce using rule 109
	'^'            reduce using rule 109
	'downto'       reduce using rule 109
	'upto'         reduce using rule 109
	'||'           reduce using rule 109


State 28

	Literal -> Integer .                                (rule 110)

	'!='           reduce using rule 110
	'%'            reduce using rule 110
	'&&'           reduce using rule 110
	')'            reduce using rule 110
	'*'            reduce using rule 110
	'+'            reduce using rule 110
	','            reduce using rule 110
	'-'            reduce using rule 110
	'/'            reduce using rule 110
	';'            reduce using rule 110
	'<'            reduce using rule 110
	'<='           reduce using rule 110
	'=='           reduce using rule 110
	'>'            reduce using rule 110
	'>='           reduce using rule 110
	']'            reduce using rule 110
	'^'            reduce using rule 110
	'downto'       reduce using rule 110
	'upto'         reduce using rule 110
	'||'           reduce using rule 110


State 29

	Literal -> Double .                                 (rule 111)

	'!='           reduce using rule 111
	'%'            reduce using rule 111
	'&&'           reduce using rule 111
	')'            reduce using rule 111
	'*'            reduce using rule 111
	'+'            reduce using rule 111
	','            reduce using rule 111
	'-'            reduce using rule 111
	'/'            reduce using rule 111
	';'            reduce using rule 111
	'<'            reduce using rule 111
	'<='           reduce using rule 111
	'=='           reduce using rule 111
	'>'            reduce using rule 111
	'>='           reduce using rule 111
	']'            reduce using rule 111
	'^'            reduce using rule 111
	'downto'       reduce using rule 111
	'upto'         reduce using rule 111
	'||'           reduce using rule 111


State 30

	Literal -> String .                                 (rule 112)

	'!='           reduce using rule 112
	'%'            reduce using rule 112
	'&&'           reduce using rule 112
	')'            reduce using rule 112
	'*'            reduce using rule 112
	'+'            reduce using rule 112
	','            reduce using rule 112
	'-'            reduce using rule 112
	'/'            reduce using rule 112
	';'            reduce using rule 112
	'<'            reduce using rule 112
	'<='           reduce using rule 112
	'=='           reduce using rule 112
	'>'            reduce using rule 112
	'>='           reduce using rule 112
	']'            reduce using rule 112
	'^'            reduce using rule 112
	'downto'       reduce using rule 112
	'upto'         reduce using rule 112
	'||'           reduce using rule 112


State 31

	RExp8 -> LExp .                                     (rule 77)

	'!='           reduce using rule 77
	'%'            reduce using rule 77
	'&&'           reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'+'            reduce using rule 77
	','            reduce using rule 77
	'-'            reduce using rule 77
	'/'            reduce using rule 77
	';'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	']'            reduce using rule 77
	'^'            reduce using rule 77
	'downto'       reduce using rule 77
	'upto'         reduce using rule 77
	'||'           reduce using rule 77


State 32

	LExp -> LExp1 .                                     (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'%='           reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'*='           reduce using rule 46
	'+'            reduce using rule 46
	'+='           reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'-='           reduce using rule 46
	'/'            reduce using rule 46
	'/='           reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	']'            reduce using rule 46
	'^'            reduce using rule 46
	'downto'       reduce using rule 46
	'upto'         reduce using rule 46
	'||'           reduce using rule 46


State 33

	LExp1 -> LExp2 .                                    (rule 48)
	LExp1 -> LExp2 . IncDecOp                           (rule 49)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'%='           reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'*='           reduce using rule 48
	'+'            reduce using rule 48
	'++'           shift, and enter state 57
	'+='           reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'--'           shift, and enter state 59
	'-='           reduce using rule 48
	'/'            reduce using rule 48
	'/='           reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	']'            reduce using rule 48
	'^'            reduce using rule 48
	'downto'       reduce using rule 48
	'upto'         reduce using rule 48
	'||'           reduce using rule 48

	IncDecOp       goto state 100

State 34

	LExp2 -> LExp3 .                                    (rule 50)
	LExp3 -> LExp3 . '[' RExp ']'                       (rule 53)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'%='           reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'*='           reduce using rule 50
	'+'            reduce using rule 50
	'++'           reduce using rule 50
	'+='           reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'--'           reduce using rule 50
	'-='           reduce using rule 50
	'/'            reduce using rule 50
	'/='           reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            shift, and enter state 99
	']'            reduce using rule 50
	'^'            reduce using rule 50
	'downto'       reduce using rule 50
	'upto'         reduce using rule 50
	'||'           reduce using rule 50


State 35

	LExp3 -> LExp4 .                                    (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'%='           reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'*='           reduce using rule 52
	'+'            reduce using rule 52
	'++'           reduce using rule 52
	'+='           reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'--'           reduce using rule 52
	'-='           reduce using rule 52
	'/'            reduce using rule 52
	'/='           reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'^'            reduce using rule 52
	'downto'       reduce using rule 52
	'upto'         reduce using rule 52
	'||'           reduce using rule 52


State 36

	Compound -> Compound '[' RExp . ']'                 (rule 18)
	RExp -> RExp . '||' RExp1                           (rule 57)

	']'            shift, and enter state 97
	'||'           shift, and enter state 98


State 37

	RExp -> RExp1 .                                     (rule 56)
	RExp1 -> RExp1 . '&&' RExp2                         (rule 59)

	'&&'           shift, and enter state 96
	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	']'            reduce using rule 56
	'downto'       reduce using rule 56
	'upto'         reduce using rule 56
	'||'           reduce using rule 56


State 38

	RExp1 -> RExp2 .                                    (rule 58)

	'&&'           reduce using rule 58
	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	']'            reduce using rule 58
	'downto'       reduce using rule 58
	'upto'         reduce using rule 58
	'||'           reduce using rule 58


State 39

	RExp2 -> RExp3 .                                    (rule 60)
	RExp3 -> RExp3 . CompOp RExp4                       (rule 63)

	'!='           shift, and enter state 90
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	'<'            shift, and enter state 91
	'<='           shift, and enter state 92
	'=='           shift, and enter state 93
	'>'            shift, and enter state 94
	'>='           shift, and enter state 95
	']'            reduce using rule 60
	'downto'       reduce using rule 60
	'upto'         reduce using rule 60
	'||'           reduce using rule 60

	CompOp         goto state 89

State 40

	RExp3 -> RExp4 .                                    (rule 62)
	RExp4 -> RExp4 . '+' RExp5                          (rule 65)
	RExp4 -> RExp4 . '-' RExp5                          (rule 66)

	'!='           reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'+'            shift, and enter state 87
	','            reduce using rule 62
	'-'            shift, and enter state 88
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'downto'       reduce using rule 62
	'upto'         reduce using rule 62
	'||'           reduce using rule 62


State 41

	RExp4 -> RExp5 .                                    (rule 64)
	RExp5 -> RExp5 . '*' RExp6                          (rule 68)
	RExp5 -> RExp5 . '/' RExp6                          (rule 69)
	RExp5 -> RExp5 . '%' RExp6                          (rule 70)

	'!='           reduce using rule 64
	'%'            shift, and enter state 84
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            shift, and enter state 85
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            shift, and enter state 86
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'downto'       reduce using rule 64
	'upto'         reduce using rule 64
	'||'           reduce using rule 64


State 42

	RExp5 -> RExp6 .                                    (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'downto'       reduce using rule 67
	'upto'         reduce using rule 67
	'||'           reduce using rule 67


State 43

	RExp6 -> RExp7 .                                    (rule 71)
	RExp6 -> RExp7 . '^' RExp6                          (rule 72)

	'!='           reduce using rule 71
	'%'            reduce using rule 71
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'+'            reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'/'            reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	']'            reduce using rule 71
	'^'            shift, and enter state 83
	'downto'       reduce using rule 71
	'upto'         reduce using rule 71
	'||'           reduce using rule 71


State 44

	RExp7 -> RExp8 .                                    (rule 73)

	'!='           reduce using rule 73
	'%'            reduce using rule 73
	'&&'           reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'/'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	']'            reduce using rule 73
	'^'            reduce using rule 73
	'downto'       reduce using rule 73
	'upto'         reduce using rule 73
	'||'           reduce using rule 73


State 45

	RExp8 -> RExp9 .                                    (rule 76)

	'!='           reduce using rule 76
	'%'            reduce using rule 76
	'&&'           reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	'+'            reduce using rule 76
	','            reduce using rule 76
	'-'            reduce using rule 76
	'/'            reduce using rule 76
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	']'            reduce using rule 76
	'^'            reduce using rule 76
	'downto'       reduce using rule 76
	'upto'         reduce using rule 76
	'||'           reduce using rule 76


State 46

	RExp9 -> RExp10 .                                   (rule 78)

	'!='           reduce using rule 78
	'%'            reduce using rule 78
	'&&'           reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'+'            reduce using rule 78
	','            reduce using rule 78
	'-'            reduce using rule 78
	'/'            reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	']'            reduce using rule 78
	'^'            reduce using rule 78
	'downto'       reduce using rule 78
	'upto'         reduce using rule 78
	'||'           reduce using rule 78


State 47

	RExp9 -> PRead . '(' ')'                            (rule 81)

	'('            shift, and enter state 82


State 48

	LExp2 -> IncDecOp . LExp3                           (rule 51)

	'('            shift, and enter state 75
	L_ident        shift, and enter state 2

	Ident          goto state 73
	LExp3          goto state 81
	LExp4          goto state 35

State 49

	RExp7 -> SignOp . RExp8                             (rule 74)

	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'++'           shift, and enter state 57
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp8          goto state 80
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	Literal        goto state 50
	Boolean        goto state 51

State 50

	RExp10 -> Literal .                                 (rule 83)

	'!='           reduce using rule 83
	'%'            reduce using rule 83
	'&&'           reduce using rule 83
	')'            reduce using rule 83
	'*'            reduce using rule 83
	'+'            reduce using rule 83
	','            reduce using rule 83
	'-'            reduce using rule 83
	'/'            reduce using rule 83
	';'            reduce using rule 83
	'<'            reduce using rule 83
	'<='           reduce using rule 83
	'=='           reduce using rule 83
	'>'            reduce using rule 83
	'>='           reduce using rule 83
	']'            reduce using rule 83
	'^'            reduce using rule 83
	'downto'       reduce using rule 83
	'upto'         reduce using rule 83
	'||'           reduce using rule 83


State 51

	Literal -> Boolean .                                (rule 108)

	'!='           reduce using rule 108
	'%'            reduce using rule 108
	'&&'           reduce using rule 108
	')'            reduce using rule 108
	'*'            reduce using rule 108
	'+'            reduce using rule 108
	','            reduce using rule 108
	'-'            reduce using rule 108
	'/'            reduce using rule 108
	';'            reduce using rule 108
	'<'            reduce using rule 108
	'<='           reduce using rule 108
	'=='           reduce using rule 108
	'>'            reduce using rule 108
	'>='           reduce using rule 108
	']'            reduce using rule 108
	'^'            reduce using rule 108
	'downto'       reduce using rule 108
	'upto'         reduce using rule 108
	'||'           reduce using rule 108


State 52

	RExp2 -> '!' . RExp3                                (rule 61)

	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp3          goto state 79
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 53

	RExp7 -> '&' . LExp                                 (rule 75)

	'('            shift, and enter state 75
	'*'            shift, and enter state 55
	'++'           shift, and enter state 57
	'--'           shift, and enter state 59
	L_ident        shift, and enter state 2

	Ident          goto state 73
	LExp           goto state 78
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	IncDecOp       goto state 48

State 54

	LExp4 -> '(' . LExp ')'                             (rule 54)
	RExp10 -> '(' . RExp ')'                            (rule 82)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 76
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 77
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 55

	LExp -> '*' . LExp                                  (rule 47)

	'('            shift, and enter state 75
	'*'            shift, and enter state 55
	'++'           shift, and enter state 57
	'--'           shift, and enter state 59
	L_ident        shift, and enter state 2

	Ident          goto state 73
	LExp           goto state 74
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	IncDecOp       goto state 48

State 56

	SignOp -> '+' .                                     (rule 106)

	'('            reduce using rule 106
	'*'            reduce using rule 106
	'++'           reduce using rule 106
	'--'           reduce using rule 106
	'['            reduce using rule 106
	'false'        reduce using rule 106
	'readChar'     reduce using rule 106
	'readFloat'    reduce using rule 106
	'readInt'      reduce using rule 106
	'readString'   reduce using rule 106
	'true'         reduce using rule 106
	L_ident        reduce using rule 106
	L_charac       reduce using rule 106
	L_integ        reduce using rule 106
	L_doubl        reduce using rule 106
	L_quoted       reduce using rule 106


State 57

	IncDecOp -> '++' .                                  (rule 104)

	'!='           reduce using rule 104
	'%'            reduce using rule 104
	'%='           reduce using rule 104
	'&&'           reduce using rule 104
	'('            reduce using rule 104
	')'            reduce using rule 104
	'*'            reduce using rule 104
	'*='           reduce using rule 104
	'+'            reduce using rule 104
	'+='           reduce using rule 104
	','            reduce using rule 104
	'-'            reduce using rule 104
	'-='           reduce using rule 104
	'/'            reduce using rule 104
	'/='           reduce using rule 104
	';'            reduce using rule 104
	'<'            reduce using rule 104
	'<='           reduce using rule 104
	'='            reduce using rule 104
	'=='           reduce using rule 104
	'>'            reduce using rule 104
	'>='           reduce using rule 104
	']'            reduce using rule 104
	'^'            reduce using rule 104
	'downto'       reduce using rule 104
	'upto'         reduce using rule 104
	'||'           reduce using rule 104
	L_ident        reduce using rule 104


State 58

	SignOp -> '-' .                                     (rule 107)

	'('            reduce using rule 107
	'*'            reduce using rule 107
	'++'           reduce using rule 107
	'--'           reduce using rule 107
	'['            reduce using rule 107
	'false'        reduce using rule 107
	'readChar'     reduce using rule 107
	'readFloat'    reduce using rule 107
	'readInt'      reduce using rule 107
	'readString'   reduce using rule 107
	'true'         reduce using rule 107
	L_ident        reduce using rule 107
	L_charac       reduce using rule 107
	L_integ        reduce using rule 107
	L_doubl        reduce using rule 107
	L_quoted       reduce using rule 107


State 59

	IncDecOp -> '--' .                                  (rule 105)

	'!='           reduce using rule 105
	'%'            reduce using rule 105
	'%='           reduce using rule 105
	'&&'           reduce using rule 105
	'('            reduce using rule 105
	')'            reduce using rule 105
	'*'            reduce using rule 105
	'*='           reduce using rule 105
	'+'            reduce using rule 105
	'+='           reduce using rule 105
	','            reduce using rule 105
	'-'            reduce using rule 105
	'-='           reduce using rule 105
	'/'            reduce using rule 105
	'/='           reduce using rule 105
	';'            reduce using rule 105
	'<'            reduce using rule 105
	'<='           reduce using rule 105
	'='            reduce using rule 105
	'=='           reduce using rule 105
	'>'            reduce using rule 105
	'>='           reduce using rule 105
	']'            reduce using rule 105
	'^'            reduce using rule 105
	'downto'       reduce using rule 105
	'upto'         reduce using rule 105
	'||'           reduce using rule 105
	L_ident        reduce using rule 105


State 60

	RExp9 -> '[' . ListRExp ']'                         (rule 79)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 71
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51
	ListRExp       goto state 72

State 61

	Boolean -> 'false' .                                (rule 113)

	'!='           reduce using rule 113
	'%'            reduce using rule 113
	'&&'           reduce using rule 113
	')'            reduce using rule 113
	'*'            reduce using rule 113
	'+'            reduce using rule 113
	','            reduce using rule 113
	'-'            reduce using rule 113
	'/'            reduce using rule 113
	';'            reduce using rule 113
	'<'            reduce using rule 113
	'<='           reduce using rule 113
	'=='           reduce using rule 113
	'>'            reduce using rule 113
	'>='           reduce using rule 113
	']'            reduce using rule 113
	'^'            reduce using rule 113
	'downto'       reduce using rule 113
	'upto'         reduce using rule 113
	'||'           reduce using rule 113


State 62

	PRead -> 'readChar' .                               (rule 84)

	'('            reduce using rule 84


State 63

	PRead -> 'readFloat' .                              (rule 86)

	'('            reduce using rule 86


State 64

	PRead -> 'readInt' .                                (rule 85)

	'('            reduce using rule 85


State 65

	PRead -> 'readString' .                             (rule 87)

	'('            reduce using rule 87


State 66

	Boolean -> 'true' .                                 (rule 114)

	'!='           reduce using rule 114
	'%'            reduce using rule 114
	'&&'           reduce using rule 114
	')'            reduce using rule 114
	'*'            reduce using rule 114
	'+'            reduce using rule 114
	','            reduce using rule 114
	'-'            reduce using rule 114
	'/'            reduce using rule 114
	';'            reduce using rule 114
	'<'            reduce using rule 114
	'<='           reduce using rule 114
	'=='           reduce using rule 114
	'>'            reduce using rule 114
	'>='           reduce using rule 114
	']'            reduce using rule 114
	'^'            reduce using rule 114
	'downto'       reduce using rule 114
	'upto'         reduce using rule 114
	'||'           reduce using rule 114


State 67

	Char -> L_charac .                                  (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'^'            reduce using rule 2
	'downto'       reduce using rule 2
	'upto'         reduce using rule 2
	'||'           reduce using rule 2


State 68

	Integer -> L_integ .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'^'            reduce using rule 3
	'downto'       reduce using rule 3
	'upto'         reduce using rule 3
	'||'           reduce using rule 3


State 69

	Double -> L_doubl .                                 (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	']'            reduce using rule 4
	'^'            reduce using rule 4
	'downto'       reduce using rule 4
	'upto'         reduce using rule 4
	'||'           reduce using rule 4


State 70

	String -> L_quoted .                                (rule 5)

	'!='           reduce using rule 5
	'%'            reduce using rule 5
	'&&'           reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'+'            reduce using rule 5
	','            reduce using rule 5
	'-'            reduce using rule 5
	'/'            reduce using rule 5
	';'            reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'=='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	']'            reduce using rule 5
	'^'            reduce using rule 5
	'downto'       reduce using rule 5
	'upto'         reduce using rule 5
	'||'           reduce using rule 5


State 71

	RExp -> RExp . '||' RExp1                           (rule 57)
	ListRExp -> RExp .                                  (rule 128)
	ListRExp -> RExp . ',' ListRExp                     (rule 129)

	')'            reduce using rule 128
	','            shift, and enter state 127
	']'            reduce using rule 128
	'||'           shift, and enter state 98


State 72

	RExp9 -> '[' ListRExp . ']'                         (rule 79)

	']'            shift, and enter state 126


State 73

	LExp4 -> Ident .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'%='           reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'*='           reduce using rule 55
	'+'            reduce using rule 55
	'++'           reduce using rule 55
	'+='           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'-='           reduce using rule 55
	'/'            reduce using rule 55
	'/='           reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'^'            reduce using rule 55
	'downto'       reduce using rule 55
	'upto'         reduce using rule 55
	'||'           reduce using rule 55


State 74

	LExp -> '*' LExp .                                  (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'%='           reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'*='           reduce using rule 47
	'+'            reduce using rule 47
	'+='           reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'-='           reduce using rule 47
	'/'            reduce using rule 47
	'/='           reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	']'            reduce using rule 47
	'^'            reduce using rule 47
	'downto'       reduce using rule 47
	'upto'         reduce using rule 47
	'||'           reduce using rule 47


State 75

	LExp4 -> '(' . LExp ')'                             (rule 54)

	'('            shift, and enter state 75
	'*'            shift, and enter state 55
	'++'           shift, and enter state 57
	'--'           shift, and enter state 59
	L_ident        shift, and enter state 2

	Ident          goto state 73
	LExp           goto state 125
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	IncDecOp       goto state 48

State 76

	LExp4 -> '(' LExp . ')'                             (rule 54)
	RExp8 -> LExp .                                     (rule 77)

	'!='           reduce using rule 77
	'%'            reduce using rule 77
	'&&'           reduce using rule 77
	')'            shift, and enter state 124
			(reduce using rule 77)

	'*'            reduce using rule 77
	'+'            reduce using rule 77
	'-'            reduce using rule 77
	'/'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	'^'            reduce using rule 77
	'||'           reduce using rule 77


State 77

	RExp -> RExp . '||' RExp1                           (rule 57)
	RExp10 -> '(' RExp . ')'                            (rule 82)

	')'            shift, and enter state 123
	'||'           shift, and enter state 98


State 78

	RExp7 -> '&' LExp .                                 (rule 75)

	'!='           reduce using rule 75
	'%'            reduce using rule 75
	'&&'           reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	'+'            reduce using rule 75
	','            reduce using rule 75
	'-'            reduce using rule 75
	'/'            reduce using rule 75
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	']'            reduce using rule 75
	'^'            reduce using rule 75
	'downto'       reduce using rule 75
	'upto'         reduce using rule 75
	'||'           reduce using rule 75


State 79

	RExp2 -> '!' RExp3 .                                (rule 61)
	RExp3 -> RExp3 . CompOp RExp4                       (rule 63)

	'!='           shift, and enter state 90
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	'<'            shift, and enter state 91
	'<='           shift, and enter state 92
	'=='           shift, and enter state 93
	'>'            shift, and enter state 94
	'>='           shift, and enter state 95
	']'            reduce using rule 61
	'downto'       reduce using rule 61
	'upto'         reduce using rule 61
	'||'           reduce using rule 61

	CompOp         goto state 89

State 80

	RExp7 -> SignOp RExp8 .                             (rule 74)

	'!='           reduce using rule 74
	'%'            reduce using rule 74
	'&&'           reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'/'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	']'            reduce using rule 74
	'^'            reduce using rule 74
	'downto'       reduce using rule 74
	'upto'         reduce using rule 74
	'||'           reduce using rule 74


State 81

	LExp2 -> IncDecOp LExp3 .                           (rule 51)
	LExp3 -> LExp3 . '[' RExp ']'                       (rule 53)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'%='           reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'*='           reduce using rule 51
	'+'            reduce using rule 51
	'++'           reduce using rule 51
	'+='           reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'--'           reduce using rule 51
	'-='           reduce using rule 51
	'/'            reduce using rule 51
	'/='           reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            shift, and enter state 99
	']'            reduce using rule 51
	'^'            reduce using rule 51
	'downto'       reduce using rule 51
	'upto'         reduce using rule 51
	'||'           reduce using rule 51


State 82

	RExp9 -> PRead '(' . ')'                            (rule 81)

	')'            shift, and enter state 122


State 83

	RExp6 -> RExp7 '^' . RExp6                          (rule 72)

	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp6          goto state 121
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 84

	RExp5 -> RExp5 '%' . RExp6                          (rule 70)

	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp6          goto state 120
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 85

	RExp5 -> RExp5 '*' . RExp6                          (rule 68)

	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp6          goto state 119
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 86

	RExp5 -> RExp5 '/' . RExp6                          (rule 69)

	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp6          goto state 118
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 87

	RExp4 -> RExp4 '+' . RExp5                          (rule 65)

	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp5          goto state 117
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 88

	RExp4 -> RExp4 '-' . RExp5                          (rule 66)

	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp5          goto state 116
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 89

	RExp3 -> RExp3 CompOp . RExp4                       (rule 63)

	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp4          goto state 115
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 90

	CompOp -> '!=' .                                    (rule 101)

	'&'            reduce using rule 101
	'('            reduce using rule 101
	'*'            reduce using rule 101
	'+'            reduce using rule 101
	'++'           reduce using rule 101
	'-'            reduce using rule 101
	'--'           reduce using rule 101
	'['            reduce using rule 101
	'false'        reduce using rule 101
	'readChar'     reduce using rule 101
	'readFloat'    reduce using rule 101
	'readInt'      reduce using rule 101
	'readString'   reduce using rule 101
	'true'         reduce using rule 101
	L_ident        reduce using rule 101
	L_charac       reduce using rule 101
	L_integ        reduce using rule 101
	L_doubl        reduce using rule 101
	L_quoted       reduce using rule 101


State 91

	CompOp -> '<' .                                     (rule 98)

	'&'            reduce using rule 98
	'('            reduce using rule 98
	'*'            reduce using rule 98
	'+'            reduce using rule 98
	'++'           reduce using rule 98
	'-'            reduce using rule 98
	'--'           reduce using rule 98
	'['            reduce using rule 98
	'false'        reduce using rule 98
	'readChar'     reduce using rule 98
	'readFloat'    reduce using rule 98
	'readInt'      reduce using rule 98
	'readString'   reduce using rule 98
	'true'         reduce using rule 98
	L_ident        reduce using rule 98
	L_charac       reduce using rule 98
	L_integ        reduce using rule 98
	L_doubl        reduce using rule 98
	L_quoted       reduce using rule 98


State 92

	CompOp -> '<=' .                                    (rule 99)

	'&'            reduce using rule 99
	'('            reduce using rule 99
	'*'            reduce using rule 99
	'+'            reduce using rule 99
	'++'           reduce using rule 99
	'-'            reduce using rule 99
	'--'           reduce using rule 99
	'['            reduce using rule 99
	'false'        reduce using rule 99
	'readChar'     reduce using rule 99
	'readFloat'    reduce using rule 99
	'readInt'      reduce using rule 99
	'readString'   reduce using rule 99
	'true'         reduce using rule 99
	L_ident        reduce using rule 99
	L_charac       reduce using rule 99
	L_integ        reduce using rule 99
	L_doubl        reduce using rule 99
	L_quoted       reduce using rule 99


State 93

	CompOp -> '==' .                                    (rule 100)

	'&'            reduce using rule 100
	'('            reduce using rule 100
	'*'            reduce using rule 100
	'+'            reduce using rule 100
	'++'           reduce using rule 100
	'-'            reduce using rule 100
	'--'           reduce using rule 100
	'['            reduce using rule 100
	'false'        reduce using rule 100
	'readChar'     reduce using rule 100
	'readFloat'    reduce using rule 100
	'readInt'      reduce using rule 100
	'readString'   reduce using rule 100
	'true'         reduce using rule 100
	L_ident        reduce using rule 100
	L_charac       reduce using rule 100
	L_integ        reduce using rule 100
	L_doubl        reduce using rule 100
	L_quoted       reduce using rule 100


State 94

	CompOp -> '>' .                                     (rule 103)

	'&'            reduce using rule 103
	'('            reduce using rule 103
	'*'            reduce using rule 103
	'+'            reduce using rule 103
	'++'           reduce using rule 103
	'-'            reduce using rule 103
	'--'           reduce using rule 103
	'['            reduce using rule 103
	'false'        reduce using rule 103
	'readChar'     reduce using rule 103
	'readFloat'    reduce using rule 103
	'readInt'      reduce using rule 103
	'readString'   reduce using rule 103
	'true'         reduce using rule 103
	L_ident        reduce using rule 103
	L_charac       reduce using rule 103
	L_integ        reduce using rule 103
	L_doubl        reduce using rule 103
	L_quoted       reduce using rule 103


State 95

	CompOp -> '>=' .                                    (rule 102)

	'&'            reduce using rule 102
	'('            reduce using rule 102
	'*'            reduce using rule 102
	'+'            reduce using rule 102
	'++'           reduce using rule 102
	'-'            reduce using rule 102
	'--'           reduce using rule 102
	'['            reduce using rule 102
	'false'        reduce using rule 102
	'readChar'     reduce using rule 102
	'readFloat'    reduce using rule 102
	'readInt'      reduce using rule 102
	'readString'   reduce using rule 102
	'true'         reduce using rule 102
	L_ident        reduce using rule 102
	L_charac       reduce using rule 102
	L_integ        reduce using rule 102
	L_doubl        reduce using rule 102
	L_quoted       reduce using rule 102


State 96

	RExp1 -> RExp1 '&&' . RExp2                         (rule 59)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp2          goto state 114
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 97

	Compound -> Compound '[' RExp ']' .                 (rule 18)

	'&'            reduce using rule 18
	'*'            reduce using rule 18
	'['            reduce using rule 18
	'ref'          reduce using rule 18
	'val'          reduce using rule 18
	L_ident        reduce using rule 18


State 98

	RExp -> RExp '||' . RExp1                           (rule 57)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp1          goto state 113
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 99

	LExp3 -> LExp3 '[' . RExp ']'                       (rule 53)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 112
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 100

	LExp1 -> LExp2 IncDecOp .                           (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'%='           reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'*='           reduce using rule 49
	'+'            reduce using rule 49
	'+='           reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'-='           reduce using rule 49
	'/'            reduce using rule 49
	'/='           reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'^'            reduce using rule 49
	'downto'       reduce using rule 49
	'upto'         reduce using rule 49
	'||'           reduce using rule 49


State 101

	RExp9 -> Ident '(' . ListRExp ')'                   (rule 80)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 71
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51
	ListRExp       goto state 111

State 102

	FDecl -> RType Ident '(' ListParam ')' . Block      (rule 7)

	'{'            shift, and enter state 110

	Block          goto state 109

State 103

	Param -> Type PassBy . Ident                        (rule 8)

	L_ident        shift, and enter state 2

	Ident          goto state 108

State 104

	PassBy -> 'ref' .                                   (rule 10)

	L_ident        reduce using rule 10


State 105

	PassBy -> 'val' .                                   (rule 9)

	L_ident        reduce using rule 9


State 106

	ListParam -> Param ',' . ListParam                  (rule 117)

	')'            reduce using rule 115
	'bool'         shift, and enter state 9
	'char'         shift, and enter state 10
	'float'        shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13

	Param          goto state 22
	Type           goto state 23
	Basic          goto state 24
	ListParam      goto state 107

State 107

	ListParam -> Param ',' ListParam .                  (rule 117)

	')'            reduce using rule 117


State 108

	Param -> Type PassBy Ident .                        (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 109

	FDecl -> RType Ident '(' ListParam ')' Block .      (rule 7)

	'bool'         reduce using rule 7
	'char'         reduce using rule 7
	'float'        reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	'void'         reduce using rule 7
	%eof           reduce using rule 7


State 110

	Block -> '{' . ListDList ListStm '}'                (rule 28)

	'('            reduce using rule 124
	'*'            reduce using rule 124
	'++'           reduce using rule 124
	'--'           reduce using rule 124
	'bool'         reduce using rule 124
	'break'        reduce using rule 124
	'char'         reduce using rule 124
	'const'        reduce using rule 124
	'continue'     reduce using rule 124
	'do'           reduce using rule 124
	'float'        reduce using rule 124
	'for'          reduce using rule 124
	'if'           reduce using rule 124
	'int'          reduce using rule 124
	'return'       reduce using rule 124
	'string'       reduce using rule 124
	'while'        reduce using rule 124
	'writeChar'    reduce using rule 124
	'writeFloat'   reduce using rule 124
	'writeInt'     reduce using rule 124
	'writeString'  reduce using rule 124
	'{'            reduce using rule 124
	'}'            reduce using rule 124
	L_ident        reduce using rule 124

	ListDList      goto state 131

State 111

	RExp9 -> Ident '(' ListRExp . ')'                   (rule 80)

	')'            shift, and enter state 130


State 112

	LExp3 -> LExp3 '[' RExp . ']'                       (rule 53)
	RExp -> RExp . '||' RExp1                           (rule 57)

	']'            shift, and enter state 129
	'||'           shift, and enter state 98


State 113

	RExp -> RExp '||' RExp1 .                           (rule 57)
	RExp1 -> RExp1 . '&&' RExp2                         (rule 59)

	'&&'           shift, and enter state 96
	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	']'            reduce using rule 57
	'downto'       reduce using rule 57
	'upto'         reduce using rule 57
	'||'           reduce using rule 57


State 114

	RExp1 -> RExp1 '&&' RExp2 .                         (rule 59)

	'&&'           reduce using rule 59
	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	']'            reduce using rule 59
	'downto'       reduce using rule 59
	'upto'         reduce using rule 59
	'||'           reduce using rule 59


State 115

	RExp3 -> RExp3 CompOp RExp4 .                       (rule 63)
	RExp4 -> RExp4 . '+' RExp5                          (rule 65)
	RExp4 -> RExp4 . '-' RExp5                          (rule 66)

	'!='           reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'+'            shift, and enter state 87
	','            reduce using rule 63
	'-'            shift, and enter state 88
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'downto'       reduce using rule 63
	'upto'         reduce using rule 63
	'||'           reduce using rule 63


State 116

	RExp4 -> RExp4 '-' RExp5 .                          (rule 66)
	RExp5 -> RExp5 . '*' RExp6                          (rule 68)
	RExp5 -> RExp5 . '/' RExp6                          (rule 69)
	RExp5 -> RExp5 . '%' RExp6                          (rule 70)

	'!='           reduce using rule 66
	'%'            shift, and enter state 84
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            shift, and enter state 85
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            shift, and enter state 86
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'downto'       reduce using rule 66
	'upto'         reduce using rule 66
	'||'           reduce using rule 66


State 117

	RExp4 -> RExp4 '+' RExp5 .                          (rule 65)
	RExp5 -> RExp5 . '*' RExp6                          (rule 68)
	RExp5 -> RExp5 . '/' RExp6                          (rule 69)
	RExp5 -> RExp5 . '%' RExp6                          (rule 70)

	'!='           reduce using rule 65
	'%'            shift, and enter state 84
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            shift, and enter state 85
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            shift, and enter state 86
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'downto'       reduce using rule 65
	'upto'         reduce using rule 65
	'||'           reduce using rule 65


State 118

	RExp5 -> RExp5 '/' RExp6 .                          (rule 69)

	'!='           reduce using rule 69
	'%'            reduce using rule 69
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'/'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'downto'       reduce using rule 69
	'upto'         reduce using rule 69
	'||'           reduce using rule 69


State 119

	RExp5 -> RExp5 '*' RExp6 .                          (rule 68)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'downto'       reduce using rule 68
	'upto'         reduce using rule 68
	'||'           reduce using rule 68


State 120

	RExp5 -> RExp5 '%' RExp6 .                          (rule 70)

	'!='           reduce using rule 70
	'%'            reduce using rule 70
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'/'            reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'downto'       reduce using rule 70
	'upto'         reduce using rule 70
	'||'           reduce using rule 70


State 121

	RExp6 -> RExp7 '^' RExp6 .                          (rule 72)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&&'           reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'/'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	']'            reduce using rule 72
	'downto'       reduce using rule 72
	'upto'         reduce using rule 72
	'||'           reduce using rule 72


State 122

	RExp9 -> PRead '(' ')' .                            (rule 81)

	'!='           reduce using rule 81
	'%'            reduce using rule 81
	'&&'           reduce using rule 81
	')'            reduce using rule 81
	'*'            reduce using rule 81
	'+'            reduce using rule 81
	','            reduce using rule 81
	'-'            reduce using rule 81
	'/'            reduce using rule 81
	';'            reduce using rule 81
	'<'            reduce using rule 81
	'<='           reduce using rule 81
	'=='           reduce using rule 81
	'>'            reduce using rule 81
	'>='           reduce using rule 81
	']'            reduce using rule 81
	'^'            reduce using rule 81
	'downto'       reduce using rule 81
	'upto'         reduce using rule 81
	'||'           reduce using rule 81


State 123

	RExp10 -> '(' RExp ')' .                            (rule 82)

	'!='           reduce using rule 82
	'%'            reduce using rule 82
	'&&'           reduce using rule 82
	')'            reduce using rule 82
	'*'            reduce using rule 82
	'+'            reduce using rule 82
	','            reduce using rule 82
	'-'            reduce using rule 82
	'/'            reduce using rule 82
	';'            reduce using rule 82
	'<'            reduce using rule 82
	'<='           reduce using rule 82
	'=='           reduce using rule 82
	'>'            reduce using rule 82
	'>='           reduce using rule 82
	']'            reduce using rule 82
	'^'            reduce using rule 82
	'downto'       reduce using rule 82
	'upto'         reduce using rule 82
	'||'           reduce using rule 82


State 124

	LExp4 -> '(' LExp ')' .                             (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'%='           reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'*='           reduce using rule 54
	'+'            reduce using rule 54
	'++'           reduce using rule 54
	'+='           reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'--'           reduce using rule 54
	'-='           reduce using rule 54
	'/'            reduce using rule 54
	'/='           reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	'^'            reduce using rule 54
	'downto'       reduce using rule 54
	'upto'         reduce using rule 54
	'||'           reduce using rule 54


State 125

	LExp4 -> '(' LExp . ')'                             (rule 54)

	')'            shift, and enter state 124


State 126

	RExp9 -> '[' ListRExp ']' .                         (rule 79)

	'!='           reduce using rule 79
	'%'            reduce using rule 79
	'&&'           reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	'+'            reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	'/'            reduce using rule 79
	';'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	']'            reduce using rule 79
	'^'            reduce using rule 79
	'downto'       reduce using rule 79
	'upto'         reduce using rule 79
	'||'           reduce using rule 79


State 127

	ListRExp -> RExp ',' . ListRExp                     (rule 129)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 71
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51
	ListRExp       goto state 128

State 128

	ListRExp -> RExp ',' ListRExp .                     (rule 129)

	')'            reduce using rule 129
	']'            reduce using rule 129


State 129

	LExp3 -> LExp3 '[' RExp ']' .                       (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'%='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'*='           reduce using rule 53
	'+'            reduce using rule 53
	'++'           reduce using rule 53
	'+='           reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'--'           reduce using rule 53
	'-='           reduce using rule 53
	'/'            reduce using rule 53
	'/='           reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'^'            reduce using rule 53
	'downto'       reduce using rule 53
	'upto'         reduce using rule 53
	'||'           reduce using rule 53


State 130

	RExp9 -> Ident '(' ListRExp ')' .                   (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	')'            reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	','            reduce using rule 80
	'-'            reduce using rule 80
	'/'            reduce using rule 80
	';'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	']'            reduce using rule 80
	'^'            reduce using rule 80
	'downto'       reduce using rule 80
	'upto'         reduce using rule 80
	'||'           reduce using rule 80


State 131

	Block -> '{' ListDList . ListStm '}'                (rule 28)
	ListDList -> ListDList . DList                      (rule 125)

	'('            reduce using rule 126
	'*'            reduce using rule 126
	'++'           reduce using rule 126
	'--'           reduce using rule 126
	'bool'         shift, and enter state 9
	'break'        reduce using rule 126
	'char'         shift, and enter state 10
	'const'        shift, and enter state 135
	'continue'     reduce using rule 126
	'do'           reduce using rule 126
	'float'        shift, and enter state 11
	'for'          reduce using rule 126
	'if'           reduce using rule 126
	'int'          shift, and enter state 12
	'return'       reduce using rule 126
	'string'       shift, and enter state 13
	'while'        reduce using rule 126
	'writeChar'    reduce using rule 126
	'writeFloat'   reduce using rule 126
	'writeInt'     reduce using rule 126
	'writeString'  reduce using rule 126
	'{'            reduce using rule 126
	'}'            reduce using rule 126
	L_ident        reduce using rule 126

	DList          goto state 132
	Type           goto state 133
	Basic          goto state 24
	ListStm        goto state 134

State 132

	ListDList -> ListDList DList .                      (rule 125)

	'('            reduce using rule 125
	'*'            reduce using rule 125
	'++'           reduce using rule 125
	'--'           reduce using rule 125
	'bool'         reduce using rule 125
	'break'        reduce using rule 125
	'char'         reduce using rule 125
	'const'        reduce using rule 125
	'continue'     reduce using rule 125
	'do'           reduce using rule 125
	'float'        reduce using rule 125
	'for'          reduce using rule 125
	'if'           reduce using rule 125
	'int'          reduce using rule 125
	'return'       reduce using rule 125
	'string'       reduce using rule 125
	'while'        reduce using rule 125
	'writeChar'    reduce using rule 125
	'writeFloat'   reduce using rule 125
	'writeInt'     reduce using rule 125
	'writeString'  reduce using rule 125
	'{'            reduce using rule 125
	'}'            reduce using rule 125
	L_ident        reduce using rule 125


State 133

	DList -> Type . ListVDecl ';'                       (rule 11)

	L_ident        shift, and enter state 2

	Ident          goto state 157
	VDecl          goto state 158
	ListVDecl      goto state 159

State 134

	Block -> '{' ListDList ListStm . '}'                (rule 28)
	ListStm -> ListStm . Stm                            (rule 127)

	'('            shift, and enter state 75
	'*'            shift, and enter state 55
	'++'           shift, and enter state 57
	'--'           shift, and enter state 59
	'break'        shift, and enter state 145
	'continue'     shift, and enter state 146
	'do'           shift, and enter state 147
	'for'          shift, and enter state 148
	'if'           shift, and enter state 149
	'return'       shift, and enter state 150
	'while'        shift, and enter state 151
	'writeChar'    shift, and enter state 152
	'writeFloat'   shift, and enter state 153
	'writeInt'     shift, and enter state 154
	'writeString'  shift, and enter state 155
	'{'            shift, and enter state 110
	'}'            shift, and enter state 156
	L_ident        shift, and enter state 2

	Ident          goto state 139
	Block          goto state 140
	Stm            goto state 141
	Jump           goto state 142
	LExp           goto state 143
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	PWrite         goto state 144
	IncDecOp       goto state 48

State 135

	DList -> 'const' . ListCDecl ';'                    (rule 12)

	L_ident        shift, and enter state 2

	Ident          goto state 136
	CDecl          goto state 137
	ListCDecl      goto state 138

State 136

	CDecl -> Ident . '=' RExp                           (rule 15)

	'='            shift, and enter state 181


State 137

	ListCDecl -> CDecl .                                (rule 122)
	ListCDecl -> CDecl . ',' ListCDecl                  (rule 123)

	','            shift, and enter state 180
	';'            reduce using rule 122


State 138

	DList -> 'const' ListCDecl . ';'                    (rule 12)

	';'            shift, and enter state 179


State 139

	Stm -> Ident . '(' ListRExp ')' ';'                 (rule 30)
	LExp4 -> Ident .                                    (rule 55)

	'%='           reduce using rule 55
	'('            shift, and enter state 178
	'*='           reduce using rule 55
	'++'           reduce using rule 55
	'+='           reduce using rule 55
	'--'           reduce using rule 55
	'-='           reduce using rule 55
	'/='           reduce using rule 55
	';'            reduce using rule 55
	'='            reduce using rule 55
	'['            reduce using rule 55


State 140

	Stm -> Block .                                      (rule 29)

	'('            reduce using rule 29
	'*'            reduce using rule 29
	'++'           reduce using rule 29
	'--'           reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'do'           reduce using rule 29
	'else'         reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'return'       reduce using rule 29
	'while'        reduce using rule 29
	'writeChar'    reduce using rule 29
	'writeFloat'   reduce using rule 29
	'writeInt'     reduce using rule 29
	'writeString'  reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_ident        reduce using rule 29


State 141

	ListStm -> ListStm Stm .                            (rule 127)

	'('            reduce using rule 127
	'*'            reduce using rule 127
	'++'           reduce using rule 127
	'--'           reduce using rule 127
	'break'        reduce using rule 127
	'continue'     reduce using rule 127
	'do'           reduce using rule 127
	'for'          reduce using rule 127
	'if'           reduce using rule 127
	'return'       reduce using rule 127
	'while'        reduce using rule 127
	'writeChar'    reduce using rule 127
	'writeFloat'   reduce using rule 127
	'writeInt'     reduce using rule 127
	'writeString'  reduce using rule 127
	'{'            reduce using rule 127
	'}'            reduce using rule 127
	L_ident        reduce using rule 127


State 142

	Stm -> Jump . ';'                                   (rule 39)

	';'            shift, and enter state 177


State 143

	Stm -> LExp . AssignOp RExp ';'                     (rule 32)
	Stm -> LExp . ';'                                   (rule 33)

	'%='           shift, and enter state 170
	'*='           shift, and enter state 171
	'+='           shift, and enter state 172
	'-='           shift, and enter state 173
	'/='           shift, and enter state 174
	';'            shift, and enter state 175
	'='            shift, and enter state 176

	AssignOp       goto state 169

State 144

	Stm -> PWrite . '(' RExp ')' ';'                    (rule 31)

	'('            shift, and enter state 168


State 145

	Jump -> 'break' .                                   (rule 44)

	';'            reduce using rule 44


State 146

	Jump -> 'continue' .                                (rule 45)

	';'            reduce using rule 45


State 147

	Stm -> 'do' . Stm 'while' '(' RExp ')' ';'          (rule 37)

	'('            shift, and enter state 75
	'*'            shift, and enter state 55
	'++'           shift, and enter state 57
	'--'           shift, and enter state 59
	'break'        shift, and enter state 145
	'continue'     shift, and enter state 146
	'do'           shift, and enter state 147
	'for'          shift, and enter state 148
	'if'           shift, and enter state 149
	'return'       shift, and enter state 150
	'while'        shift, and enter state 151
	'writeChar'    shift, and enter state 152
	'writeFloat'   shift, and enter state 153
	'writeInt'     shift, and enter state 154
	'writeString'  shift, and enter state 155
	'{'            shift, and enter state 110
	L_ident        shift, and enter state 2

	Ident          goto state 139
	Block          goto state 140
	Stm            goto state 167
	Jump           goto state 142
	LExp           goto state 143
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	PWrite         goto state 144
	IncDecOp       goto state 48

State 148

	Stm -> 'for' . '(' Ident '=' RExp Dir RExp ')' Stm    (rule 38)

	'('            shift, and enter state 166


State 149

	Stm -> 'if' . '(' RExp ')' Stm                      (rule 34)
	Stm -> 'if' . '(' RExp ')' Stm 'else' Stm           (rule 35)

	'('            shift, and enter state 165


State 150

	Jump -> 'return' .                                  (rule 42)
	Jump -> 'return' . RExp                             (rule 43)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	';'            reduce using rule 42
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 164
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 151

	Stm -> 'while' . '(' RExp ')' Stm                   (rule 36)

	'('            shift, and enter state 163


State 152

	PWrite -> 'writeChar' .                             (rule 88)

	'('            reduce using rule 88


State 153

	PWrite -> 'writeFloat' .                            (rule 90)

	'('            reduce using rule 90


State 154

	PWrite -> 'writeInt' .                              (rule 89)

	'('            reduce using rule 89


State 155

	PWrite -> 'writeString' .                           (rule 91)

	'('            reduce using rule 91


State 156

	Block -> '{' ListDList ListStm '}' .                (rule 28)

	'('            reduce using rule 28
	'*'            reduce using rule 28
	'++'           reduce using rule 28
	'--'           reduce using rule 28
	'bool'         reduce using rule 28
	'break'        reduce using rule 28
	'char'         reduce using rule 28
	'continue'     reduce using rule 28
	'do'           reduce using rule 28
	'else'         reduce using rule 28
	'float'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'writeChar'    reduce using rule 28
	'writeFloat'   reduce using rule 28
	'writeInt'     reduce using rule 28
	'writeString'  reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_ident        reduce using rule 28
	%eof           reduce using rule 28


State 157

	VDecl -> Ident .                                    (rule 13)
	VDecl -> Ident . '=' RExp                           (rule 14)

	','            reduce using rule 13
	';'            reduce using rule 13
	'='            shift, and enter state 162


State 158

	ListVDecl -> VDecl .                                (rule 120)
	ListVDecl -> VDecl . ',' ListVDecl                  (rule 121)

	','            shift, and enter state 161
	';'            reduce using rule 120


State 159

	DList -> Type ListVDecl . ';'                       (rule 11)

	';'            shift, and enter state 160


State 160

	DList -> Type ListVDecl ';' .                       (rule 11)

	'('            reduce using rule 11
	'*'            reduce using rule 11
	'++'           reduce using rule 11
	'--'           reduce using rule 11
	'bool'         reduce using rule 11
	'break'        reduce using rule 11
	'char'         reduce using rule 11
	'const'        reduce using rule 11
	'continue'     reduce using rule 11
	'do'           reduce using rule 11
	'float'        reduce using rule 11
	'for'          reduce using rule 11
	'if'           reduce using rule 11
	'int'          reduce using rule 11
	'return'       reduce using rule 11
	'string'       reduce using rule 11
	'while'        reduce using rule 11
	'writeChar'    reduce using rule 11
	'writeFloat'   reduce using rule 11
	'writeInt'     reduce using rule 11
	'writeString'  reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	L_ident        reduce using rule 11


State 161

	ListVDecl -> VDecl ',' . ListVDecl                  (rule 121)

	L_ident        shift, and enter state 2

	Ident          goto state 157
	VDecl          goto state 158
	ListVDecl      goto state 192

State 162

	VDecl -> Ident '=' . RExp                           (rule 14)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 191
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 163

	Stm -> 'while' '(' . RExp ')' Stm                   (rule 36)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 190
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 164

	Jump -> 'return' RExp .                             (rule 43)
	RExp -> RExp . '||' RExp1                           (rule 57)

	';'            reduce using rule 43
	'||'           shift, and enter state 98


State 165

	Stm -> 'if' '(' . RExp ')' Stm                      (rule 34)
	Stm -> 'if' '(' . RExp ')' Stm 'else' Stm           (rule 35)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 189
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 166

	Stm -> 'for' '(' . Ident '=' RExp Dir RExp ')' Stm    (rule 38)

	L_ident        shift, and enter state 2

	Ident          goto state 188

State 167

	Stm -> 'do' Stm . 'while' '(' RExp ')' ';'          (rule 37)

	'while'        shift, and enter state 187


State 168

	Stm -> PWrite '(' . RExp ')' ';'                    (rule 31)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 186
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 169

	Stm -> LExp AssignOp . RExp ';'                     (rule 32)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 185
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 170

	AssignOp -> '%=' .                                  (rule 97)

	'!'            reduce using rule 97
	'&'            reduce using rule 97
	'('            reduce using rule 97
	'*'            reduce using rule 97
	'+'            reduce using rule 97
	'++'           reduce using rule 97
	'-'            reduce using rule 97
	'--'           reduce using rule 97
	'['            reduce using rule 97
	'false'        reduce using rule 97
	'readChar'     reduce using rule 97
	'readFloat'    reduce using rule 97
	'readInt'      reduce using rule 97
	'readString'   reduce using rule 97
	'true'         reduce using rule 97
	L_ident        reduce using rule 97
	L_charac       reduce using rule 97
	L_integ        reduce using rule 97
	L_doubl        reduce using rule 97
	L_quoted       reduce using rule 97


State 171

	AssignOp -> '*=' .                                  (rule 95)

	'!'            reduce using rule 95
	'&'            reduce using rule 95
	'('            reduce using rule 95
	'*'            reduce using rule 95
	'+'            reduce using rule 95
	'++'           reduce using rule 95
	'-'            reduce using rule 95
	'--'           reduce using rule 95
	'['            reduce using rule 95
	'false'        reduce using rule 95
	'readChar'     reduce using rule 95
	'readFloat'    reduce using rule 95
	'readInt'      reduce using rule 95
	'readString'   reduce using rule 95
	'true'         reduce using rule 95
	L_ident        reduce using rule 95
	L_charac       reduce using rule 95
	L_integ        reduce using rule 95
	L_doubl        reduce using rule 95
	L_quoted       reduce using rule 95


State 172

	AssignOp -> '+=' .                                  (rule 93)

	'!'            reduce using rule 93
	'&'            reduce using rule 93
	'('            reduce using rule 93
	'*'            reduce using rule 93
	'+'            reduce using rule 93
	'++'           reduce using rule 93
	'-'            reduce using rule 93
	'--'           reduce using rule 93
	'['            reduce using rule 93
	'false'        reduce using rule 93
	'readChar'     reduce using rule 93
	'readFloat'    reduce using rule 93
	'readInt'      reduce using rule 93
	'readString'   reduce using rule 93
	'true'         reduce using rule 93
	L_ident        reduce using rule 93
	L_charac       reduce using rule 93
	L_integ        reduce using rule 93
	L_doubl        reduce using rule 93
	L_quoted       reduce using rule 93


State 173

	AssignOp -> '-=' .                                  (rule 94)

	'!'            reduce using rule 94
	'&'            reduce using rule 94
	'('            reduce using rule 94
	'*'            reduce using rule 94
	'+'            reduce using rule 94
	'++'           reduce using rule 94
	'-'            reduce using rule 94
	'--'           reduce using rule 94
	'['            reduce using rule 94
	'false'        reduce using rule 94
	'readChar'     reduce using rule 94
	'readFloat'    reduce using rule 94
	'readInt'      reduce using rule 94
	'readString'   reduce using rule 94
	'true'         reduce using rule 94
	L_ident        reduce using rule 94
	L_charac       reduce using rule 94
	L_integ        reduce using rule 94
	L_doubl        reduce using rule 94
	L_quoted       reduce using rule 94


State 174

	AssignOp -> '/=' .                                  (rule 96)

	'!'            reduce using rule 96
	'&'            reduce using rule 96
	'('            reduce using rule 96
	'*'            reduce using rule 96
	'+'            reduce using rule 96
	'++'           reduce using rule 96
	'-'            reduce using rule 96
	'--'           reduce using rule 96
	'['            reduce using rule 96
	'false'        reduce using rule 96
	'readChar'     reduce using rule 96
	'readFloat'    reduce using rule 96
	'readInt'      reduce using rule 96
	'readString'   reduce using rule 96
	'true'         reduce using rule 96
	L_ident        reduce using rule 96
	L_charac       reduce using rule 96
	L_integ        reduce using rule 96
	L_doubl        reduce using rule 96
	L_quoted       reduce using rule 96


State 175

	Stm -> LExp ';' .                                   (rule 33)

	'('            reduce using rule 33
	'*'            reduce using rule 33
	'++'           reduce using rule 33
	'--'           reduce using rule 33
	'break'        reduce using rule 33
	'continue'     reduce using rule 33
	'do'           reduce using rule 33
	'else'         reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'return'       reduce using rule 33
	'while'        reduce using rule 33
	'writeChar'    reduce using rule 33
	'writeFloat'   reduce using rule 33
	'writeInt'     reduce using rule 33
	'writeString'  reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_ident        reduce using rule 33


State 176

	AssignOp -> '=' .                                   (rule 92)

	'!'            reduce using rule 92
	'&'            reduce using rule 92
	'('            reduce using rule 92
	'*'            reduce using rule 92
	'+'            reduce using rule 92
	'++'           reduce using rule 92
	'-'            reduce using rule 92
	'--'           reduce using rule 92
	'['            reduce using rule 92
	'false'        reduce using rule 92
	'readChar'     reduce using rule 92
	'readFloat'    reduce using rule 92
	'readInt'      reduce using rule 92
	'readString'   reduce using rule 92
	'true'         reduce using rule 92
	L_ident        reduce using rule 92
	L_charac       reduce using rule 92
	L_integ        reduce using rule 92
	L_doubl        reduce using rule 92
	L_quoted       reduce using rule 92


State 177

	Stm -> Jump ';' .                                   (rule 39)

	'('            reduce using rule 39
	'*'            reduce using rule 39
	'++'           reduce using rule 39
	'--'           reduce using rule 39
	'break'        reduce using rule 39
	'continue'     reduce using rule 39
	'do'           reduce using rule 39
	'else'         reduce using rule 39
	'for'          reduce using rule 39
	'if'           reduce using rule 39
	'return'       reduce using rule 39
	'while'        reduce using rule 39
	'writeChar'    reduce using rule 39
	'writeFloat'   reduce using rule 39
	'writeInt'     reduce using rule 39
	'writeString'  reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_ident        reduce using rule 39


State 178

	Stm -> Ident '(' . ListRExp ')' ';'                 (rule 30)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 71
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51
	ListRExp       goto state 184

State 179

	DList -> 'const' ListCDecl ';' .                    (rule 12)

	'('            reduce using rule 12
	'*'            reduce using rule 12
	'++'           reduce using rule 12
	'--'           reduce using rule 12
	'bool'         reduce using rule 12
	'break'        reduce using rule 12
	'char'         reduce using rule 12
	'const'        reduce using rule 12
	'continue'     reduce using rule 12
	'do'           reduce using rule 12
	'float'        reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'return'       reduce using rule 12
	'string'       reduce using rule 12
	'while'        reduce using rule 12
	'writeChar'    reduce using rule 12
	'writeFloat'   reduce using rule 12
	'writeInt'     reduce using rule 12
	'writeString'  reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_ident        reduce using rule 12


State 180

	ListCDecl -> CDecl ',' . ListCDecl                  (rule 123)

	L_ident        shift, and enter state 2

	Ident          goto state 136
	CDecl          goto state 137
	ListCDecl      goto state 183

State 181

	CDecl -> Ident '=' . RExp                           (rule 15)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 182
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 182

	CDecl -> Ident '=' RExp .                           (rule 15)
	RExp -> RExp . '||' RExp1                           (rule 57)

	','            reduce using rule 15
	';'            reduce using rule 15
	'||'           shift, and enter state 98


State 183

	ListCDecl -> CDecl ',' ListCDecl .                  (rule 123)

	';'            reduce using rule 123


State 184

	Stm -> Ident '(' ListRExp . ')' ';'                 (rule 30)

	')'            shift, and enter state 199


State 185

	Stm -> LExp AssignOp RExp . ';'                     (rule 32)
	RExp -> RExp . '||' RExp1                           (rule 57)

	';'            shift, and enter state 198
	'||'           shift, and enter state 98


State 186

	Stm -> PWrite '(' RExp . ')' ';'                    (rule 31)
	RExp -> RExp . '||' RExp1                           (rule 57)

	')'            shift, and enter state 197
	'||'           shift, and enter state 98


State 187

	Stm -> 'do' Stm 'while' . '(' RExp ')' ';'          (rule 37)

	'('            shift, and enter state 196


State 188

	Stm -> 'for' '(' Ident . '=' RExp Dir RExp ')' Stm    (rule 38)

	'='            shift, and enter state 195


State 189

	Stm -> 'if' '(' RExp . ')' Stm                      (rule 34)
	Stm -> 'if' '(' RExp . ')' Stm 'else' Stm           (rule 35)
	RExp -> RExp . '||' RExp1                           (rule 57)

	')'            shift, and enter state 194
	'||'           shift, and enter state 98


State 190

	Stm -> 'while' '(' RExp . ')' Stm                   (rule 36)
	RExp -> RExp . '||' RExp1                           (rule 57)

	')'            shift, and enter state 193
	'||'           shift, and enter state 98


State 191

	VDecl -> Ident '=' RExp .                           (rule 14)
	RExp -> RExp . '||' RExp1                           (rule 57)

	','            reduce using rule 14
	';'            reduce using rule 14
	'||'           shift, and enter state 98


State 192

	ListVDecl -> VDecl ',' ListVDecl .                  (rule 121)

	';'            reduce using rule 121


State 193

	Stm -> 'while' '(' RExp ')' . Stm                   (rule 36)

	'('            shift, and enter state 75
	'*'            shift, and enter state 55
	'++'           shift, and enter state 57
	'--'           shift, and enter state 59
	'break'        shift, and enter state 145
	'continue'     shift, and enter state 146
	'do'           shift, and enter state 147
	'for'          shift, and enter state 148
	'if'           shift, and enter state 149
	'return'       shift, and enter state 150
	'while'        shift, and enter state 151
	'writeChar'    shift, and enter state 152
	'writeFloat'   shift, and enter state 153
	'writeInt'     shift, and enter state 154
	'writeString'  shift, and enter state 155
	'{'            shift, and enter state 110
	L_ident        shift, and enter state 2

	Ident          goto state 139
	Block          goto state 140
	Stm            goto state 205
	Jump           goto state 142
	LExp           goto state 143
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	PWrite         goto state 144
	IncDecOp       goto state 48

State 194

	Stm -> 'if' '(' RExp ')' . Stm                      (rule 34)
	Stm -> 'if' '(' RExp ')' . Stm 'else' Stm           (rule 35)

	'('            shift, and enter state 75
	'*'            shift, and enter state 55
	'++'           shift, and enter state 57
	'--'           shift, and enter state 59
	'break'        shift, and enter state 145
	'continue'     shift, and enter state 146
	'do'           shift, and enter state 147
	'for'          shift, and enter state 148
	'if'           shift, and enter state 149
	'return'       shift, and enter state 150
	'while'        shift, and enter state 151
	'writeChar'    shift, and enter state 152
	'writeFloat'   shift, and enter state 153
	'writeInt'     shift, and enter state 154
	'writeString'  shift, and enter state 155
	'{'            shift, and enter state 110
	L_ident        shift, and enter state 2

	Ident          goto state 139
	Block          goto state 140
	Stm            goto state 204
	Jump           goto state 142
	LExp           goto state 143
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	PWrite         goto state 144
	IncDecOp       goto state 48

State 195

	Stm -> 'for' '(' Ident '=' . RExp Dir RExp ')' Stm    (rule 38)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 203
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 196

	Stm -> 'do' Stm 'while' '(' . RExp ')' ';'          (rule 37)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 202
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 197

	Stm -> PWrite '(' RExp ')' . ';'                    (rule 31)

	';'            shift, and enter state 201


State 198

	Stm -> LExp AssignOp RExp ';' .                     (rule 32)

	'('            reduce using rule 32
	'*'            reduce using rule 32
	'++'           reduce using rule 32
	'--'           reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'do'           reduce using rule 32
	'else'         reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'return'       reduce using rule 32
	'while'        reduce using rule 32
	'writeChar'    reduce using rule 32
	'writeFloat'   reduce using rule 32
	'writeInt'     reduce using rule 32
	'writeString'  reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_ident        reduce using rule 32


State 199

	Stm -> Ident '(' ListRExp ')' . ';'                 (rule 30)

	';'            shift, and enter state 200


State 200

	Stm -> Ident '(' ListRExp ')' ';' .                 (rule 30)

	'('            reduce using rule 30
	'*'            reduce using rule 30
	'++'           reduce using rule 30
	'--'           reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'do'           reduce using rule 30
	'else'         reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'return'       reduce using rule 30
	'while'        reduce using rule 30
	'writeChar'    reduce using rule 30
	'writeFloat'   reduce using rule 30
	'writeInt'     reduce using rule 30
	'writeString'  reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_ident        reduce using rule 30


State 201

	Stm -> PWrite '(' RExp ')' ';' .                    (rule 31)

	'('            reduce using rule 31
	'*'            reduce using rule 31
	'++'           reduce using rule 31
	'--'           reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'do'           reduce using rule 31
	'else'         reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'return'       reduce using rule 31
	'while'        reduce using rule 31
	'writeChar'    reduce using rule 31
	'writeFloat'   reduce using rule 31
	'writeInt'     reduce using rule 31
	'writeString'  reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31


State 202

	Stm -> 'do' Stm 'while' '(' RExp . ')' ';'          (rule 37)
	RExp -> RExp . '||' RExp1                           (rule 57)

	')'            shift, and enter state 210
	'||'           shift, and enter state 98


State 203

	Stm -> 'for' '(' Ident '=' RExp . Dir RExp ')' Stm    (rule 38)
	RExp -> RExp . '||' RExp1                           (rule 57)

	'downto'       shift, and enter state 208
	'upto'         shift, and enter state 209
	'||'           shift, and enter state 98

	Dir            goto state 207

State 204

	Stm -> 'if' '(' RExp ')' Stm .                      (rule 34)
	Stm -> 'if' '(' RExp ')' Stm . 'else' Stm           (rule 35)

	'('            reduce using rule 34
	'*'            reduce using rule 34
	'++'           reduce using rule 34
	'--'           reduce using rule 34
	'break'        reduce using rule 34
	'continue'     reduce using rule 34
	'do'           reduce using rule 34
	'else'         shift, and enter state 206
			(reduce using rule 34)

	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'return'       reduce using rule 34
	'while'        reduce using rule 34
	'writeChar'    reduce using rule 34
	'writeFloat'   reduce using rule 34
	'writeInt'     reduce using rule 34
	'writeString'  reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_ident        reduce using rule 34


State 205

	Stm -> 'while' '(' RExp ')' Stm .                   (rule 36)

	'('            reduce using rule 36
	'*'            reduce using rule 36
	'++'           reduce using rule 36
	'--'           reduce using rule 36
	'break'        reduce using rule 36
	'continue'     reduce using rule 36
	'do'           reduce using rule 36
	'else'         reduce using rule 36
	'for'          reduce using rule 36
	'if'           reduce using rule 36
	'return'       reduce using rule 36
	'while'        reduce using rule 36
	'writeChar'    reduce using rule 36
	'writeFloat'   reduce using rule 36
	'writeInt'     reduce using rule 36
	'writeString'  reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	L_ident        reduce using rule 36


State 206

	Stm -> 'if' '(' RExp ')' Stm 'else' . Stm           (rule 35)

	'('            shift, and enter state 75
	'*'            shift, and enter state 55
	'++'           shift, and enter state 57
	'--'           shift, and enter state 59
	'break'        shift, and enter state 145
	'continue'     shift, and enter state 146
	'do'           shift, and enter state 147
	'for'          shift, and enter state 148
	'if'           shift, and enter state 149
	'return'       shift, and enter state 150
	'while'        shift, and enter state 151
	'writeChar'    shift, and enter state 152
	'writeFloat'   shift, and enter state 153
	'writeInt'     shift, and enter state 154
	'writeString'  shift, and enter state 155
	'{'            shift, and enter state 110
	L_ident        shift, and enter state 2

	Ident          goto state 139
	Block          goto state 140
	Stm            goto state 213
	Jump           goto state 142
	LExp           goto state 143
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	PWrite         goto state 144
	IncDecOp       goto state 48

State 207

	Stm -> 'for' '(' Ident '=' RExp Dir . RExp ')' Stm    (rule 38)

	'!'            shift, and enter state 52
	'&'            shift, and enter state 53
	'('            shift, and enter state 54
	'*'            shift, and enter state 55
	'+'            shift, and enter state 56
	'++'           shift, and enter state 57
	'-'            shift, and enter state 58
	'--'           shift, and enter state 59
	'['            shift, and enter state 60
	'false'        shift, and enter state 61
	'readChar'     shift, and enter state 62
	'readFloat'    shift, and enter state 63
	'readInt'      shift, and enter state 64
	'readString'   shift, and enter state 65
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 67
	L_integ        shift, and enter state 68
	L_doubl        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 26
	Char           goto state 27
	Integer        goto state 28
	Double         goto state 29
	String         goto state 30
	LExp           goto state 31
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	RExp           goto state 212
	RExp1          goto state 37
	RExp2          goto state 38
	RExp3          goto state 39
	RExp4          goto state 40
	RExp5          goto state 41
	RExp6          goto state 42
	RExp7          goto state 43
	RExp8          goto state 44
	RExp9          goto state 45
	RExp10         goto state 46
	PRead          goto state 47
	IncDecOp       goto state 48
	SignOp         goto state 49
	Literal        goto state 50
	Boolean        goto state 51

State 208

	Dir -> 'downto' .                                   (rule 41)

	'!'            reduce using rule 41
	'&'            reduce using rule 41
	'('            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	'++'           reduce using rule 41
	'-'            reduce using rule 41
	'--'           reduce using rule 41
	'['            reduce using rule 41
	'false'        reduce using rule 41
	'readChar'     reduce using rule 41
	'readFloat'    reduce using rule 41
	'readInt'      reduce using rule 41
	'readString'   reduce using rule 41
	'true'         reduce using rule 41
	L_ident        reduce using rule 41
	L_charac       reduce using rule 41
	L_integ        reduce using rule 41
	L_doubl        reduce using rule 41
	L_quoted       reduce using rule 41


State 209

	Dir -> 'upto' .                                     (rule 40)

	'!'            reduce using rule 40
	'&'            reduce using rule 40
	'('            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	'++'           reduce using rule 40
	'-'            reduce using rule 40
	'--'           reduce using rule 40
	'['            reduce using rule 40
	'false'        reduce using rule 40
	'readChar'     reduce using rule 40
	'readFloat'    reduce using rule 40
	'readInt'      reduce using rule 40
	'readString'   reduce using rule 40
	'true'         reduce using rule 40
	L_ident        reduce using rule 40
	L_charac       reduce using rule 40
	L_integ        reduce using rule 40
	L_doubl        reduce using rule 40
	L_quoted       reduce using rule 40


State 210

	Stm -> 'do' Stm 'while' '(' RExp ')' . ';'          (rule 37)

	';'            shift, and enter state 211


State 211

	Stm -> 'do' Stm 'while' '(' RExp ')' ';' .          (rule 37)

	'('            reduce using rule 37
	'*'            reduce using rule 37
	'++'           reduce using rule 37
	'--'           reduce using rule 37
	'break'        reduce using rule 37
	'continue'     reduce using rule 37
	'do'           reduce using rule 37
	'else'         reduce using rule 37
	'for'          reduce using rule 37
	'if'           reduce using rule 37
	'return'       reduce using rule 37
	'while'        reduce using rule 37
	'writeChar'    reduce using rule 37
	'writeFloat'   reduce using rule 37
	'writeInt'     reduce using rule 37
	'writeString'  reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_ident        reduce using rule 37


State 212

	Stm -> 'for' '(' Ident '=' RExp Dir RExp . ')' Stm    (rule 38)
	RExp -> RExp . '||' RExp1                           (rule 57)

	')'            shift, and enter state 214
	'||'           shift, and enter state 98


State 213

	Stm -> 'if' '(' RExp ')' Stm 'else' Stm .           (rule 35)

	'('            reduce using rule 35
	'*'            reduce using rule 35
	'++'           reduce using rule 35
	'--'           reduce using rule 35
	'break'        reduce using rule 35
	'continue'     reduce using rule 35
	'do'           reduce using rule 35
	'else'         reduce using rule 35
	'for'          reduce using rule 35
	'if'           reduce using rule 35
	'return'       reduce using rule 35
	'while'        reduce using rule 35
	'writeChar'    reduce using rule 35
	'writeFloat'   reduce using rule 35
	'writeInt'     reduce using rule 35
	'writeString'  reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_ident        reduce using rule 35


State 214

	Stm -> 'for' '(' Ident '=' RExp Dir RExp ')' . Stm    (rule 38)

	'('            shift, and enter state 75
	'*'            shift, and enter state 55
	'++'           shift, and enter state 57
	'--'           shift, and enter state 59
	'break'        shift, and enter state 145
	'continue'     shift, and enter state 146
	'do'           shift, and enter state 147
	'for'          shift, and enter state 148
	'if'           shift, and enter state 149
	'return'       shift, and enter state 150
	'while'        shift, and enter state 151
	'writeChar'    shift, and enter state 152
	'writeFloat'   shift, and enter state 153
	'writeInt'     shift, and enter state 154
	'writeString'  shift, and enter state 155
	'{'            shift, and enter state 110
	L_ident        shift, and enter state 2

	Ident          goto state 139
	Block          goto state 140
	Stm            goto state 215
	Jump           goto state 142
	LExp           goto state 143
	LExp1          goto state 32
	LExp2          goto state 33
	LExp3          goto state 34
	LExp4          goto state 35
	PWrite         goto state 144
	IncDecOp       goto state 48

State 215

	Stm -> 'for' '(' Ident '=' RExp Dir RExp ')' Stm .    (rule 38)

	'('            reduce using rule 38
	'*'            reduce using rule 38
	'++'           reduce using rule 38
	'--'           reduce using rule 38
	'break'        reduce using rule 38
	'continue'     reduce using rule 38
	'do'           reduce using rule 38
	'else'         reduce using rule 38
	'for'          reduce using rule 38
	'if'           reduce using rule 38
	'return'       reduce using rule 38
	'while'        reduce using rule 38
	'writeChar'    reduce using rule 38
	'writeFloat'   reduce using rule 38
	'writeInt'     reduce using rule 38
	'writeString'  reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	L_ident        reduce using rule 38


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 130
Number of terminals: 66
Number of non-terminals: 52
Number of states: 216
