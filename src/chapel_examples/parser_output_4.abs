Prog [CList [CDecl (Ident {idLoc = Loc {line = 2, column = 7}, idName = "myConst"}) (Type Simple BInt) (Lit {reLoc = Loc {line = 2, column = 22}, lit = LInt 3})],VList [Init (Ident {idLoc = Loc {line = 3, column = 5}, idName = "myInt"}) (Type (Array Simple (Lit {reLoc = Loc {line = 3, column = 13}, lit = LInt 5})) BInt) (ArrList {reLoc = Loc {line = 3, column = 21}, rList = [Lit {reLoc = Loc {line = 3, column = 22}, lit = LInt 1},Lit {reLoc = Loc {line = 3, column = 24}, lit = LInt 2},Lit {reLoc = Loc {line = 3, column = 26}, lit = LInt 3},Lit {reLoc = Loc {line = 3, column = 28}, lit = LInt 4},Lit {reLoc = Loc {line = 3, column = 30}, lit = LInt 5}]})],FDecl (Ident {idLoc = Loc {line = 5, column = 6}, idName = "fibonacci"}) [Form In (Ident {idLoc = Loc {line = 5, column = 16}, idName = "n"}) (Type Simple BInt)] In (Type Simple BInt) (Block {bLoc = Loc {line = 5, column = 31}, decls = [CList [CDecl (Ident {idLoc = Loc {line = 6, column = 9}, idName = "myConst"}) (Type Simple BInt) (Lit {reLoc = Loc {line = 6, column = 24}, lit = LInt 3})],VList [Init (Ident {idLoc = Loc {line = 7, column = 7}, idName = "myInt"}) (Type (Array Simple (Lit {reLoc = Loc {line = 7, column = 15}, lit = LInt 5})) BInt) (ArrList {reLoc = Loc {line = 7, column = 23}, rList = [Lit {reLoc = Loc {line = 7, column = 24}, lit = LInt 1},Lit {reLoc = Loc {line = 7, column = 26}, lit = LInt 2},Lit {reLoc = Loc {line = 7, column = 28}, lit = LInt 3},Lit {reLoc = Loc {line = 7, column = 30}, lit = LInt 4},Lit {reLoc = Loc {line = 7, column = 32}, lit = LInt 5}]})]], stms = [If (Comp {reLoc = Loc {line = 8, column = 8}, lhs = RLExp {reLoc = Loc {line = 8, column = 6}, rhsL = Name (Ident {idLoc = Loc {line = 8, column = 6}, idName = "n"})}, comp = Leq, rhs = Lit {reLoc = Loc {line = 8, column = 11}, lit = LInt 1}}) (JmpStm (ReturnE {jmpLoc = Loc {line = 8, column = 18}, retE = RLExp {reLoc = Loc {line = 8, column = 25}, rhsL = Name (Ident {idLoc = Loc {line = 8, column = 25}, idName = "n"})}})),JmpStm (ReturnE {jmpLoc = Loc {line = 9, column = 3}, retE = Arith {reLoc = Loc {line = 9, column = 25}, lhs = FCall {reLoc = Loc {line = 9, column = 10}, fName = Ident {idLoc = Loc {line = 9, column = 10}, idName = "fibonacci"}, rList = [Arith {reLoc = Loc {line = 9, column = 21}, lhs = RLExp {reLoc = Loc {line = 9, column = 20}, rhsL = Name (Ident {idLoc = Loc {line = 9, column = 20}, idName = "n"})}, arith = Sub, rhs = Lit {reLoc = Loc {line = 9, column = 22}, lit = LInt 1}}]}, arith = Add, rhs = FCall {reLoc = Loc {line = 9, column = 27}, fName = Ident {idLoc = Loc {line = 9, column = 27}, idName = "fibonacci"}, rList = [Arith {reLoc = Loc {line = 9, column = 38}, lhs = RLExp {reLoc = Loc {line = 9, column = 37}, rhsL = Name (Ident {idLoc = Loc {line = 9, column = 37}, idName = "n"})}, arith = Sub, rhs = Lit {reLoc = Loc {line = 9, column = 39}, lit = LInt 2}}]}}})]}),VList [Init (Ident {idLoc = Loc {line = 12, column = 5}, idName = "myReal"}) (Type (Array Simple (RLExp {reLoc = Loc {line = 12, column = 14}, rhsL = Name (Ident {idLoc = Loc {line = 12, column = 14}, idName = "myConst"})})) BReal) (ArrList {reLoc = Loc {line = 12, column = 29}, rList = [Lit {reLoc = Loc {line = 12, column = 30}, lit = LReal 9.876},Lit {reLoc = Loc {line = 12, column = 36}, lit = LReal 9.876},Lit {reLoc = Loc {line = 12, column = 42}, lit = LReal 9.876}]})],VList [Init (Ident {idLoc = Loc {line = 13, column = 5}, idName = "myBool"}) (Type (Array Simple (Lit {reLoc = Loc {line = 13, column = 14}, lit = LInt 2})) BBool) (ArrList {reLoc = Loc {line = 13, column = 23}, rList = [Lit {reLoc = Loc {line = 13, column = 24}, lit = LBool True},Lit {reLoc = Loc {line = 13, column = 29}, lit = LBool False}]})],FDecl (Ident {idLoc = Loc {line = 15, column = 6}, idName = "addThree"}) [Form In (Ident {idLoc = Loc {line = 15, column = 18}, idName = "n"}) (Type Simple BInt)] Out (Type Simple BInt) (Block {bLoc = Loc {line = 15, column = 32}, decls = [CList [CDecl (Ident {idLoc = Loc {line = 16, column = 9}, idName = "p"}) (Type Simple BInt) (Lit {reLoc = Loc {line = 16, column = 18}, lit = LInt 5})]], stms = [JmpStm (ReturnE {jmpLoc = Loc {line = 17, column = 3}, retE = Arith {reLoc = Loc {line = 17, column = 15}, lhs = Arith {reLoc = Loc {line = 17, column = 12}, lhs = RLExp {reLoc = Loc {line = 17, column = 10}, rhsL = Name (Ident {idLoc = Loc {line = 17, column = 10}, idName = "n"})}, arith = Add, rhs = Lit {reLoc = Loc {line = 17, column = 14}, lit = LInt 3}}, arith = Add, rhs = RLExp {reLoc = Loc {line = 17, column = 16}, rhsL = Name (Ident {idLoc = Loc {line = 17, column = 16}, idName = "p"})}}})]}),FDecl (Ident {idLoc = Loc {line = 20, column = 6}, idName = "doublePrint"}) [Form InOut (Ident {idLoc = Loc {line = 20, column = 24}, idName = "thing"}) (Type Simple BString)] Out (Type Simple BString) (Block {bLoc = Loc {line = 20, column = 50}, decls = [VList [Init (Ident {idLoc = Loc {line = 21, column = 7}, idName = "p"}) (Type Simple BInt) (Lit {reLoc = Loc {line = 21, column = 16}, lit = LInt 5})],CList [CDecl (Ident {idLoc = Loc {line = 22, column = 9}, idName = "myConst"}) (Type Simple BInt) (Lit {reLoc = Loc {line = 22, column = 24}, lit = LInt 3})],VList [Init (Ident {idLoc = Loc {line = 23, column = 7}, idName = "myInt"}) (Type (Array Simple (Lit {reLoc = Loc {line = 23, column = 15}, lit = LInt 5})) BInt) (ArrList {reLoc = Loc {line = 23, column = 23}, rList = [Lit {reLoc = Loc {line = 23, column = 24}, lit = LInt 1},Lit {reLoc = Loc {line = 23, column = 26}, lit = LInt 2},Lit {reLoc = Loc {line = 23, column = 28}, lit = LInt 3},Lit {reLoc = Loc {line = 23, column = 30}, lit = LInt 4},Lit {reLoc = Loc {line = 23, column = 32}, lit = LInt 5}]})]], stms = [JmpStm (ReturnE {jmpLoc = Loc {line = 24, column = 3}, retE = Arith {reLoc = Loc {line = 24, column = 16}, lhs = RLExp {reLoc = Loc {line = 24, column = 10}, rhsL = Name (Ident {idLoc = Loc {line = 24, column = 10}, idName = "thing"})}, arith = Add, rhs = RLExp {reLoc = Loc {line = 24, column = 18}, rhsL = Name (Ident {idLoc = Loc {line = 24, column = 18}, idName = "thing"})}}})]}),FDecl (Ident {idLoc = Loc {line = 27, column = 6}, idName = "defaultsProc"}) [Form In (Ident {idLoc = Loc {line = 27, column = 22}, idName = "x"}) (Type Simple BInt),Form Ref (Ident {idLoc = Loc {line = 27, column = 33}, idName = "y"}) (Type Simple BReal)] In (Type Simple BReal) (Block {bLoc = Loc {line = 27, column = 48}, decls = [], stms = [JmpStm (ReturnE {jmpLoc = Loc {line = 28, column = 3}, retE = Arith {reLoc = Loc {line = 28, column = 11}, lhs = RLExp {reLoc = Loc {line = 28, column = 10}, rhsL = Name (Ident {idLoc = Loc {line = 28, column = 10}, idName = "x"})}, arith = Add, rhs = RLExp {reLoc = Loc {line = 28, column = 12}, rhsL = Name (Ident {idLoc = Loc {line = 28, column = 12}, idName = "y"})}}})]}),VList [Solo (Ident {idLoc = Loc {line = 31, column = 5}, idName = "myyVoid"}) (Type (Pointer Simple) BVoid)],VList [Init (Ident {idLoc = Loc {line = 32, column = 5}, idName = "myyVoidTwo"}) (Type (Pointer (Pointer (Pointer Simple))) BVoid) (Arith {reLoc = Loc {line = 32, column = 29}, lhs = Lit {reLoc = Loc {line = 32, column = 27}, lit = LInt 10}, arith = Pow, rhs = Arith {reLoc = Loc {line = 32, column = 31}, lhs = Lit {reLoc = Loc {line = 32, column = 30}, lit = LInt 2}, arith = Pow, rhs = Arith {reLoc = Loc {line = 32, column = 33}, lhs = Lit {reLoc = Loc {line = 32, column = 32}, lit = LInt 2}, arith = Pow, rhs = Lit {reLoc = Loc {line = 32, column = 34}, lit = LInt 2}}}})],FDecl (Ident {idLoc = Loc {line = 34, column = 6}, idName = "sumProc"}) [Form In (Ident {idLoc = Loc {line = 34, column = 15}, idName = "x"}) (Type Simple BInt),Form In (Ident {idLoc = Loc {line = 34, column = 23}, idName = "y"}) (Type Simple BReal)] In (Type Simple BReal) (Block {bLoc = Loc {line = 34, column = 38}, decls = [], stms = [JmpStm (ReturnE {jmpLoc = Loc {line = 35, column = 3}, retE = Arith {reLoc = Loc {line = 35, column = 11}, lhs = RLExp {reLoc = Loc {line = 35, column = 10}, rhsL = Name (Ident {idLoc = Loc {line = 35, column = 10}, idName = "x"})}, arith = Add, rhs = RLExp {reLoc = Loc {line = 35, column = 12}, rhsL = Name (Ident {idLoc = Loc {line = 35, column = 12}, idName = "y"})}}})]}),VList [Solo (Ident {idLoc = Loc {line = 38, column = 5}, idName = "myInit"}) (Type (Array (Array (Array Simple (Lit {reLoc = Loc {line = 38, column = 14}, lit = LInt 1})) (Lit {reLoc = Loc {line = 38, column = 17}, lit = LInt 2})) (Lit {reLoc = Loc {line = 38, column = 20}, lit = LInt 3})) BReal)],VList [Solo (Ident {idLoc = Loc {line = 39, column = 5}, idName = "myRealVar"}) (Type (Pointer Simple) BReal)]]
