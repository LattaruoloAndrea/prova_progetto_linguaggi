Prog [CList [CDecl (Ident "myConst") (Type Simple BInt) (Lit (LInt 3))],VList [Init (Ident "myInt") (Type (Array Simple (Lit (LInt 5))) BInt) (ArrList [Lit (LInt 1),Lit (LInt 2),Lit (LInt 3),Lit (LInt 4),Lit (LInt 5)])],FDecl (Ident "fibonacci") [Form In (Ident "n") (Type Simple BInt)] In (Type Simple BInt) (Block [CList [CDecl (Ident "myConst") (Type Simple BInt) (Lit (LInt 3))],VList [Init (Ident "myInt") (Type (Array Simple (Lit (LInt 5))) BInt) (ArrList [Lit (LInt 1),Lit (LInt 2),Lit (LInt 3),Lit (LInt 4),Lit (LInt 5)])]] [If (Comp (RLExp (Name (Ident "n"))) Leq (Lit (LInt 1))) (JmpStm (ReturnE (RLExp (Name (Ident "n"))))),JmpStm (ReturnE (Arith (FCall (Ident "fibonacci") [Arith (RLExp (Name (Ident "n"))) Sub (Lit (LInt 1))]) Add (FCall (Ident "fibonacci") [Arith (RLExp (Name (Ident "n"))) Sub (Lit (LInt 2))])))]),VList [Init (Ident "myReal") (Type (Array Simple (RLExp (Name (Ident "myConst")))) BReal) (ArrList [Lit (LReal 9.876),Lit (LReal 9.876),Lit (LReal 9.876)])],VList [Init (Ident "myBool") (Type (Array Simple (Lit (LInt 2))) BBool) (ArrList [Lit (LBool True),Lit (LBool False)])],FDecl (Ident "addThree") [Form In (Ident "n") (Type Simple BInt)] Out (Type Simple BInt) (Block [CList [CDecl (Ident "p") (Type Simple BInt) (Lit (LInt 5))]] [JmpStm (ReturnE (Arith (Arith (RLExp (Name (Ident "n"))) Add (Lit (LInt 3))) Add (RLExp (Name (Ident "p")))))]),FDecl (Ident "doublePrint") [Form InOut (Ident "thing") (Type Simple BString)] Out (Type Simple BString) (Block [VList [Init (Ident "p") (Type Simple BInt) (Lit (LInt 5))],CList [CDecl (Ident "myConst") (Type Simple BInt) (Lit (LInt 3))],VList [Init (Ident "myInt") (Type (Array Simple (Lit (LInt 5))) BInt) (ArrList [Lit (LInt 1),Lit (LInt 2),Lit (LInt 3),Lit (LInt 4),Lit (LInt 5)])]] [JmpStm (ReturnE (Arith (RLExp (Name (Ident "thing"))) Add (RLExp (Name (Ident "thing")))))]),FDecl (Ident "defaultsProc") [Form In (Ident "x") (Type Simple BInt),Form Ref (Ident "y") (Type Simple BReal)] In (Type Simple BReal) (Block [] [JmpStm (ReturnE (Arith (RLExp (Name (Ident "x"))) Add (RLExp (Name (Ident "y")))))]),VList [Solo (Ident "myyVoid") (Type (Pointer Simple) BVoid)],VList [Init (Ident "myyVoidTwo") (Type (Pointer (Pointer (Pointer Simple))) BVoid) (Arith (Lit (LInt 10)) Pow (Arith (Lit (LInt 2)) Pow (Arith (Lit (LInt 2)) Pow (Lit (LInt 2)))))],FDecl (Ident "sumProc") [Form In (Ident "x") (Type Simple BInt),Form In (Ident "y") (Type Simple BReal)] In (Type Simple BReal) (Block [] [JmpStm (ReturnE (Arith (RLExp (Name (Ident "x"))) Add (RLExp (Name (Ident "y")))))]),VList [Solo (Ident "myInit") (Type (Array (Array (Array Simple (Lit (LInt 1))) (Lit (LInt 2))) (Lit (LInt 3))) BReal)],VList [Solo (Ident "myRealVar") (Type (Pointer Simple) BReal)]]
