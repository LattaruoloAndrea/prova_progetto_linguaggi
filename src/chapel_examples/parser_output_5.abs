Prog [CList [CDecl (Ident {idLoc = Loc {line = 1, column = 7}, idName = "myConst"}) (Type Simple BInt) (Lit {reLoc = Loc {line = 1, column = 22}, lit = LInt 3})],VList [Init (Ident {idLoc = Loc {line = 2, column = 5}, idName = "myInt"}) (Type (Array Simple (Lit {reLoc = Loc {line = 2, column = 13}, lit = LInt 5})) BInt) (ArrList {reLoc = Loc {line = 2, column = 21}, rList = [Lit {reLoc = Loc {line = 2, column = 22}, lit = LInt 1},Lit {reLoc = Loc {line = 2, column = 24}, lit = LInt 2},Lit {reLoc = Loc {line = 2, column = 26}, lit = LInt 3},Lit {reLoc = Loc {line = 2, column = 28}, lit = LInt 4},Lit {reLoc = Loc {line = 2, column = 30}, lit = LInt 5}]})],VList [Init (Ident {idLoc = Loc {line = 3, column = 5}, idName = "myBool"}) (Type Simple BBool) (RLExp {reLoc = Loc {line = 3, column = 20}, rhsL = Name (Ident {idLoc = Loc {line = 3, column = 20}, idName = "False"})})],FDecl (Ident {idLoc = Loc {line = 5, column = 6}, idName = "nyFunction"}) [Form In (Ident {idLoc = Loc {line = 5, column = 17}, idName = "x"}) (Type Simple BInt),Form In (Ident {idLoc = Loc {line = 5, column = 24}, idName = "y"}) (Type Simple BReal)] In (Type Simple BReal) (Block {bLoc = Loc {line = 5, column = 39}, decls = [VList [Init (Ident {idLoc = Loc {line = 6, column = 7}, idName = "newResult"}) (Type Simple BReal) (Lit {reLoc = Loc {line = 6, column = 25}, lit = LReal 0.0})],VList [Init (Ident {idLoc = Loc {line = 7, column = 7}, idName = "counter"}) (Type Simple BInt) (Lit {reLoc = Loc {line = 7, column = 22}, lit = LInt 0})]], stms = [While (RLExp {reLoc = Loc {line = 8, column = 9}, rhsL = Name (Ident {idLoc = Loc {line = 8, column = 9}, idName = "myBool"})}) (StmBlock (Block {bLoc = Loc {line = 8, column = 16}, decls = [], stms = [If (Comp {reLoc = Loc {line = 9, column = 20}, lhs = RLExp {reLoc = Loc {line = 9, column = 12}, rhsL = Name (Ident {idLoc = Loc {line = 9, column = 12}, idName = "counter"})}, comp = Eq, rhs = RLExp {reLoc = Loc {line = 9, column = 23}, rhsL = Name (Ident {idLoc = Loc {line = 9, column = 23}, idName = "x"})}}) (Assign (Name (Ident {idLoc = Loc {line = 9, column = 30}, idName = "myBool"})) (AssignEq {asLoc = Loc {line = 9, column = 37}}) (RLExp {reLoc = Loc {line = 9, column = 39}, rhsL = Name (Ident {idLoc = Loc {line = 9, column = 39}, idName = "True"})})),StmCall (Ident {idLoc = Loc {line = 10, column = 9}, idName = "readInt"}) [RLExp {reLoc = Loc {line = 10, column = 17}, rhsL = Access (Name (Ident {idLoc = Loc {line = 10, column = 17}, idName = "myInt"})) (RLExp {reLoc = Loc {line = 10, column = 23}, rhsL = Name (Ident {idLoc = Loc {line = 10, column = 23}, idName = "counter"})})}],Assign (Name (Ident {idLoc = Loc {line = 11, column = 9}, idName = "counter"})) (AssignAdd {asLoc = Loc {line = 11, column = 16}}) (Lit {reLoc = Loc {line = 11, column = 18}, lit = LInt 1})]})),For (Ident {idLoc = Loc {line = 13, column = 7}, idName = "x"}) (Range {rngLoc = Loc {line = 13, column = 20}, start = RLExp {reLoc = Loc {line = 13, column = 13}, rhsL = Name (Ident {idLoc = Loc {line = 13, column = 13}, idName = "counter"})}, end = Lit {reLoc = Loc {line = 13, column = 22}, lit = LInt 10}}) (StmCall (Ident {idLoc = Loc {line = 13, column = 29}, idName = "writeInt"}) [RLExp {reLoc = Loc {line = 13, column = 38}, rhsL = Access (Name (Ident {idLoc = Loc {line = 13, column = 38}, idName = "myInt"})) (RLExp {reLoc = Loc {line = 13, column = 44}, rhsL = Name (Ident {idLoc = Loc {line = 13, column = 44}, idName = "x"})})}]),JmpStm (ReturnE {jmpLoc = Loc {line = 14, column = 3}, retE = RLExp {reLoc = Loc {line = 14, column = 10}, rhsL = Name (Ident {idLoc = Loc {line = 14, column = 10}, idName = "newResult"})}})]})]
