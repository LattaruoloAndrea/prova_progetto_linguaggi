-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParChapel.y
-----------------------------------------------------------------------------

state 103 contains 1 shift/reduce conflicts.
state 184 contains 1 shift/reduce conflicts.
state 190 contains 1 shift/reduce conflicts.

terminal '++' is unused
terminal '--' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Char -> L_charac                                   (2)
	Integer -> L_integ                                 (3)
	Double -> L_doubl                                  (4)
	String -> L_quoted                                 (5)
	Program -> ListDecl                                (6)
	Decl -> 'proc' Ident '(' ListForm ')' Intent ':' Type Block   (7)
	Decl -> 'var' ListVDecl ';'                        (8)
	Decl -> 'param' ListCDecl ';'                      (9)
	Form -> Intent Ident ':' Type                      (10)
	Intent ->                                          (11)
	Intent -> 'in'                                     (12)
	Intent -> 'out'                                    (13)
	Intent -> 'inout'                                  (14)
	Intent -> 'ref'                                    (15)
	Intent -> 'const' 'in'                             (16)
	Intent -> 'const' 'ref'                            (17)
	VDecl -> Ident ':' Type                            (18)
	VDecl -> Ident ':' Type '=' RExp                   (19)
	CDecl -> Ident ':' Type '=' RExp                   (20)
	Type -> Compound Basic                             (21)
	Compound ->                                        (22)
	Compound -> Compound '[' RExp ']'                  (23)
	Compound -> Compound '*'                           (24)
	Basic -> 'bool'                                    (25)
	Basic -> 'char'                                    (26)
	Basic -> 'int'                                     (27)
	Basic -> 'real'                                    (28)
	Basic -> 'string'                                  (29)
	Basic -> 'void'                                    (30)
	Block -> '{' '}'                                   (31)
	Block -> '{' ListDecl '}'                          (32)
	Block -> '{' ListStm '}'                           (33)
	Block -> '{' ListDecl ListStm '}'                  (34)
	Stm -> ';' Stm                                     (35)
	Stm -> Block                                       (36)
	Stm -> Ident '(' ListRExp ')' ';'                  (37)
	Stm -> LExp '=' RExp ';'                           (38)
	Stm -> LExp '+=' RExp ';'                          (39)
	Stm -> LExp '-=' RExp ';'                          (40)
	Stm -> LExp '*=' RExp ';'                          (41)
	Stm -> LExp '/=' RExp ';'                          (42)
	Stm -> LExp '%=' RExp ';'                          (43)
	Stm -> LExp '^=' RExp ';'                          (44)
	Stm -> LExp ';'                                    (45)
	Stm -> 'if' RExp 'then' Stm                        (46)
	Stm -> 'if' RExp Block                             (47)
	Stm -> 'if' RExp 'then' Stm 'else' Stm             (48)
	Stm -> 'if' RExp Block 'else' Stm                  (49)
	Stm -> 'while' RExp 'do' Stm                       (50)
	Stm -> 'while' RExp Block                          (51)
	Stm -> 'do' Stm 'while' RExp ';'                   (52)
	Stm -> 'for' Ident 'in' Range 'do' Stm             (53)
	Stm -> 'for' Ident 'in' Range Block                (54)
	Stm -> 'return' ';'                                (55)
	Stm -> 'return' RExp ';'                           (56)
	Stm -> 'break' ';'                                 (57)
	Stm -> 'continue' ';'                              (58)
	Range -> '{' RExp '..' RExp '}'                    (59)
	LExp -> '*' LExp                                   (60)
	LExp -> LExp '[' RExp ']'                          (61)
	LExp -> Ident                                      (62)
	LExp -> '(' LExp ')'                               (63)
	RExp -> RExp '||' RExp                             (64)
	RExp -> RExp '&&' RExp                             (65)
	RExp -> '!' RExp                                   (66)
	RExp -> RExp '<' RExp                              (67)
	RExp -> RExp '<=' RExp                             (68)
	RExp -> RExp '==' RExp                             (69)
	RExp -> RExp '!=' RExp                             (70)
	RExp -> RExp '>=' RExp                             (71)
	RExp -> RExp '>' RExp                              (72)
	RExp -> RExp '+' RExp                              (73)
	RExp -> RExp '-' RExp                              (74)
	RExp -> RExp '*' RExp                              (75)
	RExp -> RExp '/' RExp                              (76)
	RExp -> RExp '%' RExp                              (77)
	RExp -> RExp '^' RExp                              (78)
	RExp -> '+' RExp                                   (79)
	RExp -> '-' RExp                                   (80)
	RExp -> '&' LExp                                   (81)
	RExp -> LExp                                       (82)
	RExp -> '[' ListRExp ']'                           (83)
	RExp -> Ident '(' ListRExp ')'                     (84)
	RExp -> Literal                                    (85)
	RExp -> '(' RExp ')'                               (86)
	Literal -> 'false'                                 (87)
	Literal -> 'true'                                  (88)
	Literal -> Char                                    (89)
	Literal -> Integer                                 (90)
	Literal -> Double                                  (91)
	Literal -> String                                  (92)
	ListForm ->                                        (93)
	ListForm -> Form                                   (94)
	ListForm -> Form ',' ListForm                      (95)
	ListDecl -> Decl                                   (96)
	ListDecl -> Decl ListDecl                          (97)
	ListVDecl -> VDecl                                 (98)
	ListVDecl -> VDecl ',' ListVDecl                   (99)
	ListCDecl -> CDecl                                 (100)
	ListCDecl -> CDecl ',' ListCDecl                   (101)
	ListStm -> Stm                                     (102)
	ListStm -> Stm ListStm                             (103)
	ListRExp ->                                        (104)
	ListRExp -> RExp                                   (105)
	ListRExp -> RExp ',' ListRExp                      (106)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'%='           { PT _ (TS _ 4) }
	'&'            { PT _ (TS _ 5) }
	'&&'           { PT _ (TS _ 6) }
	'('            { PT _ (TS _ 7) }
	')'            { PT _ (TS _ 8) }
	'*'            { PT _ (TS _ 9) }
	'*='           { PT _ (TS _ 10) }
	'+'            { PT _ (TS _ 11) }
	'++'           { PT _ (TS _ 12) }
	'+='           { PT _ (TS _ 13) }
	','            { PT _ (TS _ 14) }
	'-'            { PT _ (TS _ 15) }
	'--'           { PT _ (TS _ 16) }
	'-='           { PT _ (TS _ 17) }
	'..'           { PT _ (TS _ 18) }
	'/'            { PT _ (TS _ 19) }
	'/='           { PT _ (TS _ 20) }
	':'            { PT _ (TS _ 21) }
	';'            { PT _ (TS _ 22) }
	'<'            { PT _ (TS _ 23) }
	'<='           { PT _ (TS _ 24) }
	'='            { PT _ (TS _ 25) }
	'=='           { PT _ (TS _ 26) }
	'>'            { PT _ (TS _ 27) }
	'>='           { PT _ (TS _ 28) }
	'['            { PT _ (TS _ 29) }
	']'            { PT _ (TS _ 30) }
	'^'            { PT _ (TS _ 31) }
	'^='           { PT _ (TS _ 32) }
	'bool'         { PT _ (TS _ 33) }
	'break'        { PT _ (TS _ 34) }
	'char'         { PT _ (TS _ 35) }
	'const'        { PT _ (TS _ 36) }
	'continue'     { PT _ (TS _ 37) }
	'do'           { PT _ (TS _ 38) }
	'else'         { PT _ (TS _ 39) }
	'false'        { PT _ (TS _ 40) }
	'for'          { PT _ (TS _ 41) }
	'if'           { PT _ (TS _ 42) }
	'in'           { PT _ (TS _ 43) }
	'inout'        { PT _ (TS _ 44) }
	'int'          { PT _ (TS _ 45) }
	'out'          { PT _ (TS _ 46) }
	'param'        { PT _ (TS _ 47) }
	'proc'         { PT _ (TS _ 48) }
	'real'         { PT _ (TS _ 49) }
	'ref'          { PT _ (TS _ 50) }
	'return'       { PT _ (TS _ 51) }
	'string'       { PT _ (TS _ 52) }
	'then'         { PT _ (TS _ 53) }
	'true'         { PT _ (TS _ 54) }
	'var'          { PT _ (TS _ 55) }
	'void'         { PT _ (TS _ 56) }
	'while'        { PT _ (TS _ 57) }
	'{'            { PT _ (TS _ 58) }
	'||'           { PT _ (TS _ 59) }
	'}'            { PT _ (TS _ 60) }
	L_ident        { PT _ (TV _) }
	L_charac       { PT _ (TC _) }
	L_integ        { PT _ (TI _) }
	L_doubl        { PT _ (TD _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Char            rule  2
	Integer         rule  3
	Double          rule  4
	String          rule  5
	Program         rule  6
	Decl            rules 7, 8, 9
	Form            rule  10
	Intent          rules 11, 12, 13, 14, 15, 16, 17
	VDecl           rules 18, 19
	CDecl           rule  20
	Type            rule  21
	Compound        rules 22, 23, 24
	Basic           rules 25, 26, 27, 28, 29, 30
	Block           rules 31, 32, 33, 34
	Stm             rules 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58
	Range           rule  59
	LExp            rules 60, 61, 62, 63
	RExp            rules 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86
	Literal         rules 87, 88, 89, 90, 91, 92
	ListForm        rules 93, 94, 95
	ListDecl        rules 96, 97
	ListVDecl       rules 98, 99
	ListCDecl       rules 100, 101
	ListStm         rules 102, 103
	ListRExp        rules 104, 105, 106

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'param'        shift, and enter state 6
	'proc'         shift, and enter state 7
	'var'          shift, and enter state 8

	Program        goto state 3
	Decl           goto state 4
	ListDecl       goto state 5

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'%='           reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'*='           reduce using rule 1
	'+'            reduce using rule 1
	'+='           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'-='           reduce using rule 1
	'..'           reduce using rule 1
	'/'            reduce using rule 1
	'/='           reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'^'            reduce using rule 1
	'^='           reduce using rule 1
	'do'           reduce using rule 1
	'in'           reduce using rule 1
	'then'         reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	'}'            reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListDecl -> Decl .                                  (rule 96)
	ListDecl -> Decl . ListDecl                         (rule 97)

	'('            reduce using rule 96
	'*'            reduce using rule 96
	';'            reduce using rule 96
	'break'        reduce using rule 96
	'continue'     reduce using rule 96
	'do'           reduce using rule 96
	'for'          reduce using rule 96
	'if'           reduce using rule 96
	'param'        shift, and enter state 6
	'proc'         shift, and enter state 7
	'return'       reduce using rule 96
	'var'          shift, and enter state 8
	'while'        reduce using rule 96
	'{'            reduce using rule 96
	'}'            reduce using rule 96
	L_ident        reduce using rule 96
	%eof           reduce using rule 96

	Decl           goto state 4
	ListDecl       goto state 16

State 5

	Program -> ListDecl .                               (rule 6)

	%eof           reduce using rule 6


State 6

	Decl -> 'param' . ListCDecl ';'                     (rule 9)

	L_ident        shift, and enter state 2

	Ident          goto state 13
	CDecl          goto state 14
	ListCDecl      goto state 15

State 7

	Decl -> 'proc' . Ident '(' ListForm ')' Intent ':' Type Block    (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 12

State 8

	Decl -> 'var' . ListVDecl ';'                       (rule 8)

	L_ident        shift, and enter state 2

	Ident          goto state 9
	VDecl          goto state 10
	ListVDecl      goto state 11

State 9

	VDecl -> Ident . ':' Type                           (rule 18)
	VDecl -> Ident . ':' Type '=' RExp                  (rule 19)

	':'            shift, and enter state 23


State 10

	ListVDecl -> VDecl .                                (rule 98)
	ListVDecl -> VDecl . ',' ListVDecl                  (rule 99)

	','            shift, and enter state 22
	';'            reduce using rule 98


State 11

	Decl -> 'var' ListVDecl . ';'                       (rule 8)

	';'            shift, and enter state 21


State 12

	Decl -> 'proc' Ident . '(' ListForm ')' Intent ':' Type Block    (rule 7)

	'('            shift, and enter state 20


State 13

	CDecl -> Ident . ':' Type '=' RExp                  (rule 20)

	':'            shift, and enter state 19


State 14

	ListCDecl -> CDecl .                                (rule 100)
	ListCDecl -> CDecl . ',' ListCDecl                  (rule 101)

	','            shift, and enter state 18
	';'            reduce using rule 100


State 15

	Decl -> 'param' ListCDecl . ';'                     (rule 9)

	';'            shift, and enter state 17


State 16

	ListDecl -> Decl ListDecl .                         (rule 97)

	'('            reduce using rule 97
	'*'            reduce using rule 97
	';'            reduce using rule 97
	'break'        reduce using rule 97
	'continue'     reduce using rule 97
	'do'           reduce using rule 97
	'for'          reduce using rule 97
	'if'           reduce using rule 97
	'return'       reduce using rule 97
	'while'        reduce using rule 97
	'{'            reduce using rule 97
	'}'            reduce using rule 97
	L_ident        reduce using rule 97
	%eof           reduce using rule 97


State 17

	Decl -> 'param' ListCDecl ';' .                     (rule 9)

	'('            reduce using rule 9
	'*'            reduce using rule 9
	';'            reduce using rule 9
	'break'        reduce using rule 9
	'continue'     reduce using rule 9
	'do'           reduce using rule 9
	'for'          reduce using rule 9
	'if'           reduce using rule 9
	'param'        reduce using rule 9
	'proc'         reduce using rule 9
	'return'       reduce using rule 9
	'var'          reduce using rule 9
	'while'        reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	L_ident        reduce using rule 9
	%eof           reduce using rule 9


State 18

	ListCDecl -> CDecl ',' . ListCDecl                  (rule 101)

	L_ident        shift, and enter state 2

	Ident          goto state 13
	CDecl          goto state 14
	ListCDecl      goto state 36

State 19

	CDecl -> Ident ':' . Type '=' RExp                  (rule 20)

	'*'            reduce using rule 22
	'['            reduce using rule 22
	'bool'         reduce using rule 22
	'char'         reduce using rule 22
	'int'          reduce using rule 22
	'real'         reduce using rule 22
	'string'       reduce using rule 22
	'void'         reduce using rule 22

	Type           goto state 35
	Compound       goto state 25

State 20

	Decl -> 'proc' Ident '(' . ListForm ')' Intent ':' Type Block    (rule 7)

	')'            reduce using rule 93
	'const'        shift, and enter state 30
	'in'           shift, and enter state 31
	'inout'        shift, and enter state 32
	'out'          shift, and enter state 33
	'ref'          shift, and enter state 34
	L_ident        reduce using rule 11

	Form           goto state 27
	Intent         goto state 28
	ListForm       goto state 29

State 21

	Decl -> 'var' ListVDecl ';' .                       (rule 8)

	'('            reduce using rule 8
	'*'            reduce using rule 8
	';'            reduce using rule 8
	'break'        reduce using rule 8
	'continue'     reduce using rule 8
	'do'           reduce using rule 8
	'for'          reduce using rule 8
	'if'           reduce using rule 8
	'param'        reduce using rule 8
	'proc'         reduce using rule 8
	'return'       reduce using rule 8
	'var'          reduce using rule 8
	'while'        reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	L_ident        reduce using rule 8
	%eof           reduce using rule 8


State 22

	ListVDecl -> VDecl ',' . ListVDecl                  (rule 99)

	L_ident        shift, and enter state 2

	Ident          goto state 9
	VDecl          goto state 10
	ListVDecl      goto state 26

State 23

	VDecl -> Ident ':' . Type                           (rule 18)
	VDecl -> Ident ':' . Type '=' RExp                  (rule 19)

	'*'            reduce using rule 22
	'['            reduce using rule 22
	'bool'         reduce using rule 22
	'char'         reduce using rule 22
	'int'          reduce using rule 22
	'real'         reduce using rule 22
	'string'       reduce using rule 22
	'void'         reduce using rule 22

	Type           goto state 24
	Compound       goto state 25

State 24

	VDecl -> Ident ':' Type .                           (rule 18)
	VDecl -> Ident ':' Type . '=' RExp                  (rule 19)

	','            reduce using rule 18
	';'            reduce using rule 18
	'='            shift, and enter state 52


State 25

	Type -> Compound . Basic                            (rule 21)
	Compound -> Compound . '[' RExp ']'                 (rule 23)
	Compound -> Compound . '*'                          (rule 24)

	'*'            shift, and enter state 44
	'['            shift, and enter state 45
	'bool'         shift, and enter state 46
	'char'         shift, and enter state 47
	'int'          shift, and enter state 48
	'real'         shift, and enter state 49
	'string'       shift, and enter state 50
	'void'         shift, and enter state 51

	Basic          goto state 43

State 26

	ListVDecl -> VDecl ',' ListVDecl .                  (rule 99)

	';'            reduce using rule 99


State 27

	ListForm -> Form .                                  (rule 94)
	ListForm -> Form . ',' ListForm                     (rule 95)

	')'            reduce using rule 94
	','            shift, and enter state 42


State 28

	Form -> Intent . Ident ':' Type                     (rule 10)

	L_ident        shift, and enter state 2

	Ident          goto state 41

State 29

	Decl -> 'proc' Ident '(' ListForm . ')' Intent ':' Type Block    (rule 7)

	')'            shift, and enter state 40


State 30

	Intent -> 'const' . 'in'                            (rule 16)
	Intent -> 'const' . 'ref'                           (rule 17)

	'in'           shift, and enter state 38
	'ref'          shift, and enter state 39


State 31

	Intent -> 'in' .                                    (rule 12)

	':'            reduce using rule 12
	L_ident        reduce using rule 12


State 32

	Intent -> 'inout' .                                 (rule 14)

	':'            reduce using rule 14
	L_ident        reduce using rule 14


State 33

	Intent -> 'out' .                                   (rule 13)

	':'            reduce using rule 13
	L_ident        reduce using rule 13


State 34

	Intent -> 'ref' .                                   (rule 15)

	':'            reduce using rule 15
	L_ident        reduce using rule 15


State 35

	CDecl -> Ident ':' Type . '=' RExp                  (rule 20)

	'='            shift, and enter state 37


State 36

	ListCDecl -> CDecl ',' ListCDecl .                  (rule 101)

	';'            reduce using rule 101


State 37

	CDecl -> Ident ':' Type '=' . RExp                  (rule 20)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 78
	Literal        goto state 60

State 38

	Intent -> 'const' 'in' .                            (rule 16)

	':'            reduce using rule 16
	L_ident        reduce using rule 16


State 39

	Intent -> 'const' 'ref' .                           (rule 17)

	':'            reduce using rule 17
	L_ident        reduce using rule 17


State 40

	Decl -> 'proc' Ident '(' ListForm ')' . Intent ':' Type Block    (rule 7)

	':'            reduce using rule 11
	'const'        shift, and enter state 30
	'in'           shift, and enter state 31
	'inout'        shift, and enter state 32
	'out'          shift, and enter state 33
	'ref'          shift, and enter state 34

	Intent         goto state 77

State 41

	Form -> Intent Ident . ':' Type                     (rule 10)

	':'            shift, and enter state 76


State 42

	ListForm -> Form ',' . ListForm                     (rule 95)

	')'            reduce using rule 93
	'const'        shift, and enter state 30
	'in'           shift, and enter state 31
	'inout'        shift, and enter state 32
	'out'          shift, and enter state 33
	'ref'          shift, and enter state 34
	L_ident        reduce using rule 11

	Form           goto state 27
	Intent         goto state 28
	ListForm       goto state 75

State 43

	Type -> Compound Basic .                            (rule 21)

	')'            reduce using rule 21
	','            reduce using rule 21
	';'            reduce using rule 21
	'='            reduce using rule 21
	'{'            reduce using rule 21


State 44

	Compound -> Compound '*' .                          (rule 24)

	'*'            reduce using rule 24
	'['            reduce using rule 24
	'bool'         reduce using rule 24
	'char'         reduce using rule 24
	'int'          reduce using rule 24
	'real'         reduce using rule 24
	'string'       reduce using rule 24
	'void'         reduce using rule 24


State 45

	Compound -> Compound '[' . RExp ']'                 (rule 23)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 74
	Literal        goto state 60

State 46

	Basic -> 'bool' .                                   (rule 25)

	')'            reduce using rule 25
	','            reduce using rule 25
	';'            reduce using rule 25
	'='            reduce using rule 25
	'{'            reduce using rule 25


State 47

	Basic -> 'char' .                                   (rule 26)

	')'            reduce using rule 26
	','            reduce using rule 26
	';'            reduce using rule 26
	'='            reduce using rule 26
	'{'            reduce using rule 26


State 48

	Basic -> 'int' .                                    (rule 27)

	')'            reduce using rule 27
	','            reduce using rule 27
	';'            reduce using rule 27
	'='            reduce using rule 27
	'{'            reduce using rule 27


State 49

	Basic -> 'real' .                                   (rule 28)

	')'            reduce using rule 28
	','            reduce using rule 28
	';'            reduce using rule 28
	'='            reduce using rule 28
	'{'            reduce using rule 28


State 50

	Basic -> 'string' .                                 (rule 29)

	')'            reduce using rule 29
	','            reduce using rule 29
	';'            reduce using rule 29
	'='            reduce using rule 29
	'{'            reduce using rule 29


State 51

	Basic -> 'void' .                                   (rule 30)

	')'            reduce using rule 30
	','            reduce using rule 30
	';'            reduce using rule 30
	'='            reduce using rule 30
	'{'            reduce using rule 30


State 52

	VDecl -> Ident ':' Type '=' . RExp                  (rule 19)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 59
	Literal        goto state 60

State 53

	LExp -> Ident .                                     (rule 62)
	RExp -> Ident . '(' ListRExp ')'                    (rule 84)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	'('            shift, and enter state 108
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'..'           reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            reduce using rule 62
	']'            reduce using rule 62
	'^'            reduce using rule 62
	'do'           reduce using rule 62
	'then'         reduce using rule 62
	'{'            reduce using rule 62
	'||'           reduce using rule 62
	'}'            reduce using rule 62


State 54

	Literal -> Char .                                   (rule 89)

	'!='           reduce using rule 89
	'%'            reduce using rule 89
	'&&'           reduce using rule 89
	')'            reduce using rule 89
	'*'            reduce using rule 89
	'+'            reduce using rule 89
	','            reduce using rule 89
	'-'            reduce using rule 89
	'..'           reduce using rule 89
	'/'            reduce using rule 89
	';'            reduce using rule 89
	'<'            reduce using rule 89
	'<='           reduce using rule 89
	'=='           reduce using rule 89
	'>'            reduce using rule 89
	'>='           reduce using rule 89
	']'            reduce using rule 89
	'^'            reduce using rule 89
	'do'           reduce using rule 89
	'then'         reduce using rule 89
	'{'            reduce using rule 89
	'||'           reduce using rule 89
	'}'            reduce using rule 89


State 55

	Literal -> Integer .                                (rule 90)

	'!='           reduce using rule 90
	'%'            reduce using rule 90
	'&&'           reduce using rule 90
	')'            reduce using rule 90
	'*'            reduce using rule 90
	'+'            reduce using rule 90
	','            reduce using rule 90
	'-'            reduce using rule 90
	'..'           reduce using rule 90
	'/'            reduce using rule 90
	';'            reduce using rule 90
	'<'            reduce using rule 90
	'<='           reduce using rule 90
	'=='           reduce using rule 90
	'>'            reduce using rule 90
	'>='           reduce using rule 90
	']'            reduce using rule 90
	'^'            reduce using rule 90
	'do'           reduce using rule 90
	'then'         reduce using rule 90
	'{'            reduce using rule 90
	'||'           reduce using rule 90
	'}'            reduce using rule 90


State 56

	Literal -> Double .                                 (rule 91)

	'!='           reduce using rule 91
	'%'            reduce using rule 91
	'&&'           reduce using rule 91
	')'            reduce using rule 91
	'*'            reduce using rule 91
	'+'            reduce using rule 91
	','            reduce using rule 91
	'-'            reduce using rule 91
	'..'           reduce using rule 91
	'/'            reduce using rule 91
	';'            reduce using rule 91
	'<'            reduce using rule 91
	'<='           reduce using rule 91
	'=='           reduce using rule 91
	'>'            reduce using rule 91
	'>='           reduce using rule 91
	']'            reduce using rule 91
	'^'            reduce using rule 91
	'do'           reduce using rule 91
	'then'         reduce using rule 91
	'{'            reduce using rule 91
	'||'           reduce using rule 91
	'}'            reduce using rule 91


State 57

	Literal -> String .                                 (rule 92)

	'!='           reduce using rule 92
	'%'            reduce using rule 92
	'&&'           reduce using rule 92
	')'            reduce using rule 92
	'*'            reduce using rule 92
	'+'            reduce using rule 92
	','            reduce using rule 92
	'-'            reduce using rule 92
	'..'           reduce using rule 92
	'/'            reduce using rule 92
	';'            reduce using rule 92
	'<'            reduce using rule 92
	'<='           reduce using rule 92
	'=='           reduce using rule 92
	'>'            reduce using rule 92
	'>='           reduce using rule 92
	']'            reduce using rule 92
	'^'            reduce using rule 92
	'do'           reduce using rule 92
	'then'         reduce using rule 92
	'{'            reduce using rule 92
	'||'           reduce using rule 92
	'}'            reduce using rule 92


State 58

	LExp -> LExp . '[' RExp ']'                         (rule 61)
	RExp -> LExp .                                      (rule 82)

	'!='           reduce using rule 82
	'%'            reduce using rule 82
	'&&'           reduce using rule 82
	')'            reduce using rule 82
	'*'            reduce using rule 82
	'+'            reduce using rule 82
	','            reduce using rule 82
	'-'            reduce using rule 82
	'..'           reduce using rule 82
	'/'            reduce using rule 82
	';'            reduce using rule 82
	'<'            reduce using rule 82
	'<='           reduce using rule 82
	'=='           reduce using rule 82
	'>'            reduce using rule 82
	'>='           reduce using rule 82
	'['            shift, and enter state 107
	']'            reduce using rule 82
	'^'            reduce using rule 82
	'do'           reduce using rule 82
	'then'         reduce using rule 82
	'{'            reduce using rule 82
	'||'           reduce using rule 82
	'}'            reduce using rule 82


State 59

	VDecl -> Ident ':' Type '=' RExp .                  (rule 19)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	','            reduce using rule 19
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	';'            reduce using rule 19
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 60

	RExp -> Literal .                                   (rule 85)

	'!='           reduce using rule 85
	'%'            reduce using rule 85
	'&&'           reduce using rule 85
	')'            reduce using rule 85
	'*'            reduce using rule 85
	'+'            reduce using rule 85
	','            reduce using rule 85
	'-'            reduce using rule 85
	'..'           reduce using rule 85
	'/'            reduce using rule 85
	';'            reduce using rule 85
	'<'            reduce using rule 85
	'<='           reduce using rule 85
	'=='           reduce using rule 85
	'>'            reduce using rule 85
	'>='           reduce using rule 85
	']'            reduce using rule 85
	'^'            reduce using rule 85
	'do'           reduce using rule 85
	'then'         reduce using rule 85
	'{'            reduce using rule 85
	'||'           reduce using rule 85
	'}'            reduce using rule 85


State 61

	RExp -> '!' . RExp                                  (rule 66)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 106
	Literal        goto state 60

State 62

	RExp -> '&' . LExp                                  (rule 81)

	'('            shift, and enter state 102
	'*'            shift, and enter state 64
	L_ident        shift, and enter state 2

	Ident          goto state 100
	LExp           goto state 105

State 63

	LExp -> '(' . LExp ')'                              (rule 63)
	RExp -> '(' . RExp ')'                              (rule 86)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 103
	RExp           goto state 104
	Literal        goto state 60

State 64

	LExp -> '*' . LExp                                  (rule 60)

	'('            shift, and enter state 102
	'*'            shift, and enter state 64
	L_ident        shift, and enter state 2

	Ident          goto state 100
	LExp           goto state 101

State 65

	RExp -> '+' . RExp                                  (rule 79)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 99
	Literal        goto state 60

State 66

	RExp -> '-' . RExp                                  (rule 80)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 98
	Literal        goto state 60

State 67

	RExp -> '[' . ListRExp ']'                          (rule 83)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	']'            reduce using rule 104
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 96
	Literal        goto state 60
	ListRExp       goto state 97

State 68

	Literal -> 'false' .                                (rule 87)

	'!='           reduce using rule 87
	'%'            reduce using rule 87
	'&&'           reduce using rule 87
	')'            reduce using rule 87
	'*'            reduce using rule 87
	'+'            reduce using rule 87
	','            reduce using rule 87
	'-'            reduce using rule 87
	'..'           reduce using rule 87
	'/'            reduce using rule 87
	';'            reduce using rule 87
	'<'            reduce using rule 87
	'<='           reduce using rule 87
	'=='           reduce using rule 87
	'>'            reduce using rule 87
	'>='           reduce using rule 87
	']'            reduce using rule 87
	'^'            reduce using rule 87
	'do'           reduce using rule 87
	'then'         reduce using rule 87
	'{'            reduce using rule 87
	'||'           reduce using rule 87
	'}'            reduce using rule 87


State 69

	Literal -> 'true' .                                 (rule 88)

	'!='           reduce using rule 88
	'%'            reduce using rule 88
	'&&'           reduce using rule 88
	')'            reduce using rule 88
	'*'            reduce using rule 88
	'+'            reduce using rule 88
	','            reduce using rule 88
	'-'            reduce using rule 88
	'..'           reduce using rule 88
	'/'            reduce using rule 88
	';'            reduce using rule 88
	'<'            reduce using rule 88
	'<='           reduce using rule 88
	'=='           reduce using rule 88
	'>'            reduce using rule 88
	'>='           reduce using rule 88
	']'            reduce using rule 88
	'^'            reduce using rule 88
	'do'           reduce using rule 88
	'then'         reduce using rule 88
	'{'            reduce using rule 88
	'||'           reduce using rule 88
	'}'            reduce using rule 88


State 70

	Char -> L_charac .                                  (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'..'           reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'^'            reduce using rule 2
	'do'           reduce using rule 2
	'then'         reduce using rule 2
	'{'            reduce using rule 2
	'||'           reduce using rule 2
	'}'            reduce using rule 2


State 71

	Integer -> L_integ .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'..'           reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'^'            reduce using rule 3
	'do'           reduce using rule 3
	'then'         reduce using rule 3
	'{'            reduce using rule 3
	'||'           reduce using rule 3
	'}'            reduce using rule 3


State 72

	Double -> L_doubl .                                 (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'..'           reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	']'            reduce using rule 4
	'^'            reduce using rule 4
	'do'           reduce using rule 4
	'then'         reduce using rule 4
	'{'            reduce using rule 4
	'||'           reduce using rule 4
	'}'            reduce using rule 4


State 73

	String -> L_quoted .                                (rule 5)

	'!='           reduce using rule 5
	'%'            reduce using rule 5
	'&&'           reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'+'            reduce using rule 5
	','            reduce using rule 5
	'-'            reduce using rule 5
	'..'           reduce using rule 5
	'/'            reduce using rule 5
	';'            reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'=='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	']'            reduce using rule 5
	'^'            reduce using rule 5
	'do'           reduce using rule 5
	'then'         reduce using rule 5
	'{'            reduce using rule 5
	'||'           reduce using rule 5
	'}'            reduce using rule 5


State 74

	Compound -> Compound '[' RExp . ']'                 (rule 23)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	']'            shift, and enter state 95
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 75

	ListForm -> Form ',' ListForm .                     (rule 95)

	')'            reduce using rule 95


State 76

	Form -> Intent Ident ':' . Type                     (rule 10)

	'*'            reduce using rule 22
	'['            reduce using rule 22
	'bool'         reduce using rule 22
	'char'         reduce using rule 22
	'int'          reduce using rule 22
	'real'         reduce using rule 22
	'string'       reduce using rule 22
	'void'         reduce using rule 22

	Type           goto state 94
	Compound       goto state 25

State 77

	Decl -> 'proc' Ident '(' ListForm ')' Intent . ':' Type Block    (rule 7)

	':'            shift, and enter state 93


State 78

	CDecl -> Ident ':' Type '=' RExp .                  (rule 20)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	','            reduce using rule 20
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	';'            reduce using rule 20
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 79

	RExp -> RExp '!=' . RExp                            (rule 70)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 130
	Literal        goto state 60

State 80

	RExp -> RExp '%' . RExp                             (rule 77)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 129
	Literal        goto state 60

State 81

	RExp -> RExp '&&' . RExp                            (rule 65)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 128
	Literal        goto state 60

State 82

	RExp -> RExp '*' . RExp                             (rule 75)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 127
	Literal        goto state 60

State 83

	RExp -> RExp '+' . RExp                             (rule 73)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 126
	Literal        goto state 60

State 84

	RExp -> RExp '-' . RExp                             (rule 74)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 125
	Literal        goto state 60

State 85

	RExp -> RExp '/' . RExp                             (rule 76)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 124
	Literal        goto state 60

State 86

	RExp -> RExp '<' . RExp                             (rule 67)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 123
	Literal        goto state 60

State 87

	RExp -> RExp '<=' . RExp                            (rule 68)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 122
	Literal        goto state 60

State 88

	RExp -> RExp '==' . RExp                            (rule 69)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 121
	Literal        goto state 60

State 89

	RExp -> RExp '>' . RExp                             (rule 72)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 120
	Literal        goto state 60

State 90

	RExp -> RExp '>=' . RExp                            (rule 71)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 119
	Literal        goto state 60

State 91

	RExp -> RExp '^' . RExp                             (rule 78)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 118
	Literal        goto state 60

State 92

	RExp -> RExp '||' . RExp                            (rule 64)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 117
	Literal        goto state 60

State 93

	Decl -> 'proc' Ident '(' ListForm ')' Intent ':' . Type Block    (rule 7)

	'*'            reduce using rule 22
	'['            reduce using rule 22
	'bool'         reduce using rule 22
	'char'         reduce using rule 22
	'int'          reduce using rule 22
	'real'         reduce using rule 22
	'string'       reduce using rule 22
	'void'         reduce using rule 22

	Type           goto state 116
	Compound       goto state 25

State 94

	Form -> Intent Ident ':' Type .                     (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 95

	Compound -> Compound '[' RExp ']' .                 (rule 23)

	'*'            reduce using rule 23
	'['            reduce using rule 23
	'bool'         reduce using rule 23
	'char'         reduce using rule 23
	'int'          reduce using rule 23
	'real'         reduce using rule 23
	'string'       reduce using rule 23
	'void'         reduce using rule 23


State 96

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)
	ListRExp -> RExp .                                  (rule 105)
	ListRExp -> RExp . ',' ListRExp                     (rule 106)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	')'            reduce using rule 105
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	','            shift, and enter state 115
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	']'            reduce using rule 105
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 97

	RExp -> '[' ListRExp . ']'                          (rule 83)

	']'            shift, and enter state 114


State 98

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)
	RExp -> '-' RExp .                                  (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	')'            reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	','            reduce using rule 80
	'-'            reduce using rule 80
	'..'           reduce using rule 80
	'/'            reduce using rule 80
	';'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	']'            reduce using rule 80
	'^'            shift, and enter state 91
	'do'           reduce using rule 80
	'then'         reduce using rule 80
	'{'            reduce using rule 80
	'||'           reduce using rule 80
	'}'            reduce using rule 80


State 99

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)
	RExp -> '+' RExp .                                  (rule 79)

	'!='           reduce using rule 79
	'%'            reduce using rule 79
	'&&'           reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	'+'            reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	'..'           reduce using rule 79
	'/'            reduce using rule 79
	';'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	']'            reduce using rule 79
	'^'            shift, and enter state 91
	'do'           reduce using rule 79
	'then'         reduce using rule 79
	'{'            reduce using rule 79
	'||'           reduce using rule 79
	'}'            reduce using rule 79


State 100

	LExp -> Ident .                                     (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'%='           reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'*='           reduce using rule 62
	'+'            reduce using rule 62
	'+='           reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'-='           reduce using rule 62
	'..'           reduce using rule 62
	'/'            reduce using rule 62
	'/='           reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            reduce using rule 62
	']'            reduce using rule 62
	'^'            reduce using rule 62
	'^='           reduce using rule 62
	'do'           reduce using rule 62
	'then'         reduce using rule 62
	'{'            reduce using rule 62
	'||'           reduce using rule 62
	'}'            reduce using rule 62


State 101

	LExp -> '*' LExp .                                  (rule 60)
	LExp -> LExp . '[' RExp ']'                         (rule 61)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'%='           reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'*='           reduce using rule 60
	'+'            reduce using rule 60
	'+='           reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'-='           reduce using rule 60
	'..'           reduce using rule 60
	'/'            reduce using rule 60
	'/='           reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'['            shift, and enter state 107
	']'            reduce using rule 60
	'^'            reduce using rule 60
	'^='           reduce using rule 60
	'do'           reduce using rule 60
	'then'         reduce using rule 60
	'{'            reduce using rule 60
	'||'           reduce using rule 60
	'}'            reduce using rule 60


State 102

	LExp -> '(' . LExp ')'                              (rule 63)

	'('            shift, and enter state 102
	'*'            shift, and enter state 64
	L_ident        shift, and enter state 2

	Ident          goto state 100
	LExp           goto state 113

State 103

	LExp -> LExp . '[' RExp ']'                         (rule 61)
	LExp -> '(' LExp . ')'                              (rule 63)
	RExp -> LExp .                                      (rule 82)

	'!='           reduce using rule 82
	'%'            reduce using rule 82
	'&&'           reduce using rule 82
	')'            shift, and enter state 112
			(reduce using rule 82)

	'*'            reduce using rule 82
	'+'            reduce using rule 82
	'-'            reduce using rule 82
	'/'            reduce using rule 82
	'<'            reduce using rule 82
	'<='           reduce using rule 82
	'=='           reduce using rule 82
	'>'            reduce using rule 82
	'>='           reduce using rule 82
	'['            shift, and enter state 107
	'^'            reduce using rule 82
	'||'           reduce using rule 82


State 104

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)
	RExp -> '(' RExp . ')'                              (rule 86)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	')'            shift, and enter state 111
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 105

	LExp -> LExp . '[' RExp ']'                         (rule 61)
	RExp -> '&' LExp .                                  (rule 81)

	'!='           reduce using rule 81
	'%'            reduce using rule 81
	'&&'           reduce using rule 81
	')'            reduce using rule 81
	'*'            reduce using rule 81
	'+'            reduce using rule 81
	','            reduce using rule 81
	'-'            reduce using rule 81
	'..'           reduce using rule 81
	'/'            reduce using rule 81
	';'            reduce using rule 81
	'<'            reduce using rule 81
	'<='           reduce using rule 81
	'=='           reduce using rule 81
	'>'            reduce using rule 81
	'>='           reduce using rule 81
	'['            shift, and enter state 107
	']'            reduce using rule 81
	'^'            reduce using rule 81
	'do'           reduce using rule 81
	'then'         reduce using rule 81
	'{'            reduce using rule 81
	'||'           reduce using rule 81
	'}'            reduce using rule 81


State 106

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> '!' RExp .                                  (rule 66)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'..'           reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'^'            shift, and enter state 91
	'do'           reduce using rule 66
	'then'         reduce using rule 66
	'{'            reduce using rule 66
	'||'           reduce using rule 66
	'}'            reduce using rule 66


State 107

	LExp -> LExp '[' . RExp ']'                         (rule 61)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 110
	Literal        goto state 60

State 108

	RExp -> Ident '(' . ListRExp ')'                    (rule 84)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	')'            reduce using rule 104
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 96
	Literal        goto state 60
	ListRExp       goto state 109

State 109

	RExp -> Ident '(' ListRExp . ')'                    (rule 84)

	')'            shift, and enter state 135


State 110

	LExp -> LExp '[' RExp . ']'                         (rule 61)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	']'            shift, and enter state 134
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 111

	RExp -> '(' RExp ')' .                              (rule 86)

	'!='           reduce using rule 86
	'%'            reduce using rule 86
	'&&'           reduce using rule 86
	')'            reduce using rule 86
	'*'            reduce using rule 86
	'+'            reduce using rule 86
	','            reduce using rule 86
	'-'            reduce using rule 86
	'..'           reduce using rule 86
	'/'            reduce using rule 86
	';'            reduce using rule 86
	'<'            reduce using rule 86
	'<='           reduce using rule 86
	'=='           reduce using rule 86
	'>'            reduce using rule 86
	'>='           reduce using rule 86
	']'            reduce using rule 86
	'^'            reduce using rule 86
	'do'           reduce using rule 86
	'then'         reduce using rule 86
	'{'            reduce using rule 86
	'||'           reduce using rule 86
	'}'            reduce using rule 86


State 112

	LExp -> '(' LExp ')' .                              (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'%='           reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'*='           reduce using rule 63
	'+'            reduce using rule 63
	'+='           reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'-='           reduce using rule 63
	'..'           reduce using rule 63
	'/'            reduce using rule 63
	'/='           reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'['            reduce using rule 63
	']'            reduce using rule 63
	'^'            reduce using rule 63
	'^='           reduce using rule 63
	'do'           reduce using rule 63
	'then'         reduce using rule 63
	'{'            reduce using rule 63
	'||'           reduce using rule 63
	'}'            reduce using rule 63


State 113

	LExp -> LExp . '[' RExp ']'                         (rule 61)
	LExp -> '(' LExp . ')'                              (rule 63)

	')'            shift, and enter state 112
	'['            shift, and enter state 107


State 114

	RExp -> '[' ListRExp ']' .                          (rule 83)

	'!='           reduce using rule 83
	'%'            reduce using rule 83
	'&&'           reduce using rule 83
	')'            reduce using rule 83
	'*'            reduce using rule 83
	'+'            reduce using rule 83
	','            reduce using rule 83
	'-'            reduce using rule 83
	'..'           reduce using rule 83
	'/'            reduce using rule 83
	';'            reduce using rule 83
	'<'            reduce using rule 83
	'<='           reduce using rule 83
	'=='           reduce using rule 83
	'>'            reduce using rule 83
	'>='           reduce using rule 83
	']'            reduce using rule 83
	'^'            reduce using rule 83
	'do'           reduce using rule 83
	'then'         reduce using rule 83
	'{'            reduce using rule 83
	'||'           reduce using rule 83
	'}'            reduce using rule 83


State 115

	ListRExp -> RExp ',' . ListRExp                     (rule 106)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	')'            reduce using rule 104
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	']'            reduce using rule 104
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 96
	Literal        goto state 60
	ListRExp       goto state 133

State 116

	Decl -> 'proc' Ident '(' ListForm ')' Intent ':' Type . Block    (rule 7)

	'{'            shift, and enter state 132

	Block          goto state 131

State 117

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp '||' RExp .                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	')'            reduce using rule 64
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	','            reduce using rule 64
	'-'            shift, and enter state 84
	'..'           reduce using rule 64
	'/'            shift, and enter state 85
	';'            reduce using rule 64
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	']'            reduce using rule 64
	'^'            shift, and enter state 91
	'do'           reduce using rule 64
	'then'         reduce using rule 64
	'{'            reduce using rule 64
	'||'           reduce using rule 64
	'}'            reduce using rule 64


State 118

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)
	RExp -> RExp '^' RExp .                             (rule 78)

	'!='           reduce using rule 78
	'%'            reduce using rule 78
	'&&'           reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'+'            reduce using rule 78
	','            reduce using rule 78
	'-'            reduce using rule 78
	'..'           reduce using rule 78
	'/'            reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	']'            reduce using rule 78
	'^'            shift, and enter state 91
	'do'           reduce using rule 78
	'then'         reduce using rule 78
	'{'            reduce using rule 78
	'||'           reduce using rule 78
	'}'            reduce using rule 78


State 119

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp '>=' RExp .                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           reduce using rule 71
	'%'            shift, and enter state 80
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	','            reduce using rule 71
	'-'            shift, and enter state 84
	'..'           reduce using rule 71
	'/'            shift, and enter state 85
	';'            reduce using rule 71
	'<'            fail
	'<='           fail
	'=='           reduce using rule 71
	'>'            fail
	'>='           fail
	']'            reduce using rule 71
	'^'            shift, and enter state 91
	'do'           reduce using rule 71
	'then'         reduce using rule 71
	'{'            reduce using rule 71
	'||'           reduce using rule 71
	'}'            reduce using rule 71


State 120

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp '>' RExp .                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           reduce using rule 72
	'%'            shift, and enter state 80
	'&&'           reduce using rule 72
	')'            reduce using rule 72
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	','            reduce using rule 72
	'-'            shift, and enter state 84
	'..'           reduce using rule 72
	'/'            shift, and enter state 85
	';'            reduce using rule 72
	'<'            fail
	'<='           fail
	'=='           reduce using rule 72
	'>'            fail
	'>='           fail
	']'            reduce using rule 72
	'^'            shift, and enter state 91
	'do'           reduce using rule 72
	'then'         reduce using rule 72
	'{'            reduce using rule 72
	'||'           reduce using rule 72
	'}'            reduce using rule 72


State 121

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp '==' RExp .                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           fail
	'%'            shift, and enter state 80
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	','            reduce using rule 69
	'-'            shift, and enter state 84
	'..'           reduce using rule 69
	'/'            shift, and enter state 85
	';'            reduce using rule 69
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           fail
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	']'            reduce using rule 69
	'^'            shift, and enter state 91
	'do'           reduce using rule 69
	'then'         reduce using rule 69
	'{'            reduce using rule 69
	'||'           reduce using rule 69
	'}'            reduce using rule 69


State 122

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp '<=' RExp .                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           reduce using rule 68
	'%'            shift, and enter state 80
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	','            reduce using rule 68
	'-'            shift, and enter state 84
	'..'           reduce using rule 68
	'/'            shift, and enter state 85
	';'            reduce using rule 68
	'<'            fail
	'<='           fail
	'=='           reduce using rule 68
	'>'            fail
	'>='           fail
	']'            reduce using rule 68
	'^'            shift, and enter state 91
	'do'           reduce using rule 68
	'then'         reduce using rule 68
	'{'            reduce using rule 68
	'||'           reduce using rule 68
	'}'            reduce using rule 68


State 123

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp '<' RExp .                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           reduce using rule 67
	'%'            shift, and enter state 80
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	','            reduce using rule 67
	'-'            shift, and enter state 84
	'..'           reduce using rule 67
	'/'            shift, and enter state 85
	';'            reduce using rule 67
	'<'            fail
	'<='           fail
	'=='           reduce using rule 67
	'>'            fail
	'>='           fail
	']'            reduce using rule 67
	'^'            shift, and enter state 91
	'do'           reduce using rule 67
	'then'         reduce using rule 67
	'{'            reduce using rule 67
	'||'           reduce using rule 67
	'}'            reduce using rule 67


State 124

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp '/' RExp .                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           reduce using rule 76
	'%'            reduce using rule 76
	'&&'           reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	'+'            reduce using rule 76
	','            reduce using rule 76
	'-'            reduce using rule 76
	'..'           reduce using rule 76
	'/'            reduce using rule 76
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	']'            reduce using rule 76
	'^'            shift, and enter state 91
	'do'           reduce using rule 76
	'then'         reduce using rule 76
	'{'            reduce using rule 76
	'||'           reduce using rule 76
	'}'            reduce using rule 76


State 125

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp '-' RExp .                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           reduce using rule 74
	'%'            shift, and enter state 80
	'&&'           reduce using rule 74
	')'            reduce using rule 74
	'*'            shift, and enter state 82
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'..'           reduce using rule 74
	'/'            shift, and enter state 85
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	']'            reduce using rule 74
	'^'            shift, and enter state 91
	'do'           reduce using rule 74
	'then'         reduce using rule 74
	'{'            reduce using rule 74
	'||'           reduce using rule 74
	'}'            reduce using rule 74


State 126

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp '+' RExp .                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           reduce using rule 73
	'%'            shift, and enter state 80
	'&&'           reduce using rule 73
	')'            reduce using rule 73
	'*'            shift, and enter state 82
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'..'           reduce using rule 73
	'/'            shift, and enter state 85
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	']'            reduce using rule 73
	'^'            shift, and enter state 91
	'do'           reduce using rule 73
	'then'         reduce using rule 73
	'{'            reduce using rule 73
	'||'           reduce using rule 73
	'}'            reduce using rule 73


State 127

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp '*' RExp .                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           reduce using rule 75
	'%'            reduce using rule 75
	'&&'           reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	'+'            reduce using rule 75
	','            reduce using rule 75
	'-'            reduce using rule 75
	'..'           reduce using rule 75
	'/'            reduce using rule 75
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	']'            reduce using rule 75
	'^'            shift, and enter state 91
	'do'           reduce using rule 75
	'then'         reduce using rule 75
	'{'            reduce using rule 75
	'||'           reduce using rule 75
	'}'            reduce using rule 75


State 128

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp '&&' RExp .                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	','            reduce using rule 65
	'-'            shift, and enter state 84
	'..'           reduce using rule 65
	'/'            shift, and enter state 85
	';'            reduce using rule 65
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	']'            reduce using rule 65
	'^'            shift, and enter state 91
	'do'           reduce using rule 65
	'then'         reduce using rule 65
	'{'            reduce using rule 65
	'||'           reduce using rule 65
	'}'            reduce using rule 65


State 129

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp '%' RExp .                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           reduce using rule 77
	'%'            reduce using rule 77
	'&&'           reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'+'            reduce using rule 77
	','            reduce using rule 77
	'-'            reduce using rule 77
	'..'           reduce using rule 77
	'/'            reduce using rule 77
	';'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	']'            reduce using rule 77
	'^'            shift, and enter state 91
	'do'           reduce using rule 77
	'then'         reduce using rule 77
	'{'            reduce using rule 77
	'||'           reduce using rule 77
	'}'            reduce using rule 77


State 130

	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp '!=' RExp .                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           fail
	'%'            shift, and enter state 80
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	','            reduce using rule 70
	'-'            shift, and enter state 84
	'..'           reduce using rule 70
	'/'            shift, and enter state 85
	';'            reduce using rule 70
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           fail
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	']'            reduce using rule 70
	'^'            shift, and enter state 91
	'do'           reduce using rule 70
	'then'         reduce using rule 70
	'{'            reduce using rule 70
	'||'           reduce using rule 70
	'}'            reduce using rule 70


State 131

	Decl -> 'proc' Ident '(' ListForm ')' Intent ':' Type Block .    (rule 7)

	'('            reduce using rule 7
	'*'            reduce using rule 7
	';'            reduce using rule 7
	'break'        reduce using rule 7
	'continue'     reduce using rule 7
	'do'           reduce using rule 7
	'for'          reduce using rule 7
	'if'           reduce using rule 7
	'param'        reduce using rule 7
	'proc'         reduce using rule 7
	'return'       reduce using rule 7
	'var'          reduce using rule 7
	'while'        reduce using rule 7
	'{'            reduce using rule 7
	'}'            reduce using rule 7
	L_ident        reduce using rule 7
	%eof           reduce using rule 7


State 132

	Block -> '{' . '}'                                  (rule 31)
	Block -> '{' . ListDecl '}'                         (rule 32)
	Block -> '{' . ListStm '}'                          (rule 33)
	Block -> '{' . ListDecl ListStm '}'                 (rule 34)

	'('            shift, and enter state 102
	'*'            shift, and enter state 64
	';'            shift, and enter state 142
	'break'        shift, and enter state 143
	'continue'     shift, and enter state 144
	'do'           shift, and enter state 145
	'for'          shift, and enter state 146
	'if'           shift, and enter state 147
	'param'        shift, and enter state 6
	'proc'         shift, and enter state 7
	'return'       shift, and enter state 148
	'var'          shift, and enter state 8
	'while'        shift, and enter state 149
	'{'            shift, and enter state 132
	'}'            shift, and enter state 150
	L_ident        shift, and enter state 2

	Ident          goto state 136
	Decl           goto state 4
	Block          goto state 137
	Stm            goto state 138
	LExp           goto state 139
	ListDecl       goto state 140
	ListStm        goto state 141

State 133

	ListRExp -> RExp ',' ListRExp .                     (rule 106)

	')'            reduce using rule 106
	']'            reduce using rule 106


State 134

	LExp -> LExp '[' RExp ']' .                         (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'%='           reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'*='           reduce using rule 61
	'+'            reduce using rule 61
	'+='           reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'-='           reduce using rule 61
	'..'           reduce using rule 61
	'/'            reduce using rule 61
	'/='           reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	'^'            reduce using rule 61
	'^='           reduce using rule 61
	'do'           reduce using rule 61
	'then'         reduce using rule 61
	'{'            reduce using rule 61
	'||'           reduce using rule 61
	'}'            reduce using rule 61


State 135

	RExp -> Ident '(' ListRExp ')' .                    (rule 84)

	'!='           reduce using rule 84
	'%'            reduce using rule 84
	'&&'           reduce using rule 84
	')'            reduce using rule 84
	'*'            reduce using rule 84
	'+'            reduce using rule 84
	','            reduce using rule 84
	'-'            reduce using rule 84
	'..'           reduce using rule 84
	'/'            reduce using rule 84
	';'            reduce using rule 84
	'<'            reduce using rule 84
	'<='           reduce using rule 84
	'=='           reduce using rule 84
	'>'            reduce using rule 84
	'>='           reduce using rule 84
	']'            reduce using rule 84
	'^'            reduce using rule 84
	'do'           reduce using rule 84
	'then'         reduce using rule 84
	'{'            reduce using rule 84
	'||'           reduce using rule 84
	'}'            reduce using rule 84


State 136

	Stm -> Ident . '(' ListRExp ')' ';'                 (rule 37)
	LExp -> Ident .                                     (rule 62)

	'%='           reduce using rule 62
	'('            shift, and enter state 172
	'*='           reduce using rule 62
	'+='           reduce using rule 62
	'-='           reduce using rule 62
	'/='           reduce using rule 62
	';'            reduce using rule 62
	'='            reduce using rule 62
	'['            reduce using rule 62
	'^='           reduce using rule 62


State 137

	Stm -> Block .                                      (rule 36)

	'('            reduce using rule 36
	'*'            reduce using rule 36
	';'            reduce using rule 36
	'break'        reduce using rule 36
	'continue'     reduce using rule 36
	'do'           reduce using rule 36
	'else'         reduce using rule 36
	'for'          reduce using rule 36
	'if'           reduce using rule 36
	'return'       reduce using rule 36
	'while'        reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	L_ident        reduce using rule 36


State 138

	ListStm -> Stm .                                    (rule 102)
	ListStm -> Stm . ListStm                            (rule 103)

	'('            shift, and enter state 102
	'*'            shift, and enter state 64
	';'            shift, and enter state 142
	'break'        shift, and enter state 143
	'continue'     shift, and enter state 144
	'do'           shift, and enter state 145
	'for'          shift, and enter state 146
	'if'           shift, and enter state 147
	'return'       shift, and enter state 148
	'while'        shift, and enter state 149
	'{'            shift, and enter state 132
	'}'            reduce using rule 102
	L_ident        shift, and enter state 2

	Ident          goto state 136
	Block          goto state 137
	Stm            goto state 138
	LExp           goto state 139
	ListStm        goto state 171

State 139

	Stm -> LExp . '=' RExp ';'                          (rule 38)
	Stm -> LExp . '+=' RExp ';'                         (rule 39)
	Stm -> LExp . '-=' RExp ';'                         (rule 40)
	Stm -> LExp . '*=' RExp ';'                         (rule 41)
	Stm -> LExp . '/=' RExp ';'                         (rule 42)
	Stm -> LExp . '%=' RExp ';'                         (rule 43)
	Stm -> LExp . '^=' RExp ';'                         (rule 44)
	Stm -> LExp . ';'                                   (rule 45)
	LExp -> LExp . '[' RExp ']'                         (rule 61)

	'%='           shift, and enter state 163
	'*='           shift, and enter state 164
	'+='           shift, and enter state 165
	'-='           shift, and enter state 166
	'/='           shift, and enter state 167
	';'            shift, and enter state 168
	'='            shift, and enter state 169
	'['            shift, and enter state 107
	'^='           shift, and enter state 170


State 140

	Block -> '{' ListDecl . '}'                         (rule 32)
	Block -> '{' ListDecl . ListStm '}'                 (rule 34)

	'('            shift, and enter state 102
	'*'            shift, and enter state 64
	';'            shift, and enter state 142
	'break'        shift, and enter state 143
	'continue'     shift, and enter state 144
	'do'           shift, and enter state 145
	'for'          shift, and enter state 146
	'if'           shift, and enter state 147
	'return'       shift, and enter state 148
	'while'        shift, and enter state 149
	'{'            shift, and enter state 132
	'}'            shift, and enter state 162
	L_ident        shift, and enter state 2

	Ident          goto state 136
	Block          goto state 137
	Stm            goto state 138
	LExp           goto state 139
	ListStm        goto state 161

State 141

	Block -> '{' ListStm . '}'                          (rule 33)

	'}'            shift, and enter state 160


State 142

	Stm -> ';' . Stm                                    (rule 35)

	'('            shift, and enter state 102
	'*'            shift, and enter state 64
	';'            shift, and enter state 142
	'break'        shift, and enter state 143
	'continue'     shift, and enter state 144
	'do'           shift, and enter state 145
	'for'          shift, and enter state 146
	'if'           shift, and enter state 147
	'return'       shift, and enter state 148
	'while'        shift, and enter state 149
	'{'            shift, and enter state 132
	L_ident        shift, and enter state 2

	Ident          goto state 136
	Block          goto state 137
	Stm            goto state 159
	LExp           goto state 139

State 143

	Stm -> 'break' . ';'                                (rule 57)

	';'            shift, and enter state 158


State 144

	Stm -> 'continue' . ';'                             (rule 58)

	';'            shift, and enter state 157


State 145

	Stm -> 'do' . Stm 'while' RExp ';'                  (rule 52)

	'('            shift, and enter state 102
	'*'            shift, and enter state 64
	';'            shift, and enter state 142
	'break'        shift, and enter state 143
	'continue'     shift, and enter state 144
	'do'           shift, and enter state 145
	'for'          shift, and enter state 146
	'if'           shift, and enter state 147
	'return'       shift, and enter state 148
	'while'        shift, and enter state 149
	'{'            shift, and enter state 132
	L_ident        shift, and enter state 2

	Ident          goto state 136
	Block          goto state 137
	Stm            goto state 156
	LExp           goto state 139

State 146

	Stm -> 'for' . Ident 'in' Range 'do' Stm            (rule 53)
	Stm -> 'for' . Ident 'in' Range Block               (rule 54)

	L_ident        shift, and enter state 2

	Ident          goto state 155

State 147

	Stm -> 'if' . RExp 'then' Stm                       (rule 46)
	Stm -> 'if' . RExp Block                            (rule 47)
	Stm -> 'if' . RExp 'then' Stm 'else' Stm            (rule 48)
	Stm -> 'if' . RExp Block 'else' Stm                 (rule 49)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 154
	Literal        goto state 60

State 148

	Stm -> 'return' . ';'                               (rule 55)
	Stm -> 'return' . RExp ';'                          (rule 56)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	';'            shift, and enter state 153
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 152
	Literal        goto state 60

State 149

	Stm -> 'while' . RExp 'do' Stm                      (rule 50)
	Stm -> 'while' . RExp Block                         (rule 51)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 151
	Literal        goto state 60

State 150

	Block -> '{' '}' .                                  (rule 31)

	'('            reduce using rule 31
	'*'            reduce using rule 31
	';'            reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'do'           reduce using rule 31
	'else'         reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'param'        reduce using rule 31
	'proc'         reduce using rule 31
	'return'       reduce using rule 31
	'var'          reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31
	%eof           reduce using rule 31


State 151

	Stm -> 'while' RExp . 'do' Stm                      (rule 50)
	Stm -> 'while' RExp . Block                         (rule 51)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'do'           shift, and enter state 188
	'{'            shift, and enter state 132
	'||'           shift, and enter state 92

	Block          goto state 187

State 152

	Stm -> 'return' RExp . ';'                          (rule 56)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	';'            shift, and enter state 186
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 153

	Stm -> 'return' ';' .                               (rule 55)

	'('            reduce using rule 55
	'*'            reduce using rule 55
	';'            reduce using rule 55
	'break'        reduce using rule 55
	'continue'     reduce using rule 55
	'do'           reduce using rule 55
	'else'         reduce using rule 55
	'for'          reduce using rule 55
	'if'           reduce using rule 55
	'return'       reduce using rule 55
	'while'        reduce using rule 55
	'{'            reduce using rule 55
	'}'            reduce using rule 55
	L_ident        reduce using rule 55


State 154

	Stm -> 'if' RExp . 'then' Stm                       (rule 46)
	Stm -> 'if' RExp . Block                            (rule 47)
	Stm -> 'if' RExp . 'then' Stm 'else' Stm            (rule 48)
	Stm -> 'if' RExp . Block 'else' Stm                 (rule 49)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'then'         shift, and enter state 185
	'{'            shift, and enter state 132
	'||'           shift, and enter state 92

	Block          goto state 184

State 155

	Stm -> 'for' Ident . 'in' Range 'do' Stm            (rule 53)
	Stm -> 'for' Ident . 'in' Range Block               (rule 54)

	'in'           shift, and enter state 183


State 156

	Stm -> 'do' Stm . 'while' RExp ';'                  (rule 52)

	'while'        shift, and enter state 182


State 157

	Stm -> 'continue' ';' .                             (rule 58)

	'('            reduce using rule 58
	'*'            reduce using rule 58
	';'            reduce using rule 58
	'break'        reduce using rule 58
	'continue'     reduce using rule 58
	'do'           reduce using rule 58
	'else'         reduce using rule 58
	'for'          reduce using rule 58
	'if'           reduce using rule 58
	'return'       reduce using rule 58
	'while'        reduce using rule 58
	'{'            reduce using rule 58
	'}'            reduce using rule 58
	L_ident        reduce using rule 58


State 158

	Stm -> 'break' ';' .                                (rule 57)

	'('            reduce using rule 57
	'*'            reduce using rule 57
	';'            reduce using rule 57
	'break'        reduce using rule 57
	'continue'     reduce using rule 57
	'do'           reduce using rule 57
	'else'         reduce using rule 57
	'for'          reduce using rule 57
	'if'           reduce using rule 57
	'return'       reduce using rule 57
	'while'        reduce using rule 57
	'{'            reduce using rule 57
	'}'            reduce using rule 57
	L_ident        reduce using rule 57


State 159

	Stm -> ';' Stm .                                    (rule 35)

	'('            reduce using rule 35
	'*'            reduce using rule 35
	';'            reduce using rule 35
	'break'        reduce using rule 35
	'continue'     reduce using rule 35
	'do'           reduce using rule 35
	'else'         reduce using rule 35
	'for'          reduce using rule 35
	'if'           reduce using rule 35
	'return'       reduce using rule 35
	'while'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_ident        reduce using rule 35


State 160

	Block -> '{' ListStm '}' .                          (rule 33)

	'('            reduce using rule 33
	'*'            reduce using rule 33
	';'            reduce using rule 33
	'break'        reduce using rule 33
	'continue'     reduce using rule 33
	'do'           reduce using rule 33
	'else'         reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'param'        reduce using rule 33
	'proc'         reduce using rule 33
	'return'       reduce using rule 33
	'var'          reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_ident        reduce using rule 33
	%eof           reduce using rule 33


State 161

	Block -> '{' ListDecl ListStm . '}'                 (rule 34)

	'}'            shift, and enter state 181


State 162

	Block -> '{' ListDecl '}' .                         (rule 32)

	'('            reduce using rule 32
	'*'            reduce using rule 32
	';'            reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'do'           reduce using rule 32
	'else'         reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'param'        reduce using rule 32
	'proc'         reduce using rule 32
	'return'       reduce using rule 32
	'var'          reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_ident        reduce using rule 32
	%eof           reduce using rule 32


State 163

	Stm -> LExp '%=' . RExp ';'                         (rule 43)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 180
	Literal        goto state 60

State 164

	Stm -> LExp '*=' . RExp ';'                         (rule 41)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 179
	Literal        goto state 60

State 165

	Stm -> LExp '+=' . RExp ';'                         (rule 39)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 178
	Literal        goto state 60

State 166

	Stm -> LExp '-=' . RExp ';'                         (rule 40)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 177
	Literal        goto state 60

State 167

	Stm -> LExp '/=' . RExp ';'                         (rule 42)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 176
	Literal        goto state 60

State 168

	Stm -> LExp ';' .                                   (rule 45)

	'('            reduce using rule 45
	'*'            reduce using rule 45
	';'            reduce using rule 45
	'break'        reduce using rule 45
	'continue'     reduce using rule 45
	'do'           reduce using rule 45
	'else'         reduce using rule 45
	'for'          reduce using rule 45
	'if'           reduce using rule 45
	'return'       reduce using rule 45
	'while'        reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	L_ident        reduce using rule 45


State 169

	Stm -> LExp '=' . RExp ';'                          (rule 38)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 175
	Literal        goto state 60

State 170

	Stm -> LExp '^=' . RExp ';'                         (rule 44)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 174
	Literal        goto state 60

State 171

	ListStm -> Stm ListStm .                            (rule 103)

	'}'            reduce using rule 103


State 172

	Stm -> Ident '(' . ListRExp ')' ';'                 (rule 37)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	')'            reduce using rule 104
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 96
	Literal        goto state 60
	ListRExp       goto state 173

State 173

	Stm -> Ident '(' ListRExp . ')' ';'                 (rule 37)

	')'            shift, and enter state 202


State 174

	Stm -> LExp '^=' RExp . ';'                         (rule 44)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	';'            shift, and enter state 201
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 175

	Stm -> LExp '=' RExp . ';'                          (rule 38)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	';'            shift, and enter state 200
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 176

	Stm -> LExp '/=' RExp . ';'                         (rule 42)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	';'            shift, and enter state 199
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 177

	Stm -> LExp '-=' RExp . ';'                         (rule 40)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	';'            shift, and enter state 198
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 178

	Stm -> LExp '+=' RExp . ';'                         (rule 39)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	';'            shift, and enter state 197
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 179

	Stm -> LExp '*=' RExp . ';'                         (rule 41)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	';'            shift, and enter state 196
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 180

	Stm -> LExp '%=' RExp . ';'                         (rule 43)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	';'            shift, and enter state 195
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 181

	Block -> '{' ListDecl ListStm '}' .                 (rule 34)

	'('            reduce using rule 34
	'*'            reduce using rule 34
	';'            reduce using rule 34
	'break'        reduce using rule 34
	'continue'     reduce using rule 34
	'do'           reduce using rule 34
	'else'         reduce using rule 34
	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'param'        reduce using rule 34
	'proc'         reduce using rule 34
	'return'       reduce using rule 34
	'var'          reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_ident        reduce using rule 34
	%eof           reduce using rule 34


State 182

	Stm -> 'do' Stm 'while' . RExp ';'                  (rule 52)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 194
	Literal        goto state 60

State 183

	Stm -> 'for' Ident 'in' . Range 'do' Stm            (rule 53)
	Stm -> 'for' Ident 'in' . Range Block               (rule 54)

	'{'            shift, and enter state 193

	Range          goto state 192

State 184

	Stm -> 'if' RExp Block .                            (rule 47)
	Stm -> 'if' RExp Block . 'else' Stm                 (rule 49)

	'('            reduce using rule 47
	'*'            reduce using rule 47
	';'            reduce using rule 47
	'break'        reduce using rule 47
	'continue'     reduce using rule 47
	'do'           reduce using rule 47
	'else'         shift, and enter state 191
			(reduce using rule 47)

	'for'          reduce using rule 47
	'if'           reduce using rule 47
	'return'       reduce using rule 47
	'while'        reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	L_ident        reduce using rule 47


State 185

	Stm -> 'if' RExp 'then' . Stm                       (rule 46)
	Stm -> 'if' RExp 'then' . Stm 'else' Stm            (rule 48)

	'('            shift, and enter state 102
	'*'            shift, and enter state 64
	';'            shift, and enter state 142
	'break'        shift, and enter state 143
	'continue'     shift, and enter state 144
	'do'           shift, and enter state 145
	'for'          shift, and enter state 146
	'if'           shift, and enter state 147
	'return'       shift, and enter state 148
	'while'        shift, and enter state 149
	'{'            shift, and enter state 132
	L_ident        shift, and enter state 2

	Ident          goto state 136
	Block          goto state 137
	Stm            goto state 190
	LExp           goto state 139

State 186

	Stm -> 'return' RExp ';' .                          (rule 56)

	'('            reduce using rule 56
	'*'            reduce using rule 56
	';'            reduce using rule 56
	'break'        reduce using rule 56
	'continue'     reduce using rule 56
	'do'           reduce using rule 56
	'else'         reduce using rule 56
	'for'          reduce using rule 56
	'if'           reduce using rule 56
	'return'       reduce using rule 56
	'while'        reduce using rule 56
	'{'            reduce using rule 56
	'}'            reduce using rule 56
	L_ident        reduce using rule 56


State 187

	Stm -> 'while' RExp Block .                         (rule 51)

	'('            reduce using rule 51
	'*'            reduce using rule 51
	';'            reduce using rule 51
	'break'        reduce using rule 51
	'continue'     reduce using rule 51
	'do'           reduce using rule 51
	'else'         reduce using rule 51
	'for'          reduce using rule 51
	'if'           reduce using rule 51
	'return'       reduce using rule 51
	'while'        reduce using rule 51
	'{'            reduce using rule 51
	'}'            reduce using rule 51
	L_ident        reduce using rule 51


State 188

	Stm -> 'while' RExp 'do' . Stm                      (rule 50)

	'('            shift, and enter state 102
	'*'            shift, and enter state 64
	';'            shift, and enter state 142
	'break'        shift, and enter state 143
	'continue'     shift, and enter state 144
	'do'           shift, and enter state 145
	'for'          shift, and enter state 146
	'if'           shift, and enter state 147
	'return'       shift, and enter state 148
	'while'        shift, and enter state 149
	'{'            shift, and enter state 132
	L_ident        shift, and enter state 2

	Ident          goto state 136
	Block          goto state 137
	Stm            goto state 189
	LExp           goto state 139

State 189

	Stm -> 'while' RExp 'do' Stm .                      (rule 50)

	'('            reduce using rule 50
	'*'            reduce using rule 50
	';'            reduce using rule 50
	'break'        reduce using rule 50
	'continue'     reduce using rule 50
	'do'           reduce using rule 50
	'else'         reduce using rule 50
	'for'          reduce using rule 50
	'if'           reduce using rule 50
	'return'       reduce using rule 50
	'while'        reduce using rule 50
	'{'            reduce using rule 50
	'}'            reduce using rule 50
	L_ident        reduce using rule 50


State 190

	Stm -> 'if' RExp 'then' Stm .                       (rule 46)
	Stm -> 'if' RExp 'then' Stm . 'else' Stm            (rule 48)

	'('            reduce using rule 46
	'*'            reduce using rule 46
	';'            reduce using rule 46
	'break'        reduce using rule 46
	'continue'     reduce using rule 46
	'do'           reduce using rule 46
	'else'         shift, and enter state 209
			(reduce using rule 46)

	'for'          reduce using rule 46
	'if'           reduce using rule 46
	'return'       reduce using rule 46
	'while'        reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	L_ident        reduce using rule 46


State 191

	Stm -> 'if' RExp Block 'else' . Stm                 (rule 49)

	'('            shift, and enter state 102
	'*'            shift, and enter state 64
	';'            shift, and enter state 142
	'break'        shift, and enter state 143
	'continue'     shift, and enter state 144
	'do'           shift, and enter state 145
	'for'          shift, and enter state 146
	'if'           shift, and enter state 147
	'return'       shift, and enter state 148
	'while'        shift, and enter state 149
	'{'            shift, and enter state 132
	L_ident        shift, and enter state 2

	Ident          goto state 136
	Block          goto state 137
	Stm            goto state 208
	LExp           goto state 139

State 192

	Stm -> 'for' Ident 'in' Range . 'do' Stm            (rule 53)
	Stm -> 'for' Ident 'in' Range . Block               (rule 54)

	'do'           shift, and enter state 207
	'{'            shift, and enter state 132

	Block          goto state 206

State 193

	Range -> '{' . RExp '..' RExp '}'                   (rule 59)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 205
	Literal        goto state 60

State 194

	Stm -> 'do' Stm 'while' RExp . ';'                  (rule 52)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	';'            shift, and enter state 204
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 195

	Stm -> LExp '%=' RExp ';' .                         (rule 43)

	'('            reduce using rule 43
	'*'            reduce using rule 43
	';'            reduce using rule 43
	'break'        reduce using rule 43
	'continue'     reduce using rule 43
	'do'           reduce using rule 43
	'else'         reduce using rule 43
	'for'          reduce using rule 43
	'if'           reduce using rule 43
	'return'       reduce using rule 43
	'while'        reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	L_ident        reduce using rule 43


State 196

	Stm -> LExp '*=' RExp ';' .                         (rule 41)

	'('            reduce using rule 41
	'*'            reduce using rule 41
	';'            reduce using rule 41
	'break'        reduce using rule 41
	'continue'     reduce using rule 41
	'do'           reduce using rule 41
	'else'         reduce using rule 41
	'for'          reduce using rule 41
	'if'           reduce using rule 41
	'return'       reduce using rule 41
	'while'        reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	L_ident        reduce using rule 41


State 197

	Stm -> LExp '+=' RExp ';' .                         (rule 39)

	'('            reduce using rule 39
	'*'            reduce using rule 39
	';'            reduce using rule 39
	'break'        reduce using rule 39
	'continue'     reduce using rule 39
	'do'           reduce using rule 39
	'else'         reduce using rule 39
	'for'          reduce using rule 39
	'if'           reduce using rule 39
	'return'       reduce using rule 39
	'while'        reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_ident        reduce using rule 39


State 198

	Stm -> LExp '-=' RExp ';' .                         (rule 40)

	'('            reduce using rule 40
	'*'            reduce using rule 40
	';'            reduce using rule 40
	'break'        reduce using rule 40
	'continue'     reduce using rule 40
	'do'           reduce using rule 40
	'else'         reduce using rule 40
	'for'          reduce using rule 40
	'if'           reduce using rule 40
	'return'       reduce using rule 40
	'while'        reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	L_ident        reduce using rule 40


State 199

	Stm -> LExp '/=' RExp ';' .                         (rule 42)

	'('            reduce using rule 42
	'*'            reduce using rule 42
	';'            reduce using rule 42
	'break'        reduce using rule 42
	'continue'     reduce using rule 42
	'do'           reduce using rule 42
	'else'         reduce using rule 42
	'for'          reduce using rule 42
	'if'           reduce using rule 42
	'return'       reduce using rule 42
	'while'        reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	L_ident        reduce using rule 42


State 200

	Stm -> LExp '=' RExp ';' .                          (rule 38)

	'('            reduce using rule 38
	'*'            reduce using rule 38
	';'            reduce using rule 38
	'break'        reduce using rule 38
	'continue'     reduce using rule 38
	'do'           reduce using rule 38
	'else'         reduce using rule 38
	'for'          reduce using rule 38
	'if'           reduce using rule 38
	'return'       reduce using rule 38
	'while'        reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	L_ident        reduce using rule 38


State 201

	Stm -> LExp '^=' RExp ';' .                         (rule 44)

	'('            reduce using rule 44
	'*'            reduce using rule 44
	';'            reduce using rule 44
	'break'        reduce using rule 44
	'continue'     reduce using rule 44
	'do'           reduce using rule 44
	'else'         reduce using rule 44
	'for'          reduce using rule 44
	'if'           reduce using rule 44
	'return'       reduce using rule 44
	'while'        reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	L_ident        reduce using rule 44


State 202

	Stm -> Ident '(' ListRExp ')' . ';'                 (rule 37)

	';'            shift, and enter state 203


State 203

	Stm -> Ident '(' ListRExp ')' ';' .                 (rule 37)

	'('            reduce using rule 37
	'*'            reduce using rule 37
	';'            reduce using rule 37
	'break'        reduce using rule 37
	'continue'     reduce using rule 37
	'do'           reduce using rule 37
	'else'         reduce using rule 37
	'for'          reduce using rule 37
	'if'           reduce using rule 37
	'return'       reduce using rule 37
	'while'        reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_ident        reduce using rule 37


State 204

	Stm -> 'do' Stm 'while' RExp ';' .                  (rule 52)

	'('            reduce using rule 52
	'*'            reduce using rule 52
	';'            reduce using rule 52
	'break'        reduce using rule 52
	'continue'     reduce using rule 52
	'do'           reduce using rule 52
	'else'         reduce using rule 52
	'for'          reduce using rule 52
	'if'           reduce using rule 52
	'return'       reduce using rule 52
	'while'        reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	L_ident        reduce using rule 52


State 205

	Range -> '{' RExp . '..' RExp '}'                   (rule 59)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'..'           shift, and enter state 212
	'/'            shift, and enter state 85
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92


State 206

	Stm -> 'for' Ident 'in' Range Block .               (rule 54)

	'('            reduce using rule 54
	'*'            reduce using rule 54
	';'            reduce using rule 54
	'break'        reduce using rule 54
	'continue'     reduce using rule 54
	'do'           reduce using rule 54
	'else'         reduce using rule 54
	'for'          reduce using rule 54
	'if'           reduce using rule 54
	'return'       reduce using rule 54
	'while'        reduce using rule 54
	'{'            reduce using rule 54
	'}'            reduce using rule 54
	L_ident        reduce using rule 54


State 207

	Stm -> 'for' Ident 'in' Range 'do' . Stm            (rule 53)

	'('            shift, and enter state 102
	'*'            shift, and enter state 64
	';'            shift, and enter state 142
	'break'        shift, and enter state 143
	'continue'     shift, and enter state 144
	'do'           shift, and enter state 145
	'for'          shift, and enter state 146
	'if'           shift, and enter state 147
	'return'       shift, and enter state 148
	'while'        shift, and enter state 149
	'{'            shift, and enter state 132
	L_ident        shift, and enter state 2

	Ident          goto state 136
	Block          goto state 137
	Stm            goto state 211
	LExp           goto state 139

State 208

	Stm -> 'if' RExp Block 'else' Stm .                 (rule 49)

	'('            reduce using rule 49
	'*'            reduce using rule 49
	';'            reduce using rule 49
	'break'        reduce using rule 49
	'continue'     reduce using rule 49
	'do'           reduce using rule 49
	'else'         reduce using rule 49
	'for'          reduce using rule 49
	'if'           reduce using rule 49
	'return'       reduce using rule 49
	'while'        reduce using rule 49
	'{'            reduce using rule 49
	'}'            reduce using rule 49
	L_ident        reduce using rule 49


State 209

	Stm -> 'if' RExp 'then' Stm 'else' . Stm            (rule 48)

	'('            shift, and enter state 102
	'*'            shift, and enter state 64
	';'            shift, and enter state 142
	'break'        shift, and enter state 143
	'continue'     shift, and enter state 144
	'do'           shift, and enter state 145
	'for'          shift, and enter state 146
	'if'           shift, and enter state 147
	'return'       shift, and enter state 148
	'while'        shift, and enter state 149
	'{'            shift, and enter state 132
	L_ident        shift, and enter state 2

	Ident          goto state 136
	Block          goto state 137
	Stm            goto state 210
	LExp           goto state 139

State 210

	Stm -> 'if' RExp 'then' Stm 'else' Stm .            (rule 48)

	'('            reduce using rule 48
	'*'            reduce using rule 48
	';'            reduce using rule 48
	'break'        reduce using rule 48
	'continue'     reduce using rule 48
	'do'           reduce using rule 48
	'else'         reduce using rule 48
	'for'          reduce using rule 48
	'if'           reduce using rule 48
	'return'       reduce using rule 48
	'while'        reduce using rule 48
	'{'            reduce using rule 48
	'}'            reduce using rule 48
	L_ident        reduce using rule 48


State 211

	Stm -> 'for' Ident 'in' Range 'do' Stm .            (rule 53)

	'('            reduce using rule 53
	'*'            reduce using rule 53
	';'            reduce using rule 53
	'break'        reduce using rule 53
	'continue'     reduce using rule 53
	'do'           reduce using rule 53
	'else'         reduce using rule 53
	'for'          reduce using rule 53
	'if'           reduce using rule 53
	'return'       reduce using rule 53
	'while'        reduce using rule 53
	'{'            reduce using rule 53
	'}'            reduce using rule 53
	L_ident        reduce using rule 53


State 212

	Range -> '{' RExp '..' . RExp '}'                   (rule 59)

	'!'            shift, and enter state 61
	'&'            shift, and enter state 62
	'('            shift, and enter state 63
	'*'            shift, and enter state 64
	'+'            shift, and enter state 65
	'-'            shift, and enter state 66
	'['            shift, and enter state 67
	'false'        shift, and enter state 68
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 70
	L_integ        shift, and enter state 71
	L_doubl        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 213
	Literal        goto state 60

State 213

	Range -> '{' RExp '..' RExp . '}'                   (rule 59)
	RExp -> RExp . '||' RExp                            (rule 64)
	RExp -> RExp . '&&' RExp                            (rule 65)
	RExp -> RExp . '<' RExp                             (rule 67)
	RExp -> RExp . '<=' RExp                            (rule 68)
	RExp -> RExp . '==' RExp                            (rule 69)
	RExp -> RExp . '!=' RExp                            (rule 70)
	RExp -> RExp . '>=' RExp                            (rule 71)
	RExp -> RExp . '>' RExp                             (rule 72)
	RExp -> RExp . '+' RExp                             (rule 73)
	RExp -> RExp . '-' RExp                             (rule 74)
	RExp -> RExp . '*' RExp                             (rule 75)
	RExp -> RExp . '/' RExp                             (rule 76)
	RExp -> RExp . '%' RExp                             (rule 77)
	RExp -> RExp . '^' RExp                             (rule 78)

	'!='           shift, and enter state 79
	'%'            shift, and enter state 80
	'&&'           shift, and enter state 81
	'*'            shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'/'            shift, and enter state 85
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	'^'            shift, and enter state 91
	'||'           shift, and enter state 92
	'}'            shift, and enter state 214


State 214

	Range -> '{' RExp '..' RExp '}' .                   (rule 59)

	'do'           reduce using rule 59
	'{'            reduce using rule 59


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 107
Number of terminals: 65
Number of non-terminals: 27
Number of states: 215
