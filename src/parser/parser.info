-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from parser.y
-----------------------------------------------------------------------------

state 108 contains 1 shift/reduce conflicts.
state 199 contains 1 shift/reduce conflicts.
state 200 contains 1 shift/reduce conflicts.

terminal '++' is unused
terminal '--' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Char -> L_charac                                   (2)
	Integer -> L_integ                                 (3)
	Double -> L_doubl                                  (4)
	String -> L_quoted                                 (5)
	Program -> ListDecl                                (6)
	Decl -> 'proc' Ident '(' ListForm ')' Intent ':' Type Block   (7)
	Decl -> 'var' ListVDecl ';'                        (8)
	Decl -> 'param' ListCDecl ';'                      (9)
	Form -> Intent Ident ':' Type                      (10)
	Intent -> 'in'                                     (11)
	Intent -> 'out'                                    (12)
	Intent -> 'inout'                                  (13)
	Intent -> 'ref'                                    (14)
	Intent -> 'const' 'in'                             (15)
	Intent -> 'const' 'ref'                            (16)
	VDecl -> Ident ':' Type                            (17)
	VDecl -> Ident ':' Type '=' RExp                   (18)
	CDecl -> Ident ':' Type '=' RExp                   (19)
	Type -> Compound Basic                             (20)
	Compound ->                                        (21)
	Compound -> Compound '[' RExp ']'                  (22)
	Compound -> Compound '*'                           (23)
	Basic -> 'bool'                                    (24)
	Basic -> 'char'                                    (25)
	Basic -> 'int'                                     (26)
	Basic -> 'real'                                    (27)
	Basic -> 'string'                                  (28)
	Basic -> 'void'                                    (29)
	Block -> '{' ListDecl ListStm '}'                  (30)
	Stm -> ';' Stm                                     (31)
	Stm -> Block                                       (32)
	Stm -> Ident '(' ListRExp ')' ';'                  (33)
	Stm -> PWrite '(' RExp ')' ';'                     (34)
	Stm -> LExp '=' RExp ';'                           (35)
	Stm -> LExp '+=' RExp ';'                          (36)
	Stm -> LExp '-=' RExp ';'                          (37)
	Stm -> LExp '*=' RExp ';'                          (38)
	Stm -> LExp '/=' RExp ';'                          (39)
	Stm -> LExp '%=' RExp ';'                          (40)
	Stm -> LExp '**=' RExp ';'                         (41)
	Stm -> LExp ';'                                    (42)
	Stm -> 'if' RExp 'then' Stm                        (43)
	Stm -> 'if' RExp Block Stm                         (44)
	Stm -> 'if' RExp 'then' Stm 'else' Stm             (45)
	Stm -> 'if' RExp Block Stm 'else' Stm              (46)
	Stm -> 'while' RExp 'do' Stm                       (47)
	Stm -> 'while' RExp Block                          (48)
	Stm -> 'do' Stm 'while' RExp ';'                   (49)
	Stm -> 'for' Ident 'in' Range 'do' Stm             (50)
	Stm -> 'for' Ident 'in' Range Block                (51)
	Stm -> 'return' ';'                                (52)
	Stm -> 'return' RExp ';'                           (53)
	Stm -> 'break' ';'                                 (54)
	Stm -> 'continue' ';'                              (55)
	Range -> '{' RExp '..' RExp '}'                    (56)
	LExp -> '*' LExp                                   (57)
	LExp -> LExp '[' RExp ']'                          (58)
	LExp -> Ident                                      (59)
	LExp -> '(' LExp ')'                               (60)
	RExp -> RExp '||' RExp                             (61)
	RExp -> RExp '&&' RExp                             (62)
	RExp -> '!' RExp                                   (63)
	RExp -> RExp '<' RExp                              (64)
	RExp -> RExp '<=' RExp                             (65)
	RExp -> RExp '==' RExp                             (66)
	RExp -> RExp '!=' RExp                             (67)
	RExp -> RExp '>=' RExp                             (68)
	RExp -> RExp '>' RExp                              (69)
	RExp -> RExp '+' RExp                              (70)
	RExp -> RExp '-' RExp                              (71)
	RExp -> RExp '*' RExp                              (72)
	RExp -> RExp '/' RExp                              (73)
	RExp -> RExp '%' RExp                              (74)
	RExp -> RExp '**' RExp                             (75)
	RExp -> '+' RExp                                   (76)
	RExp -> '-' RExp                                   (77)
	RExp -> '&' LExp                                   (78)
	RExp -> LExp                                       (79)
	RExp -> '[' ListRExp ']'                           (80)
	RExp -> Ident '(' ListRExp ')'                     (81)
	RExp -> PRead '(' ')'                              (82)
	RExp -> Literal                                    (83)
	RExp -> '(' RExp ')'                               (84)
	PRead -> 'readChar'                                (85)
	PRead -> 'readInt'                                 (86)
	PRead -> 'readFloat'                               (87)
	PRead -> 'readString'                              (88)
	PWrite -> 'writeChar'                              (89)
	PWrite -> 'writeInt'                               (90)
	PWrite -> 'writeFloat'                             (91)
	PWrite -> 'writeString'                            (92)
	Literal -> 'false'                                 (93)
	Literal -> 'true'                                  (94)
	Literal -> Char                                    (95)
	Literal -> Integer                                 (96)
	Literal -> Double                                  (97)
	Literal -> String                                  (98)
	ListForm ->                                        (99)
	ListForm -> Form                                   (100)
	ListForm -> Form ',' ListForm                      (101)
	ListDecl -> Decl                                   (102)
	ListDecl -> Decl ListDecl                          (103)
	ListVDecl -> VDecl                                 (104)
	ListVDecl -> VDecl ',' ListVDecl                   (105)
	ListCDecl -> CDecl                                 (106)
	ListCDecl -> CDecl ',' ListCDecl                   (107)
	ListStm ->                                         (108)
	ListStm -> ListStm Stm                             (109)
	ListRExp ->                                        (110)
	ListRExp -> RExp                                   (111)
	ListRExp -> RExp ',' ListRExp                      (112)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'%='           { PT _ (TS _ 4) }
	'&'            { PT _ (TS _ 5) }
	'&&'           { PT _ (TS _ 6) }
	'('            { PT _ (TS _ 7) }
	')'            { PT _ (TS _ 8) }
	'*'            { PT _ (TS _ 9) }
	'**'           { PT _ (TS _ 10) }
	'**='          { PT _ (TS _ 11) }
	'*='           { PT _ (TS _ 12) }
	'+'            { PT _ (TS _ 13) }
	'++'           { PT _ (TS _ 14) }
	'+='           { PT _ (TS _ 15) }
	','            { PT _ (TS _ 16) }
	'-'            { PT _ (TS _ 17) }
	'--'           { PT _ (TS _ 18) }
	'-='           { PT _ (TS _ 19) }
	'..'           { PT _ (TS _ 20) }
	'/'            { PT _ (TS _ 21) }
	'/='           { PT _ (TS _ 22) }
	':'            { PT _ (TS _ 23) }
	';'            { PT _ (TS _ 24) }
	'<'            { PT _ (TS _ 25) }
	'<='           { PT _ (TS _ 26) }
	'='            { PT _ (TS _ 27) }
	'=='           { PT _ (TS _ 28) }
	'>'            { PT _ (TS _ 29) }
	'>='           { PT _ (TS _ 30) }
	'['            { PT _ (TS _ 31) }
	']'            { PT _ (TS _ 32) }
	'bool'         { PT _ (TS _ 33) }
	'break'        { PT _ (TS _ 34) }
	'char'         { PT _ (TS _ 35) }
	'const'        { PT _ (TS _ 36) }
	'continue'     { PT _ (TS _ 37) }
	'do'           { PT _ (TS _ 38) }
	'else'         { PT _ (TS _ 39) }
	'false'        { PT _ (TS _ 40) }
	'for'          { PT _ (TS _ 41) }
	'if'           { PT _ (TS _ 42) }
	'in'           { PT _ (TS _ 43) }
	'inout'        { PT _ (TS _ 44) }
	'int'          { PT _ (TS _ 45) }
	'out'          { PT _ (TS _ 46) }
	'param'        { PT _ (TS _ 47) }
	'proc'         { PT _ (TS _ 48) }
	'readChar'     { PT _ (TS _ 49) }
	'readFloat'    { PT _ (TS _ 50) }
	'readInt'      { PT _ (TS _ 51) }
	'readString'   { PT _ (TS _ 52) }
	'real'         { PT _ (TS _ 53) }
	'ref'          { PT _ (TS _ 54) }
	'return'       { PT _ (TS _ 55) }
	'string'       { PT _ (TS _ 56) }
	'then'         { PT _ (TS _ 57) }
	'true'         { PT _ (TS _ 58) }
	'var'          { PT _ (TS _ 59) }
	'void'         { PT _ (TS _ 60) }
	'while'        { PT _ (TS _ 61) }
	'writeChar'    { PT _ (TS _ 62) }
	'writeFloat'   { PT _ (TS _ 63) }
	'writeInt'     { PT _ (TS _ 64) }
	'writeString'  { PT _ (TS _ 65) }
	'{'            { PT _ (TS _ 66) }
	'||'           { PT _ (TS _ 67) }
	'}'            { PT _ (TS _ 68) }
	L_ident        { PT _ (TV $$) }
	L_charac       { PT _ (TC $$) }
	L_integ        { PT _ (TI $$) }
	L_doubl        { PT _ (TD $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Char            rule  2
	Integer         rule  3
	Double          rule  4
	String          rule  5
	Program         rule  6
	Decl            rules 7, 8, 9
	Form            rule  10
	Intent          rules 11, 12, 13, 14, 15, 16
	VDecl           rules 17, 18
	CDecl           rule  19
	Type            rule  20
	Compound        rules 21, 22, 23
	Basic           rules 24, 25, 26, 27, 28, 29
	Block           rule  30
	Stm             rules 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
	Range           rule  56
	LExp            rules 57, 58, 59, 60
	RExp            rules 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84
	PRead           rules 85, 86, 87, 88
	PWrite          rules 89, 90, 91, 92
	Literal         rules 93, 94, 95, 96, 97, 98
	ListForm        rules 99, 100, 101
	ListDecl        rules 102, 103
	ListVDecl       rules 104, 105
	ListCDecl       rules 106, 107
	ListStm         rules 108, 109
	ListRExp        rules 110, 111, 112

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'param'        shift, and enter state 6
	'proc'         shift, and enter state 7
	'var'          shift, and enter state 8

	Program        goto state 3
	Decl           goto state 4
	ListDecl       goto state 5

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'%='           reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'**'           reduce using rule 1
	'**='          reduce using rule 1
	'*='           reduce using rule 1
	'+'            reduce using rule 1
	'+='           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'-='           reduce using rule 1
	'..'           reduce using rule 1
	'/'            reduce using rule 1
	'/='           reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'do'           reduce using rule 1
	'in'           reduce using rule 1
	'then'         reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	'}'            reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListDecl -> Decl .                                  (rule 102)
	ListDecl -> Decl . ListDecl                         (rule 103)

	'('            reduce using rule 102
	'*'            reduce using rule 102
	';'            reduce using rule 102
	'break'        reduce using rule 102
	'continue'     reduce using rule 102
	'do'           reduce using rule 102
	'for'          reduce using rule 102
	'if'           reduce using rule 102
	'param'        shift, and enter state 6
	'proc'         shift, and enter state 7
	'return'       reduce using rule 102
	'var'          shift, and enter state 8
	'while'        reduce using rule 102
	'writeChar'    reduce using rule 102
	'writeFloat'   reduce using rule 102
	'writeInt'     reduce using rule 102
	'writeString'  reduce using rule 102
	'{'            reduce using rule 102
	'}'            reduce using rule 102
	L_ident        reduce using rule 102
	%eof           reduce using rule 102

	Decl           goto state 4
	ListDecl       goto state 16

State 5

	Program -> ListDecl .                               (rule 6)

	%eof           reduce using rule 6


State 6

	Decl -> 'param' . ListCDecl ';'                     (rule 9)

	L_ident        shift, and enter state 2

	Ident          goto state 13
	CDecl          goto state 14
	ListCDecl      goto state 15

State 7

	Decl -> 'proc' . Ident '(' ListForm ')' Intent ':' Type Block    (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 12

State 8

	Decl -> 'var' . ListVDecl ';'                       (rule 8)

	L_ident        shift, and enter state 2

	Ident          goto state 9
	VDecl          goto state 10
	ListVDecl      goto state 11

State 9

	VDecl -> Ident . ':' Type                           (rule 17)
	VDecl -> Ident . ':' Type '=' RExp                  (rule 18)

	':'            shift, and enter state 23


State 10

	ListVDecl -> VDecl .                                (rule 104)
	ListVDecl -> VDecl . ',' ListVDecl                  (rule 105)

	','            shift, and enter state 22
	';'            reduce using rule 104


State 11

	Decl -> 'var' ListVDecl . ';'                       (rule 8)

	';'            shift, and enter state 21


State 12

	Decl -> 'proc' Ident . '(' ListForm ')' Intent ':' Type Block    (rule 7)

	'('            shift, and enter state 20


State 13

	CDecl -> Ident . ':' Type '=' RExp                  (rule 19)

	':'            shift, and enter state 19


State 14

	ListCDecl -> CDecl .                                (rule 106)
	ListCDecl -> CDecl . ',' ListCDecl                  (rule 107)

	','            shift, and enter state 18
	';'            reduce using rule 106


State 15

	Decl -> 'param' ListCDecl . ';'                     (rule 9)

	';'            shift, and enter state 17


State 16

	ListDecl -> Decl ListDecl .                         (rule 103)

	'('            reduce using rule 103
	'*'            reduce using rule 103
	';'            reduce using rule 103
	'break'        reduce using rule 103
	'continue'     reduce using rule 103
	'do'           reduce using rule 103
	'for'          reduce using rule 103
	'if'           reduce using rule 103
	'return'       reduce using rule 103
	'while'        reduce using rule 103
	'writeChar'    reduce using rule 103
	'writeFloat'   reduce using rule 103
	'writeInt'     reduce using rule 103
	'writeString'  reduce using rule 103
	'{'            reduce using rule 103
	'}'            reduce using rule 103
	L_ident        reduce using rule 103
	%eof           reduce using rule 103


State 17

	Decl -> 'param' ListCDecl ';' .                     (rule 9)

	'('            reduce using rule 9
	'*'            reduce using rule 9
	';'            reduce using rule 9
	'break'        reduce using rule 9
	'continue'     reduce using rule 9
	'do'           reduce using rule 9
	'for'          reduce using rule 9
	'if'           reduce using rule 9
	'param'        reduce using rule 9
	'proc'         reduce using rule 9
	'return'       reduce using rule 9
	'var'          reduce using rule 9
	'while'        reduce using rule 9
	'writeChar'    reduce using rule 9
	'writeFloat'   reduce using rule 9
	'writeInt'     reduce using rule 9
	'writeString'  reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	L_ident        reduce using rule 9
	%eof           reduce using rule 9


State 18

	ListCDecl -> CDecl ',' . ListCDecl                  (rule 107)

	L_ident        shift, and enter state 2

	Ident          goto state 13
	CDecl          goto state 14
	ListCDecl      goto state 36

State 19

	CDecl -> Ident ':' . Type '=' RExp                  (rule 19)

	'*'            reduce using rule 21
	'['            reduce using rule 21
	'bool'         reduce using rule 21
	'char'         reduce using rule 21
	'int'          reduce using rule 21
	'real'         reduce using rule 21
	'string'       reduce using rule 21
	'void'         reduce using rule 21

	Type           goto state 35
	Compound       goto state 25

State 20

	Decl -> 'proc' Ident '(' . ListForm ')' Intent ':' Type Block    (rule 7)

	')'            reduce using rule 99
	'const'        shift, and enter state 30
	'in'           shift, and enter state 31
	'inout'        shift, and enter state 32
	'out'          shift, and enter state 33
	'ref'          shift, and enter state 34

	Form           goto state 27
	Intent         goto state 28
	ListForm       goto state 29

State 21

	Decl -> 'var' ListVDecl ';' .                       (rule 8)

	'('            reduce using rule 8
	'*'            reduce using rule 8
	';'            reduce using rule 8
	'break'        reduce using rule 8
	'continue'     reduce using rule 8
	'do'           reduce using rule 8
	'for'          reduce using rule 8
	'if'           reduce using rule 8
	'param'        reduce using rule 8
	'proc'         reduce using rule 8
	'return'       reduce using rule 8
	'var'          reduce using rule 8
	'while'        reduce using rule 8
	'writeChar'    reduce using rule 8
	'writeFloat'   reduce using rule 8
	'writeInt'     reduce using rule 8
	'writeString'  reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	L_ident        reduce using rule 8
	%eof           reduce using rule 8


State 22

	ListVDecl -> VDecl ',' . ListVDecl                  (rule 105)

	L_ident        shift, and enter state 2

	Ident          goto state 9
	VDecl          goto state 10
	ListVDecl      goto state 26

State 23

	VDecl -> Ident ':' . Type                           (rule 17)
	VDecl -> Ident ':' . Type '=' RExp                  (rule 18)

	'*'            reduce using rule 21
	'['            reduce using rule 21
	'bool'         reduce using rule 21
	'char'         reduce using rule 21
	'int'          reduce using rule 21
	'real'         reduce using rule 21
	'string'       reduce using rule 21
	'void'         reduce using rule 21

	Type           goto state 24
	Compound       goto state 25

State 24

	VDecl -> Ident ':' Type .                           (rule 17)
	VDecl -> Ident ':' Type . '=' RExp                  (rule 18)

	','            reduce using rule 17
	';'            reduce using rule 17
	'='            shift, and enter state 52


State 25

	Type -> Compound . Basic                            (rule 20)
	Compound -> Compound . '[' RExp ']'                 (rule 22)
	Compound -> Compound . '*'                          (rule 23)

	'*'            shift, and enter state 44
	'['            shift, and enter state 45
	'bool'         shift, and enter state 46
	'char'         shift, and enter state 47
	'int'          shift, and enter state 48
	'real'         shift, and enter state 49
	'string'       shift, and enter state 50
	'void'         shift, and enter state 51

	Basic          goto state 43

State 26

	ListVDecl -> VDecl ',' ListVDecl .                  (rule 105)

	';'            reduce using rule 105


State 27

	ListForm -> Form .                                  (rule 100)
	ListForm -> Form . ',' ListForm                     (rule 101)

	')'            reduce using rule 100
	','            shift, and enter state 42


State 28

	Form -> Intent . Ident ':' Type                     (rule 10)

	L_ident        shift, and enter state 2

	Ident          goto state 41

State 29

	Decl -> 'proc' Ident '(' ListForm . ')' Intent ':' Type Block    (rule 7)

	')'            shift, and enter state 40


State 30

	Intent -> 'const' . 'in'                            (rule 15)
	Intent -> 'const' . 'ref'                           (rule 16)

	'in'           shift, and enter state 38
	'ref'          shift, and enter state 39


State 31

	Intent -> 'in' .                                    (rule 11)

	':'            reduce using rule 11
	L_ident        reduce using rule 11


State 32

	Intent -> 'inout' .                                 (rule 13)

	':'            reduce using rule 13
	L_ident        reduce using rule 13


State 33

	Intent -> 'out' .                                   (rule 12)

	':'            reduce using rule 12
	L_ident        reduce using rule 12


State 34

	Intent -> 'ref' .                                   (rule 14)

	':'            reduce using rule 14
	L_ident        reduce using rule 14


State 35

	CDecl -> Ident ':' Type . '=' RExp                  (rule 19)

	'='            shift, and enter state 37


State 36

	ListCDecl -> CDecl ',' ListCDecl .                  (rule 107)

	';'            reduce using rule 107


State 37

	CDecl -> Ident ':' Type '=' . RExp                  (rule 19)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 83
	PRead          goto state 60
	Literal        goto state 61

State 38

	Intent -> 'const' 'in' .                            (rule 15)

	':'            reduce using rule 15
	L_ident        reduce using rule 15


State 39

	Intent -> 'const' 'ref' .                           (rule 16)

	':'            reduce using rule 16
	L_ident        reduce using rule 16


State 40

	Decl -> 'proc' Ident '(' ListForm ')' . Intent ':' Type Block    (rule 7)

	'const'        shift, and enter state 30
	'in'           shift, and enter state 31
	'inout'        shift, and enter state 32
	'out'          shift, and enter state 33
	'ref'          shift, and enter state 34

	Intent         goto state 82

State 41

	Form -> Intent Ident . ':' Type                     (rule 10)

	':'            shift, and enter state 81


State 42

	ListForm -> Form ',' . ListForm                     (rule 101)

	')'            reduce using rule 99
	'const'        shift, and enter state 30
	'in'           shift, and enter state 31
	'inout'        shift, and enter state 32
	'out'          shift, and enter state 33
	'ref'          shift, and enter state 34

	Form           goto state 27
	Intent         goto state 28
	ListForm       goto state 80

State 43

	Type -> Compound Basic .                            (rule 20)

	')'            reduce using rule 20
	','            reduce using rule 20
	';'            reduce using rule 20
	'='            reduce using rule 20
	'{'            reduce using rule 20


State 44

	Compound -> Compound '*' .                          (rule 23)

	'*'            reduce using rule 23
	'['            reduce using rule 23
	'bool'         reduce using rule 23
	'char'         reduce using rule 23
	'int'          reduce using rule 23
	'real'         reduce using rule 23
	'string'       reduce using rule 23
	'void'         reduce using rule 23


State 45

	Compound -> Compound '[' . RExp ']'                 (rule 22)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 79
	PRead          goto state 60
	Literal        goto state 61

State 46

	Basic -> 'bool' .                                   (rule 24)

	')'            reduce using rule 24
	','            reduce using rule 24
	';'            reduce using rule 24
	'='            reduce using rule 24
	'{'            reduce using rule 24


State 47

	Basic -> 'char' .                                   (rule 25)

	')'            reduce using rule 25
	','            reduce using rule 25
	';'            reduce using rule 25
	'='            reduce using rule 25
	'{'            reduce using rule 25


State 48

	Basic -> 'int' .                                    (rule 26)

	')'            reduce using rule 26
	','            reduce using rule 26
	';'            reduce using rule 26
	'='            reduce using rule 26
	'{'            reduce using rule 26


State 49

	Basic -> 'real' .                                   (rule 27)

	')'            reduce using rule 27
	','            reduce using rule 27
	';'            reduce using rule 27
	'='            reduce using rule 27
	'{'            reduce using rule 27


State 50

	Basic -> 'string' .                                 (rule 28)

	')'            reduce using rule 28
	','            reduce using rule 28
	';'            reduce using rule 28
	'='            reduce using rule 28
	'{'            reduce using rule 28


State 51

	Basic -> 'void' .                                   (rule 29)

	')'            reduce using rule 29
	','            reduce using rule 29
	';'            reduce using rule 29
	'='            reduce using rule 29
	'{'            reduce using rule 29


State 52

	VDecl -> Ident ':' Type '=' . RExp                  (rule 18)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 59
	PRead          goto state 60
	Literal        goto state 61

State 53

	LExp -> Ident .                                     (rule 59)
	RExp -> Ident . '(' ListRExp ')'                    (rule 81)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	'('            shift, and enter state 114
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'**'           reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'..'           reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'do'           reduce using rule 59
	'then'         reduce using rule 59
	'{'            reduce using rule 59
	'||'           reduce using rule 59
	'}'            reduce using rule 59


State 54

	Literal -> Char .                                   (rule 95)

	'!='           reduce using rule 95
	'%'            reduce using rule 95
	'&&'           reduce using rule 95
	')'            reduce using rule 95
	'*'            reduce using rule 95
	'**'           reduce using rule 95
	'+'            reduce using rule 95
	','            reduce using rule 95
	'-'            reduce using rule 95
	'..'           reduce using rule 95
	'/'            reduce using rule 95
	';'            reduce using rule 95
	'<'            reduce using rule 95
	'<='           reduce using rule 95
	'=='           reduce using rule 95
	'>'            reduce using rule 95
	'>='           reduce using rule 95
	']'            reduce using rule 95
	'do'           reduce using rule 95
	'then'         reduce using rule 95
	'{'            reduce using rule 95
	'||'           reduce using rule 95
	'}'            reduce using rule 95


State 55

	Literal -> Integer .                                (rule 96)

	'!='           reduce using rule 96
	'%'            reduce using rule 96
	'&&'           reduce using rule 96
	')'            reduce using rule 96
	'*'            reduce using rule 96
	'**'           reduce using rule 96
	'+'            reduce using rule 96
	','            reduce using rule 96
	'-'            reduce using rule 96
	'..'           reduce using rule 96
	'/'            reduce using rule 96
	';'            reduce using rule 96
	'<'            reduce using rule 96
	'<='           reduce using rule 96
	'=='           reduce using rule 96
	'>'            reduce using rule 96
	'>='           reduce using rule 96
	']'            reduce using rule 96
	'do'           reduce using rule 96
	'then'         reduce using rule 96
	'{'            reduce using rule 96
	'||'           reduce using rule 96
	'}'            reduce using rule 96


State 56

	Literal -> Double .                                 (rule 97)

	'!='           reduce using rule 97
	'%'            reduce using rule 97
	'&&'           reduce using rule 97
	')'            reduce using rule 97
	'*'            reduce using rule 97
	'**'           reduce using rule 97
	'+'            reduce using rule 97
	','            reduce using rule 97
	'-'            reduce using rule 97
	'..'           reduce using rule 97
	'/'            reduce using rule 97
	';'            reduce using rule 97
	'<'            reduce using rule 97
	'<='           reduce using rule 97
	'=='           reduce using rule 97
	'>'            reduce using rule 97
	'>='           reduce using rule 97
	']'            reduce using rule 97
	'do'           reduce using rule 97
	'then'         reduce using rule 97
	'{'            reduce using rule 97
	'||'           reduce using rule 97
	'}'            reduce using rule 97


State 57

	Literal -> String .                                 (rule 98)

	'!='           reduce using rule 98
	'%'            reduce using rule 98
	'&&'           reduce using rule 98
	')'            reduce using rule 98
	'*'            reduce using rule 98
	'**'           reduce using rule 98
	'+'            reduce using rule 98
	','            reduce using rule 98
	'-'            reduce using rule 98
	'..'           reduce using rule 98
	'/'            reduce using rule 98
	';'            reduce using rule 98
	'<'            reduce using rule 98
	'<='           reduce using rule 98
	'=='           reduce using rule 98
	'>'            reduce using rule 98
	'>='           reduce using rule 98
	']'            reduce using rule 98
	'do'           reduce using rule 98
	'then'         reduce using rule 98
	'{'            reduce using rule 98
	'||'           reduce using rule 98
	'}'            reduce using rule 98


State 58

	LExp -> LExp . '[' RExp ']'                         (rule 58)
	RExp -> LExp .                                      (rule 79)

	'!='           reduce using rule 79
	'%'            reduce using rule 79
	'&&'           reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	'**'           reduce using rule 79
	'+'            reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	'..'           reduce using rule 79
	'/'            reduce using rule 79
	';'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	'['            shift, and enter state 113
	']'            reduce using rule 79
	'do'           reduce using rule 79
	'then'         reduce using rule 79
	'{'            reduce using rule 79
	'||'           reduce using rule 79
	'}'            reduce using rule 79


State 59

	VDecl -> Ident ':' Type '=' RExp .                  (rule 18)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	','            reduce using rule 18
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	';'            reduce using rule 18
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97


State 60

	RExp -> PRead . '(' ')'                             (rule 82)

	'('            shift, and enter state 112


State 61

	RExp -> Literal .                                   (rule 83)

	'!='           reduce using rule 83
	'%'            reduce using rule 83
	'&&'           reduce using rule 83
	')'            reduce using rule 83
	'*'            reduce using rule 83
	'**'           reduce using rule 83
	'+'            reduce using rule 83
	','            reduce using rule 83
	'-'            reduce using rule 83
	'..'           reduce using rule 83
	'/'            reduce using rule 83
	';'            reduce using rule 83
	'<'            reduce using rule 83
	'<='           reduce using rule 83
	'=='           reduce using rule 83
	'>'            reduce using rule 83
	'>='           reduce using rule 83
	']'            reduce using rule 83
	'do'           reduce using rule 83
	'then'         reduce using rule 83
	'{'            reduce using rule 83
	'||'           reduce using rule 83
	'}'            reduce using rule 83


State 62

	RExp -> '!' . RExp                                  (rule 63)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 111
	PRead          goto state 60
	Literal        goto state 61

State 63

	RExp -> '&' . LExp                                  (rule 78)

	'('            shift, and enter state 107
	'*'            shift, and enter state 65
	L_ident        shift, and enter state 2

	Ident          goto state 105
	LExp           goto state 110

State 64

	LExp -> '(' . LExp ')'                              (rule 60)
	RExp -> '(' . RExp ')'                              (rule 84)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 108
	RExp           goto state 109
	PRead          goto state 60
	Literal        goto state 61

State 65

	LExp -> '*' . LExp                                  (rule 57)

	'('            shift, and enter state 107
	'*'            shift, and enter state 65
	L_ident        shift, and enter state 2

	Ident          goto state 105
	LExp           goto state 106

State 66

	RExp -> '+' . RExp                                  (rule 76)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 104
	PRead          goto state 60
	Literal        goto state 61

State 67

	RExp -> '-' . RExp                                  (rule 77)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 103
	PRead          goto state 60
	Literal        goto state 61

State 68

	RExp -> '[' . ListRExp ']'                          (rule 80)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	']'            reduce using rule 110
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 101
	PRead          goto state 60
	Literal        goto state 61
	ListRExp       goto state 102

State 69

	Literal -> 'false' .                                (rule 93)

	'!='           reduce using rule 93
	'%'            reduce using rule 93
	'&&'           reduce using rule 93
	')'            reduce using rule 93
	'*'            reduce using rule 93
	'**'           reduce using rule 93
	'+'            reduce using rule 93
	','            reduce using rule 93
	'-'            reduce using rule 93
	'..'           reduce using rule 93
	'/'            reduce using rule 93
	';'            reduce using rule 93
	'<'            reduce using rule 93
	'<='           reduce using rule 93
	'=='           reduce using rule 93
	'>'            reduce using rule 93
	'>='           reduce using rule 93
	']'            reduce using rule 93
	'do'           reduce using rule 93
	'then'         reduce using rule 93
	'{'            reduce using rule 93
	'||'           reduce using rule 93
	'}'            reduce using rule 93


State 70

	PRead -> 'readChar' .                               (rule 85)

	'('            reduce using rule 85


State 71

	PRead -> 'readFloat' .                              (rule 87)

	'('            reduce using rule 87


State 72

	PRead -> 'readInt' .                                (rule 86)

	'('            reduce using rule 86


State 73

	PRead -> 'readString' .                             (rule 88)

	'('            reduce using rule 88


State 74

	Literal -> 'true' .                                 (rule 94)

	'!='           reduce using rule 94
	'%'            reduce using rule 94
	'&&'           reduce using rule 94
	')'            reduce using rule 94
	'*'            reduce using rule 94
	'**'           reduce using rule 94
	'+'            reduce using rule 94
	','            reduce using rule 94
	'-'            reduce using rule 94
	'..'           reduce using rule 94
	'/'            reduce using rule 94
	';'            reduce using rule 94
	'<'            reduce using rule 94
	'<='           reduce using rule 94
	'=='           reduce using rule 94
	'>'            reduce using rule 94
	'>='           reduce using rule 94
	']'            reduce using rule 94
	'do'           reduce using rule 94
	'then'         reduce using rule 94
	'{'            reduce using rule 94
	'||'           reduce using rule 94
	'}'            reduce using rule 94


State 75

	Char -> L_charac .                                  (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'**'           reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'..'           reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'do'           reduce using rule 2
	'then'         reduce using rule 2
	'{'            reduce using rule 2
	'||'           reduce using rule 2
	'}'            reduce using rule 2


State 76

	Integer -> L_integ .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'**'           reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'..'           reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'do'           reduce using rule 3
	'then'         reduce using rule 3
	'{'            reduce using rule 3
	'||'           reduce using rule 3
	'}'            reduce using rule 3


State 77

	Double -> L_doubl .                                 (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'**'           reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'..'           reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	']'            reduce using rule 4
	'do'           reduce using rule 4
	'then'         reduce using rule 4
	'{'            reduce using rule 4
	'||'           reduce using rule 4
	'}'            reduce using rule 4


State 78

	String -> L_quoted .                                (rule 5)

	'!='           reduce using rule 5
	'%'            reduce using rule 5
	'&&'           reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'**'           reduce using rule 5
	'+'            reduce using rule 5
	','            reduce using rule 5
	'-'            reduce using rule 5
	'..'           reduce using rule 5
	'/'            reduce using rule 5
	';'            reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'=='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	']'            reduce using rule 5
	'do'           reduce using rule 5
	'then'         reduce using rule 5
	'{'            reduce using rule 5
	'||'           reduce using rule 5
	'}'            reduce using rule 5


State 79

	Compound -> Compound '[' RExp . ']'                 (rule 22)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	']'            shift, and enter state 100
	'||'           shift, and enter state 97


State 80

	ListForm -> Form ',' ListForm .                     (rule 101)

	')'            reduce using rule 101


State 81

	Form -> Intent Ident ':' . Type                     (rule 10)

	'*'            reduce using rule 21
	'['            reduce using rule 21
	'bool'         reduce using rule 21
	'char'         reduce using rule 21
	'int'          reduce using rule 21
	'real'         reduce using rule 21
	'string'       reduce using rule 21
	'void'         reduce using rule 21

	Type           goto state 99
	Compound       goto state 25

State 82

	Decl -> 'proc' Ident '(' ListForm ')' Intent . ':' Type Block    (rule 7)

	':'            shift, and enter state 98


State 83

	CDecl -> Ident ':' Type '=' RExp .                  (rule 19)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	','            reduce using rule 19
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	';'            reduce using rule 19
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97


State 84

	RExp -> RExp '!=' . RExp                            (rule 67)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 137
	PRead          goto state 60
	Literal        goto state 61

State 85

	RExp -> RExp '%' . RExp                             (rule 74)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 136
	PRead          goto state 60
	Literal        goto state 61

State 86

	RExp -> RExp '&&' . RExp                            (rule 62)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 135
	PRead          goto state 60
	Literal        goto state 61

State 87

	RExp -> RExp '*' . RExp                             (rule 72)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 134
	PRead          goto state 60
	Literal        goto state 61

State 88

	RExp -> RExp '**' . RExp                            (rule 75)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 133
	PRead          goto state 60
	Literal        goto state 61

State 89

	RExp -> RExp '+' . RExp                             (rule 70)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 132
	PRead          goto state 60
	Literal        goto state 61

State 90

	RExp -> RExp '-' . RExp                             (rule 71)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 131
	PRead          goto state 60
	Literal        goto state 61

State 91

	RExp -> RExp '/' . RExp                             (rule 73)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 130
	PRead          goto state 60
	Literal        goto state 61

State 92

	RExp -> RExp '<' . RExp                             (rule 64)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 129
	PRead          goto state 60
	Literal        goto state 61

State 93

	RExp -> RExp '<=' . RExp                            (rule 65)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 128
	PRead          goto state 60
	Literal        goto state 61

State 94

	RExp -> RExp '==' . RExp                            (rule 66)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 127
	PRead          goto state 60
	Literal        goto state 61

State 95

	RExp -> RExp '>' . RExp                             (rule 69)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 126
	PRead          goto state 60
	Literal        goto state 61

State 96

	RExp -> RExp '>=' . RExp                            (rule 68)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 125
	PRead          goto state 60
	Literal        goto state 61

State 97

	RExp -> RExp '||' . RExp                            (rule 61)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 124
	PRead          goto state 60
	Literal        goto state 61

State 98

	Decl -> 'proc' Ident '(' ListForm ')' Intent ':' . Type Block    (rule 7)

	'*'            reduce using rule 21
	'['            reduce using rule 21
	'bool'         reduce using rule 21
	'char'         reduce using rule 21
	'int'          reduce using rule 21
	'real'         reduce using rule 21
	'string'       reduce using rule 21
	'void'         reduce using rule 21

	Type           goto state 123
	Compound       goto state 25

State 99

	Form -> Intent Ident ':' Type .                     (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 100

	Compound -> Compound '[' RExp ']' .                 (rule 22)

	'*'            reduce using rule 22
	'['            reduce using rule 22
	'bool'         reduce using rule 22
	'char'         reduce using rule 22
	'int'          reduce using rule 22
	'real'         reduce using rule 22
	'string'       reduce using rule 22
	'void'         reduce using rule 22


State 101

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)
	ListRExp -> RExp .                                  (rule 111)
	ListRExp -> RExp . ',' ListRExp                     (rule 112)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	')'            reduce using rule 111
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	','            shift, and enter state 122
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	']'            reduce using rule 111
	'||'           shift, and enter state 97


State 102

	RExp -> '[' ListRExp . ']'                          (rule 80)

	']'            shift, and enter state 121


State 103

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)
	RExp -> '-' RExp .                                  (rule 77)

	'!='           reduce using rule 77
	'%'            reduce using rule 77
	'&&'           reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'**'           shift, and enter state 88
	'+'            reduce using rule 77
	','            reduce using rule 77
	'-'            reduce using rule 77
	'..'           reduce using rule 77
	'/'            reduce using rule 77
	';'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	']'            reduce using rule 77
	'do'           reduce using rule 77
	'then'         reduce using rule 77
	'{'            reduce using rule 77
	'||'           reduce using rule 77
	'}'            reduce using rule 77


State 104

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)
	RExp -> '+' RExp .                                  (rule 76)

	'!='           reduce using rule 76
	'%'            reduce using rule 76
	'&&'           reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	'**'           shift, and enter state 88
	'+'            reduce using rule 76
	','            reduce using rule 76
	'-'            reduce using rule 76
	'..'           reduce using rule 76
	'/'            reduce using rule 76
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	']'            reduce using rule 76
	'do'           reduce using rule 76
	'then'         reduce using rule 76
	'{'            reduce using rule 76
	'||'           reduce using rule 76
	'}'            reduce using rule 76


State 105

	LExp -> Ident .                                     (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'%='           reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'**'           reduce using rule 59
	'**='          reduce using rule 59
	'*='           reduce using rule 59
	'+'            reduce using rule 59
	'+='           reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'-='           reduce using rule 59
	'..'           reduce using rule 59
	'/'            reduce using rule 59
	'/='           reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'do'           reduce using rule 59
	'then'         reduce using rule 59
	'{'            reduce using rule 59
	'||'           reduce using rule 59
	'}'            reduce using rule 59


State 106

	LExp -> '*' LExp .                                  (rule 57)
	LExp -> LExp . '[' RExp ']'                         (rule 58)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'%='           reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'**'           reduce using rule 57
	'**='          reduce using rule 57
	'*='           reduce using rule 57
	'+'            reduce using rule 57
	'+='           reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'-='           reduce using rule 57
	'..'           reduce using rule 57
	'/'            reduce using rule 57
	'/='           reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'['            shift, and enter state 113
	']'            reduce using rule 57
	'do'           reduce using rule 57
	'then'         reduce using rule 57
	'{'            reduce using rule 57
	'||'           reduce using rule 57
	'}'            reduce using rule 57


State 107

	LExp -> '(' . LExp ')'                              (rule 60)

	'('            shift, and enter state 107
	'*'            shift, and enter state 65
	L_ident        shift, and enter state 2

	Ident          goto state 105
	LExp           goto state 120

State 108

	LExp -> LExp . '[' RExp ']'                         (rule 58)
	LExp -> '(' LExp . ')'                              (rule 60)
	RExp -> LExp .                                      (rule 79)

	'!='           reduce using rule 79
	'%'            reduce using rule 79
	'&&'           reduce using rule 79
	')'            shift, and enter state 119
			(reduce using rule 79)

	'*'            reduce using rule 79
	'**'           reduce using rule 79
	'+'            reduce using rule 79
	'-'            reduce using rule 79
	'/'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	'['            shift, and enter state 113
	'||'           reduce using rule 79


State 109

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)
	RExp -> '(' RExp . ')'                              (rule 84)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	')'            shift, and enter state 118
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97


State 110

	LExp -> LExp . '[' RExp ']'                         (rule 58)
	RExp -> '&' LExp .                                  (rule 78)

	'!='           reduce using rule 78
	'%'            reduce using rule 78
	'&&'           reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'**'           reduce using rule 78
	'+'            reduce using rule 78
	','            reduce using rule 78
	'-'            reduce using rule 78
	'..'           reduce using rule 78
	'/'            reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	'['            shift, and enter state 113
	']'            reduce using rule 78
	'do'           reduce using rule 78
	'then'         reduce using rule 78
	'{'            reduce using rule 78
	'||'           reduce using rule 78
	'}'            reduce using rule 78


State 111

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> '!' RExp .                                  (rule 63)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'**'           shift, and enter state 88
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'..'           reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'do'           reduce using rule 63
	'then'         reduce using rule 63
	'{'            reduce using rule 63
	'||'           reduce using rule 63
	'}'            reduce using rule 63


State 112

	RExp -> PRead '(' . ')'                             (rule 82)

	')'            shift, and enter state 117


State 113

	LExp -> LExp '[' . RExp ']'                         (rule 58)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 116
	PRead          goto state 60
	Literal        goto state 61

State 114

	RExp -> Ident '(' . ListRExp ')'                    (rule 81)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	')'            reduce using rule 110
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 101
	PRead          goto state 60
	Literal        goto state 61
	ListRExp       goto state 115

State 115

	RExp -> Ident '(' ListRExp . ')'                    (rule 81)

	')'            shift, and enter state 142


State 116

	LExp -> LExp '[' RExp . ']'                         (rule 58)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	']'            shift, and enter state 141
	'||'           shift, and enter state 97


State 117

	RExp -> PRead '(' ')' .                             (rule 82)

	'!='           reduce using rule 82
	'%'            reduce using rule 82
	'&&'           reduce using rule 82
	')'            reduce using rule 82
	'*'            reduce using rule 82
	'**'           reduce using rule 82
	'+'            reduce using rule 82
	','            reduce using rule 82
	'-'            reduce using rule 82
	'..'           reduce using rule 82
	'/'            reduce using rule 82
	';'            reduce using rule 82
	'<'            reduce using rule 82
	'<='           reduce using rule 82
	'=='           reduce using rule 82
	'>'            reduce using rule 82
	'>='           reduce using rule 82
	']'            reduce using rule 82
	'do'           reduce using rule 82
	'then'         reduce using rule 82
	'{'            reduce using rule 82
	'||'           reduce using rule 82
	'}'            reduce using rule 82


State 118

	RExp -> '(' RExp ')' .                              (rule 84)

	'!='           reduce using rule 84
	'%'            reduce using rule 84
	'&&'           reduce using rule 84
	')'            reduce using rule 84
	'*'            reduce using rule 84
	'**'           reduce using rule 84
	'+'            reduce using rule 84
	','            reduce using rule 84
	'-'            reduce using rule 84
	'..'           reduce using rule 84
	'/'            reduce using rule 84
	';'            reduce using rule 84
	'<'            reduce using rule 84
	'<='           reduce using rule 84
	'=='           reduce using rule 84
	'>'            reduce using rule 84
	'>='           reduce using rule 84
	']'            reduce using rule 84
	'do'           reduce using rule 84
	'then'         reduce using rule 84
	'{'            reduce using rule 84
	'||'           reduce using rule 84
	'}'            reduce using rule 84


State 119

	LExp -> '(' LExp ')' .                              (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'%='           reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'**'           reduce using rule 60
	'**='          reduce using rule 60
	'*='           reduce using rule 60
	'+'            reduce using rule 60
	'+='           reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'-='           reduce using rule 60
	'..'           reduce using rule 60
	'/'            reduce using rule 60
	'/='           reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'do'           reduce using rule 60
	'then'         reduce using rule 60
	'{'            reduce using rule 60
	'||'           reduce using rule 60
	'}'            reduce using rule 60


State 120

	LExp -> LExp . '[' RExp ']'                         (rule 58)
	LExp -> '(' LExp . ')'                              (rule 60)

	')'            shift, and enter state 119
	'['            shift, and enter state 113


State 121

	RExp -> '[' ListRExp ']' .                          (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	')'            reduce using rule 80
	'*'            reduce using rule 80
	'**'           reduce using rule 80
	'+'            reduce using rule 80
	','            reduce using rule 80
	'-'            reduce using rule 80
	'..'           reduce using rule 80
	'/'            reduce using rule 80
	';'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	']'            reduce using rule 80
	'do'           reduce using rule 80
	'then'         reduce using rule 80
	'{'            reduce using rule 80
	'||'           reduce using rule 80
	'}'            reduce using rule 80


State 122

	ListRExp -> RExp ',' . ListRExp                     (rule 112)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	')'            reduce using rule 110
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	']'            reduce using rule 110
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 101
	PRead          goto state 60
	Literal        goto state 61
	ListRExp       goto state 140

State 123

	Decl -> 'proc' Ident '(' ListForm ')' Intent ':' Type . Block    (rule 7)

	'{'            shift, and enter state 139

	Block          goto state 138

State 124

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp '||' RExp .                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	')'            reduce using rule 61
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	','            reduce using rule 61
	'-'            shift, and enter state 90
	'..'           reduce using rule 61
	'/'            shift, and enter state 91
	';'            reduce using rule 61
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	']'            reduce using rule 61
	'do'           reduce using rule 61
	'then'         reduce using rule 61
	'{'            reduce using rule 61
	'||'           reduce using rule 61
	'}'            reduce using rule 61


State 125

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp '>=' RExp .                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           reduce using rule 68
	'%'            shift, and enter state 85
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	','            reduce using rule 68
	'-'            shift, and enter state 90
	'..'           reduce using rule 68
	'/'            shift, and enter state 91
	';'            reduce using rule 68
	'<'            fail
	'<='           fail
	'=='           reduce using rule 68
	'>'            fail
	'>='           fail
	']'            reduce using rule 68
	'do'           reduce using rule 68
	'then'         reduce using rule 68
	'{'            reduce using rule 68
	'||'           reduce using rule 68
	'}'            reduce using rule 68


State 126

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp '>' RExp .                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           reduce using rule 69
	'%'            shift, and enter state 85
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	','            reduce using rule 69
	'-'            shift, and enter state 90
	'..'           reduce using rule 69
	'/'            shift, and enter state 91
	';'            reduce using rule 69
	'<'            fail
	'<='           fail
	'=='           reduce using rule 69
	'>'            fail
	'>='           fail
	']'            reduce using rule 69
	'do'           reduce using rule 69
	'then'         reduce using rule 69
	'{'            reduce using rule 69
	'||'           reduce using rule 69
	'}'            reduce using rule 69


State 127

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp '==' RExp .                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           fail
	'%'            shift, and enter state 85
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	','            reduce using rule 66
	'-'            shift, and enter state 90
	'..'           reduce using rule 66
	'/'            shift, and enter state 91
	';'            reduce using rule 66
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           fail
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	']'            reduce using rule 66
	'do'           reduce using rule 66
	'then'         reduce using rule 66
	'{'            reduce using rule 66
	'||'           reduce using rule 66
	'}'            reduce using rule 66


State 128

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp '<=' RExp .                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           reduce using rule 65
	'%'            shift, and enter state 85
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	','            reduce using rule 65
	'-'            shift, and enter state 90
	'..'           reduce using rule 65
	'/'            shift, and enter state 91
	';'            reduce using rule 65
	'<'            fail
	'<='           fail
	'=='           reduce using rule 65
	'>'            fail
	'>='           fail
	']'            reduce using rule 65
	'do'           reduce using rule 65
	'then'         reduce using rule 65
	'{'            reduce using rule 65
	'||'           reduce using rule 65
	'}'            reduce using rule 65


State 129

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp '<' RExp .                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           reduce using rule 64
	'%'            shift, and enter state 85
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	','            reduce using rule 64
	'-'            shift, and enter state 90
	'..'           reduce using rule 64
	'/'            shift, and enter state 91
	';'            reduce using rule 64
	'<'            fail
	'<='           fail
	'=='           reduce using rule 64
	'>'            fail
	'>='           fail
	']'            reduce using rule 64
	'do'           reduce using rule 64
	'then'         reduce using rule 64
	'{'            reduce using rule 64
	'||'           reduce using rule 64
	'}'            reduce using rule 64


State 130

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp '/' RExp .                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           reduce using rule 73
	'%'            reduce using rule 73
	'&&'           reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'**'           shift, and enter state 88
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'..'           reduce using rule 73
	'/'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	']'            reduce using rule 73
	'do'           reduce using rule 73
	'then'         reduce using rule 73
	'{'            reduce using rule 73
	'||'           reduce using rule 73
	'}'            reduce using rule 73


State 131

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp '-' RExp .                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           reduce using rule 71
	'%'            shift, and enter state 85
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'..'           reduce using rule 71
	'/'            shift, and enter state 91
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	']'            reduce using rule 71
	'do'           reduce using rule 71
	'then'         reduce using rule 71
	'{'            reduce using rule 71
	'||'           reduce using rule 71
	'}'            reduce using rule 71


State 132

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp '+' RExp .                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           reduce using rule 70
	'%'            shift, and enter state 85
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'..'           reduce using rule 70
	'/'            shift, and enter state 91
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'do'           reduce using rule 70
	'then'         reduce using rule 70
	'{'            reduce using rule 70
	'||'           reduce using rule 70
	'}'            reduce using rule 70


State 133

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)
	RExp -> RExp '**' RExp .                            (rule 75)

	'!='           reduce using rule 75
	'%'            reduce using rule 75
	'&&'           reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	'**'           shift, and enter state 88
	'+'            reduce using rule 75
	','            reduce using rule 75
	'-'            reduce using rule 75
	'..'           reduce using rule 75
	'/'            reduce using rule 75
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	']'            reduce using rule 75
	'do'           reduce using rule 75
	'then'         reduce using rule 75
	'{'            reduce using rule 75
	'||'           reduce using rule 75
	'}'            reduce using rule 75


State 134

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp '*' RExp .                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&&'           reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'**'           shift, and enter state 88
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'..'           reduce using rule 72
	'/'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	']'            reduce using rule 72
	'do'           reduce using rule 72
	'then'         reduce using rule 72
	'{'            reduce using rule 72
	'||'           reduce using rule 72
	'}'            reduce using rule 72


State 135

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp '&&' RExp .                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	','            reduce using rule 62
	'-'            shift, and enter state 90
	'..'           reduce using rule 62
	'/'            shift, and enter state 91
	';'            reduce using rule 62
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	']'            reduce using rule 62
	'do'           reduce using rule 62
	'then'         reduce using rule 62
	'{'            reduce using rule 62
	'||'           reduce using rule 62
	'}'            reduce using rule 62


State 136

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp '%' RExp .                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           reduce using rule 74
	'%'            reduce using rule 74
	'&&'           reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'**'           shift, and enter state 88
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'..'           reduce using rule 74
	'/'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	']'            reduce using rule 74
	'do'           reduce using rule 74
	'then'         reduce using rule 74
	'{'            reduce using rule 74
	'||'           reduce using rule 74
	'}'            reduce using rule 74


State 137

	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp '!=' RExp .                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           fail
	'%'            shift, and enter state 85
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	','            reduce using rule 67
	'-'            shift, and enter state 90
	'..'           reduce using rule 67
	'/'            shift, and enter state 91
	';'            reduce using rule 67
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           fail
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	']'            reduce using rule 67
	'do'           reduce using rule 67
	'then'         reduce using rule 67
	'{'            reduce using rule 67
	'||'           reduce using rule 67
	'}'            reduce using rule 67


State 138

	Decl -> 'proc' Ident '(' ListForm ')' Intent ':' Type Block .    (rule 7)

	'('            reduce using rule 7
	'*'            reduce using rule 7
	';'            reduce using rule 7
	'break'        reduce using rule 7
	'continue'     reduce using rule 7
	'do'           reduce using rule 7
	'for'          reduce using rule 7
	'if'           reduce using rule 7
	'param'        reduce using rule 7
	'proc'         reduce using rule 7
	'return'       reduce using rule 7
	'var'          reduce using rule 7
	'while'        reduce using rule 7
	'writeChar'    reduce using rule 7
	'writeFloat'   reduce using rule 7
	'writeInt'     reduce using rule 7
	'writeString'  reduce using rule 7
	'{'            reduce using rule 7
	'}'            reduce using rule 7
	L_ident        reduce using rule 7
	%eof           reduce using rule 7


State 139

	Block -> '{' . ListDecl ListStm '}'                 (rule 30)

	'param'        shift, and enter state 6
	'proc'         shift, and enter state 7
	'var'          shift, and enter state 8

	Decl           goto state 4
	ListDecl       goto state 143

State 140

	ListRExp -> RExp ',' ListRExp .                     (rule 112)

	')'            reduce using rule 112
	']'            reduce using rule 112


State 141

	LExp -> LExp '[' RExp ']' .                         (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'%='           reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'**'           reduce using rule 58
	'**='          reduce using rule 58
	'*='           reduce using rule 58
	'+'            reduce using rule 58
	'+='           reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'-='           reduce using rule 58
	'..'           reduce using rule 58
	'/'            reduce using rule 58
	'/='           reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'do'           reduce using rule 58
	'then'         reduce using rule 58
	'{'            reduce using rule 58
	'||'           reduce using rule 58
	'}'            reduce using rule 58


State 142

	RExp -> Ident '(' ListRExp ')' .                    (rule 81)

	'!='           reduce using rule 81
	'%'            reduce using rule 81
	'&&'           reduce using rule 81
	')'            reduce using rule 81
	'*'            reduce using rule 81
	'**'           reduce using rule 81
	'+'            reduce using rule 81
	','            reduce using rule 81
	'-'            reduce using rule 81
	'..'           reduce using rule 81
	'/'            reduce using rule 81
	';'            reduce using rule 81
	'<'            reduce using rule 81
	'<='           reduce using rule 81
	'=='           reduce using rule 81
	'>'            reduce using rule 81
	'>='           reduce using rule 81
	']'            reduce using rule 81
	'do'           reduce using rule 81
	'then'         reduce using rule 81
	'{'            reduce using rule 81
	'||'           reduce using rule 81
	'}'            reduce using rule 81


State 143

	Block -> '{' ListDecl . ListStm '}'                 (rule 30)

	'('            reduce using rule 108
	'*'            reduce using rule 108
	';'            reduce using rule 108
	'break'        reduce using rule 108
	'continue'     reduce using rule 108
	'do'           reduce using rule 108
	'for'          reduce using rule 108
	'if'           reduce using rule 108
	'return'       reduce using rule 108
	'while'        reduce using rule 108
	'writeChar'    reduce using rule 108
	'writeFloat'   reduce using rule 108
	'writeInt'     reduce using rule 108
	'writeString'  reduce using rule 108
	'{'            reduce using rule 108
	'}'            reduce using rule 108
	L_ident        reduce using rule 108

	ListStm        goto state 144

State 144

	Block -> '{' ListDecl ListStm . '}'                 (rule 30)
	ListStm -> ListStm . Stm                            (rule 109)

	'('            shift, and enter state 107
	'*'            shift, and enter state 65
	';'            shift, and enter state 150
	'break'        shift, and enter state 151
	'continue'     shift, and enter state 152
	'do'           shift, and enter state 153
	'for'          shift, and enter state 154
	'if'           shift, and enter state 155
	'return'       shift, and enter state 156
	'while'        shift, and enter state 157
	'writeChar'    shift, and enter state 158
	'writeFloat'   shift, and enter state 159
	'writeInt'     shift, and enter state 160
	'writeString'  shift, and enter state 161
	'{'            shift, and enter state 139
	'}'            shift, and enter state 162
	L_ident        shift, and enter state 2

	Ident          goto state 145
	Block          goto state 146
	Stm            goto state 147
	LExp           goto state 148
	PWrite         goto state 149

State 145

	Stm -> Ident . '(' ListRExp ')' ';'                 (rule 33)
	LExp -> Ident .                                     (rule 59)

	'%='           reduce using rule 59
	'('            shift, and enter state 181
	'**='          reduce using rule 59
	'*='           reduce using rule 59
	'+='           reduce using rule 59
	'-='           reduce using rule 59
	'/='           reduce using rule 59
	';'            reduce using rule 59
	'='            reduce using rule 59
	'['            reduce using rule 59


State 146

	Stm -> Block .                                      (rule 32)

	'('            reduce using rule 32
	'*'            reduce using rule 32
	';'            reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'do'           reduce using rule 32
	'else'         reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'return'       reduce using rule 32
	'while'        reduce using rule 32
	'writeChar'    reduce using rule 32
	'writeFloat'   reduce using rule 32
	'writeInt'     reduce using rule 32
	'writeString'  reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_ident        reduce using rule 32


State 147

	ListStm -> ListStm Stm .                            (rule 109)

	'('            reduce using rule 109
	'*'            reduce using rule 109
	';'            reduce using rule 109
	'break'        reduce using rule 109
	'continue'     reduce using rule 109
	'do'           reduce using rule 109
	'for'          reduce using rule 109
	'if'           reduce using rule 109
	'return'       reduce using rule 109
	'while'        reduce using rule 109
	'writeChar'    reduce using rule 109
	'writeFloat'   reduce using rule 109
	'writeInt'     reduce using rule 109
	'writeString'  reduce using rule 109
	'{'            reduce using rule 109
	'}'            reduce using rule 109
	L_ident        reduce using rule 109


State 148

	Stm -> LExp . '=' RExp ';'                          (rule 35)
	Stm -> LExp . '+=' RExp ';'                         (rule 36)
	Stm -> LExp . '-=' RExp ';'                         (rule 37)
	Stm -> LExp . '*=' RExp ';'                         (rule 38)
	Stm -> LExp . '/=' RExp ';'                         (rule 39)
	Stm -> LExp . '%=' RExp ';'                         (rule 40)
	Stm -> LExp . '**=' RExp ';'                        (rule 41)
	Stm -> LExp . ';'                                   (rule 42)
	LExp -> LExp . '[' RExp ']'                         (rule 58)

	'%='           shift, and enter state 173
	'**='          shift, and enter state 174
	'*='           shift, and enter state 175
	'+='           shift, and enter state 176
	'-='           shift, and enter state 177
	'/='           shift, and enter state 178
	';'            shift, and enter state 179
	'='            shift, and enter state 180
	'['            shift, and enter state 113


State 149

	Stm -> PWrite . '(' RExp ')' ';'                    (rule 34)

	'('            shift, and enter state 172


State 150

	Stm -> ';' . Stm                                    (rule 31)

	'('            shift, and enter state 107
	'*'            shift, and enter state 65
	';'            shift, and enter state 150
	'break'        shift, and enter state 151
	'continue'     shift, and enter state 152
	'do'           shift, and enter state 153
	'for'          shift, and enter state 154
	'if'           shift, and enter state 155
	'return'       shift, and enter state 156
	'while'        shift, and enter state 157
	'writeChar'    shift, and enter state 158
	'writeFloat'   shift, and enter state 159
	'writeInt'     shift, and enter state 160
	'writeString'  shift, and enter state 161
	'{'            shift, and enter state 139
	L_ident        shift, and enter state 2

	Ident          goto state 145
	Block          goto state 146
	Stm            goto state 171
	LExp           goto state 148
	PWrite         goto state 149

State 151

	Stm -> 'break' . ';'                                (rule 54)

	';'            shift, and enter state 170


State 152

	Stm -> 'continue' . ';'                             (rule 55)

	';'            shift, and enter state 169


State 153

	Stm -> 'do' . Stm 'while' RExp ';'                  (rule 49)

	'('            shift, and enter state 107
	'*'            shift, and enter state 65
	';'            shift, and enter state 150
	'break'        shift, and enter state 151
	'continue'     shift, and enter state 152
	'do'           shift, and enter state 153
	'for'          shift, and enter state 154
	'if'           shift, and enter state 155
	'return'       shift, and enter state 156
	'while'        shift, and enter state 157
	'writeChar'    shift, and enter state 158
	'writeFloat'   shift, and enter state 159
	'writeInt'     shift, and enter state 160
	'writeString'  shift, and enter state 161
	'{'            shift, and enter state 139
	L_ident        shift, and enter state 2

	Ident          goto state 145
	Block          goto state 146
	Stm            goto state 168
	LExp           goto state 148
	PWrite         goto state 149

State 154

	Stm -> 'for' . Ident 'in' Range 'do' Stm            (rule 50)
	Stm -> 'for' . Ident 'in' Range Block               (rule 51)

	L_ident        shift, and enter state 2

	Ident          goto state 167

State 155

	Stm -> 'if' . RExp 'then' Stm                       (rule 43)
	Stm -> 'if' . RExp Block Stm                        (rule 44)
	Stm -> 'if' . RExp 'then' Stm 'else' Stm            (rule 45)
	Stm -> 'if' . RExp Block Stm 'else' Stm             (rule 46)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 166
	PRead          goto state 60
	Literal        goto state 61

State 156

	Stm -> 'return' . ';'                               (rule 52)
	Stm -> 'return' . RExp ';'                          (rule 53)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	';'            shift, and enter state 165
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 164
	PRead          goto state 60
	Literal        goto state 61

State 157

	Stm -> 'while' . RExp 'do' Stm                      (rule 47)
	Stm -> 'while' . RExp Block                         (rule 48)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 163
	PRead          goto state 60
	Literal        goto state 61

State 158

	PWrite -> 'writeChar' .                             (rule 89)

	'('            reduce using rule 89


State 159

	PWrite -> 'writeFloat' .                            (rule 91)

	'('            reduce using rule 91


State 160

	PWrite -> 'writeInt' .                              (rule 90)

	'('            reduce using rule 90


State 161

	PWrite -> 'writeString' .                           (rule 92)

	'('            reduce using rule 92


State 162

	Block -> '{' ListDecl ListStm '}' .                 (rule 30)

	'('            reduce using rule 30
	'*'            reduce using rule 30
	';'            reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'do'           reduce using rule 30
	'else'         reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'param'        reduce using rule 30
	'proc'         reduce using rule 30
	'return'       reduce using rule 30
	'var'          reduce using rule 30
	'while'        reduce using rule 30
	'writeChar'    reduce using rule 30
	'writeFloat'   reduce using rule 30
	'writeInt'     reduce using rule 30
	'writeString'  reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_ident        reduce using rule 30
	%eof           reduce using rule 30


State 163

	Stm -> 'while' RExp . 'do' Stm                      (rule 47)
	Stm -> 'while' RExp . Block                         (rule 48)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'do'           shift, and enter state 197
	'{'            shift, and enter state 139
	'||'           shift, and enter state 97

	Block          goto state 196

State 164

	Stm -> 'return' RExp . ';'                          (rule 53)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	';'            shift, and enter state 195
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97


State 165

	Stm -> 'return' ';' .                               (rule 52)

	'('            reduce using rule 52
	'*'            reduce using rule 52
	';'            reduce using rule 52
	'break'        reduce using rule 52
	'continue'     reduce using rule 52
	'do'           reduce using rule 52
	'else'         reduce using rule 52
	'for'          reduce using rule 52
	'if'           reduce using rule 52
	'return'       reduce using rule 52
	'while'        reduce using rule 52
	'writeChar'    reduce using rule 52
	'writeFloat'   reduce using rule 52
	'writeInt'     reduce using rule 52
	'writeString'  reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	L_ident        reduce using rule 52


State 166

	Stm -> 'if' RExp . 'then' Stm                       (rule 43)
	Stm -> 'if' RExp . Block Stm                        (rule 44)
	Stm -> 'if' RExp . 'then' Stm 'else' Stm            (rule 45)
	Stm -> 'if' RExp . Block Stm 'else' Stm             (rule 46)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'then'         shift, and enter state 194
	'{'            shift, and enter state 139
	'||'           shift, and enter state 97

	Block          goto state 193

State 167

	Stm -> 'for' Ident . 'in' Range 'do' Stm            (rule 50)
	Stm -> 'for' Ident . 'in' Range Block               (rule 51)

	'in'           shift, and enter state 192


State 168

	Stm -> 'do' Stm . 'while' RExp ';'                  (rule 49)

	'while'        shift, and enter state 191


State 169

	Stm -> 'continue' ';' .                             (rule 55)

	'('            reduce using rule 55
	'*'            reduce using rule 55
	';'            reduce using rule 55
	'break'        reduce using rule 55
	'continue'     reduce using rule 55
	'do'           reduce using rule 55
	'else'         reduce using rule 55
	'for'          reduce using rule 55
	'if'           reduce using rule 55
	'return'       reduce using rule 55
	'while'        reduce using rule 55
	'writeChar'    reduce using rule 55
	'writeFloat'   reduce using rule 55
	'writeInt'     reduce using rule 55
	'writeString'  reduce using rule 55
	'{'            reduce using rule 55
	'}'            reduce using rule 55
	L_ident        reduce using rule 55


State 170

	Stm -> 'break' ';' .                                (rule 54)

	'('            reduce using rule 54
	'*'            reduce using rule 54
	';'            reduce using rule 54
	'break'        reduce using rule 54
	'continue'     reduce using rule 54
	'do'           reduce using rule 54
	'else'         reduce using rule 54
	'for'          reduce using rule 54
	'if'           reduce using rule 54
	'return'       reduce using rule 54
	'while'        reduce using rule 54
	'writeChar'    reduce using rule 54
	'writeFloat'   reduce using rule 54
	'writeInt'     reduce using rule 54
	'writeString'  reduce using rule 54
	'{'            reduce using rule 54
	'}'            reduce using rule 54
	L_ident        reduce using rule 54


State 171

	Stm -> ';' Stm .                                    (rule 31)

	'('            reduce using rule 31
	'*'            reduce using rule 31
	';'            reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'do'           reduce using rule 31
	'else'         reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'return'       reduce using rule 31
	'while'        reduce using rule 31
	'writeChar'    reduce using rule 31
	'writeFloat'   reduce using rule 31
	'writeInt'     reduce using rule 31
	'writeString'  reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31


State 172

	Stm -> PWrite '(' . RExp ')' ';'                    (rule 34)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 190
	PRead          goto state 60
	Literal        goto state 61

State 173

	Stm -> LExp '%=' . RExp ';'                         (rule 40)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 189
	PRead          goto state 60
	Literal        goto state 61

State 174

	Stm -> LExp '**=' . RExp ';'                        (rule 41)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 188
	PRead          goto state 60
	Literal        goto state 61

State 175

	Stm -> LExp '*=' . RExp ';'                         (rule 38)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 187
	PRead          goto state 60
	Literal        goto state 61

State 176

	Stm -> LExp '+=' . RExp ';'                         (rule 36)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 186
	PRead          goto state 60
	Literal        goto state 61

State 177

	Stm -> LExp '-=' . RExp ';'                         (rule 37)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 185
	PRead          goto state 60
	Literal        goto state 61

State 178

	Stm -> LExp '/=' . RExp ';'                         (rule 39)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 184
	PRead          goto state 60
	Literal        goto state 61

State 179

	Stm -> LExp ';' .                                   (rule 42)

	'('            reduce using rule 42
	'*'            reduce using rule 42
	';'            reduce using rule 42
	'break'        reduce using rule 42
	'continue'     reduce using rule 42
	'do'           reduce using rule 42
	'else'         reduce using rule 42
	'for'          reduce using rule 42
	'if'           reduce using rule 42
	'return'       reduce using rule 42
	'while'        reduce using rule 42
	'writeChar'    reduce using rule 42
	'writeFloat'   reduce using rule 42
	'writeInt'     reduce using rule 42
	'writeString'  reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	L_ident        reduce using rule 42


State 180

	Stm -> LExp '=' . RExp ';'                          (rule 35)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 183
	PRead          goto state 60
	Literal        goto state 61

State 181

	Stm -> Ident '(' . ListRExp ')' ';'                 (rule 33)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	')'            reduce using rule 110
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 101
	PRead          goto state 60
	Literal        goto state 61
	ListRExp       goto state 182

State 182

	Stm -> Ident '(' ListRExp . ')' ';'                 (rule 33)

	')'            shift, and enter state 212


State 183

	Stm -> LExp '=' RExp . ';'                          (rule 35)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	';'            shift, and enter state 211
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97


State 184

	Stm -> LExp '/=' RExp . ';'                         (rule 39)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	';'            shift, and enter state 210
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97


State 185

	Stm -> LExp '-=' RExp . ';'                         (rule 37)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	';'            shift, and enter state 209
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97


State 186

	Stm -> LExp '+=' RExp . ';'                         (rule 36)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	';'            shift, and enter state 208
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97


State 187

	Stm -> LExp '*=' RExp . ';'                         (rule 38)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	';'            shift, and enter state 207
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97


State 188

	Stm -> LExp '**=' RExp . ';'                        (rule 41)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	';'            shift, and enter state 206
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97


State 189

	Stm -> LExp '%=' RExp . ';'                         (rule 40)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	';'            shift, and enter state 205
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97


State 190

	Stm -> PWrite '(' RExp . ')' ';'                    (rule 34)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	')'            shift, and enter state 204
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97


State 191

	Stm -> 'do' Stm 'while' . RExp ';'                  (rule 49)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 203
	PRead          goto state 60
	Literal        goto state 61

State 192

	Stm -> 'for' Ident 'in' . Range 'do' Stm            (rule 50)
	Stm -> 'for' Ident 'in' . Range Block               (rule 51)

	'{'            shift, and enter state 202

	Range          goto state 201

State 193

	Stm -> 'if' RExp Block . Stm                        (rule 44)
	Stm -> 'if' RExp Block . Stm 'else' Stm             (rule 46)

	'('            shift, and enter state 107
	'*'            shift, and enter state 65
	';'            shift, and enter state 150
	'break'        shift, and enter state 151
	'continue'     shift, and enter state 152
	'do'           shift, and enter state 153
	'for'          shift, and enter state 154
	'if'           shift, and enter state 155
	'return'       shift, and enter state 156
	'while'        shift, and enter state 157
	'writeChar'    shift, and enter state 158
	'writeFloat'   shift, and enter state 159
	'writeInt'     shift, and enter state 160
	'writeString'  shift, and enter state 161
	'{'            shift, and enter state 139
	L_ident        shift, and enter state 2

	Ident          goto state 145
	Block          goto state 146
	Stm            goto state 200
	LExp           goto state 148
	PWrite         goto state 149

State 194

	Stm -> 'if' RExp 'then' . Stm                       (rule 43)
	Stm -> 'if' RExp 'then' . Stm 'else' Stm            (rule 45)

	'('            shift, and enter state 107
	'*'            shift, and enter state 65
	';'            shift, and enter state 150
	'break'        shift, and enter state 151
	'continue'     shift, and enter state 152
	'do'           shift, and enter state 153
	'for'          shift, and enter state 154
	'if'           shift, and enter state 155
	'return'       shift, and enter state 156
	'while'        shift, and enter state 157
	'writeChar'    shift, and enter state 158
	'writeFloat'   shift, and enter state 159
	'writeInt'     shift, and enter state 160
	'writeString'  shift, and enter state 161
	'{'            shift, and enter state 139
	L_ident        shift, and enter state 2

	Ident          goto state 145
	Block          goto state 146
	Stm            goto state 199
	LExp           goto state 148
	PWrite         goto state 149

State 195

	Stm -> 'return' RExp ';' .                          (rule 53)

	'('            reduce using rule 53
	'*'            reduce using rule 53
	';'            reduce using rule 53
	'break'        reduce using rule 53
	'continue'     reduce using rule 53
	'do'           reduce using rule 53
	'else'         reduce using rule 53
	'for'          reduce using rule 53
	'if'           reduce using rule 53
	'return'       reduce using rule 53
	'while'        reduce using rule 53
	'writeChar'    reduce using rule 53
	'writeFloat'   reduce using rule 53
	'writeInt'     reduce using rule 53
	'writeString'  reduce using rule 53
	'{'            reduce using rule 53
	'}'            reduce using rule 53
	L_ident        reduce using rule 53


State 196

	Stm -> 'while' RExp Block .                         (rule 48)

	'('            reduce using rule 48
	'*'            reduce using rule 48
	';'            reduce using rule 48
	'break'        reduce using rule 48
	'continue'     reduce using rule 48
	'do'           reduce using rule 48
	'else'         reduce using rule 48
	'for'          reduce using rule 48
	'if'           reduce using rule 48
	'return'       reduce using rule 48
	'while'        reduce using rule 48
	'writeChar'    reduce using rule 48
	'writeFloat'   reduce using rule 48
	'writeInt'     reduce using rule 48
	'writeString'  reduce using rule 48
	'{'            reduce using rule 48
	'}'            reduce using rule 48
	L_ident        reduce using rule 48


State 197

	Stm -> 'while' RExp 'do' . Stm                      (rule 47)

	'('            shift, and enter state 107
	'*'            shift, and enter state 65
	';'            shift, and enter state 150
	'break'        shift, and enter state 151
	'continue'     shift, and enter state 152
	'do'           shift, and enter state 153
	'for'          shift, and enter state 154
	'if'           shift, and enter state 155
	'return'       shift, and enter state 156
	'while'        shift, and enter state 157
	'writeChar'    shift, and enter state 158
	'writeFloat'   shift, and enter state 159
	'writeInt'     shift, and enter state 160
	'writeString'  shift, and enter state 161
	'{'            shift, and enter state 139
	L_ident        shift, and enter state 2

	Ident          goto state 145
	Block          goto state 146
	Stm            goto state 198
	LExp           goto state 148
	PWrite         goto state 149

State 198

	Stm -> 'while' RExp 'do' Stm .                      (rule 47)

	'('            reduce using rule 47
	'*'            reduce using rule 47
	';'            reduce using rule 47
	'break'        reduce using rule 47
	'continue'     reduce using rule 47
	'do'           reduce using rule 47
	'else'         reduce using rule 47
	'for'          reduce using rule 47
	'if'           reduce using rule 47
	'return'       reduce using rule 47
	'while'        reduce using rule 47
	'writeChar'    reduce using rule 47
	'writeFloat'   reduce using rule 47
	'writeInt'     reduce using rule 47
	'writeString'  reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	L_ident        reduce using rule 47


State 199

	Stm -> 'if' RExp 'then' Stm .                       (rule 43)
	Stm -> 'if' RExp 'then' Stm . 'else' Stm            (rule 45)

	'('            reduce using rule 43
	'*'            reduce using rule 43
	';'            reduce using rule 43
	'break'        reduce using rule 43
	'continue'     reduce using rule 43
	'do'           reduce using rule 43
	'else'         shift, and enter state 220
			(reduce using rule 43)

	'for'          reduce using rule 43
	'if'           reduce using rule 43
	'return'       reduce using rule 43
	'while'        reduce using rule 43
	'writeChar'    reduce using rule 43
	'writeFloat'   reduce using rule 43
	'writeInt'     reduce using rule 43
	'writeString'  reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	L_ident        reduce using rule 43


State 200

	Stm -> 'if' RExp Block Stm .                        (rule 44)
	Stm -> 'if' RExp Block Stm . 'else' Stm             (rule 46)

	'('            reduce using rule 44
	'*'            reduce using rule 44
	';'            reduce using rule 44
	'break'        reduce using rule 44
	'continue'     reduce using rule 44
	'do'           reduce using rule 44
	'else'         shift, and enter state 219
			(reduce using rule 44)

	'for'          reduce using rule 44
	'if'           reduce using rule 44
	'return'       reduce using rule 44
	'while'        reduce using rule 44
	'writeChar'    reduce using rule 44
	'writeFloat'   reduce using rule 44
	'writeInt'     reduce using rule 44
	'writeString'  reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	L_ident        reduce using rule 44


State 201

	Stm -> 'for' Ident 'in' Range . 'do' Stm            (rule 50)
	Stm -> 'for' Ident 'in' Range . Block               (rule 51)

	'do'           shift, and enter state 218
	'{'            shift, and enter state 139

	Block          goto state 217

State 202

	Range -> '{' . RExp '..' RExp '}'                   (rule 56)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 216
	PRead          goto state 60
	Literal        goto state 61

State 203

	Stm -> 'do' Stm 'while' RExp . ';'                  (rule 49)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	';'            shift, and enter state 215
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97


State 204

	Stm -> PWrite '(' RExp ')' . ';'                    (rule 34)

	';'            shift, and enter state 214


State 205

	Stm -> LExp '%=' RExp ';' .                         (rule 40)

	'('            reduce using rule 40
	'*'            reduce using rule 40
	';'            reduce using rule 40
	'break'        reduce using rule 40
	'continue'     reduce using rule 40
	'do'           reduce using rule 40
	'else'         reduce using rule 40
	'for'          reduce using rule 40
	'if'           reduce using rule 40
	'return'       reduce using rule 40
	'while'        reduce using rule 40
	'writeChar'    reduce using rule 40
	'writeFloat'   reduce using rule 40
	'writeInt'     reduce using rule 40
	'writeString'  reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	L_ident        reduce using rule 40


State 206

	Stm -> LExp '**=' RExp ';' .                        (rule 41)

	'('            reduce using rule 41
	'*'            reduce using rule 41
	';'            reduce using rule 41
	'break'        reduce using rule 41
	'continue'     reduce using rule 41
	'do'           reduce using rule 41
	'else'         reduce using rule 41
	'for'          reduce using rule 41
	'if'           reduce using rule 41
	'return'       reduce using rule 41
	'while'        reduce using rule 41
	'writeChar'    reduce using rule 41
	'writeFloat'   reduce using rule 41
	'writeInt'     reduce using rule 41
	'writeString'  reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	L_ident        reduce using rule 41


State 207

	Stm -> LExp '*=' RExp ';' .                         (rule 38)

	'('            reduce using rule 38
	'*'            reduce using rule 38
	';'            reduce using rule 38
	'break'        reduce using rule 38
	'continue'     reduce using rule 38
	'do'           reduce using rule 38
	'else'         reduce using rule 38
	'for'          reduce using rule 38
	'if'           reduce using rule 38
	'return'       reduce using rule 38
	'while'        reduce using rule 38
	'writeChar'    reduce using rule 38
	'writeFloat'   reduce using rule 38
	'writeInt'     reduce using rule 38
	'writeString'  reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	L_ident        reduce using rule 38


State 208

	Stm -> LExp '+=' RExp ';' .                         (rule 36)

	'('            reduce using rule 36
	'*'            reduce using rule 36
	';'            reduce using rule 36
	'break'        reduce using rule 36
	'continue'     reduce using rule 36
	'do'           reduce using rule 36
	'else'         reduce using rule 36
	'for'          reduce using rule 36
	'if'           reduce using rule 36
	'return'       reduce using rule 36
	'while'        reduce using rule 36
	'writeChar'    reduce using rule 36
	'writeFloat'   reduce using rule 36
	'writeInt'     reduce using rule 36
	'writeString'  reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	L_ident        reduce using rule 36


State 209

	Stm -> LExp '-=' RExp ';' .                         (rule 37)

	'('            reduce using rule 37
	'*'            reduce using rule 37
	';'            reduce using rule 37
	'break'        reduce using rule 37
	'continue'     reduce using rule 37
	'do'           reduce using rule 37
	'else'         reduce using rule 37
	'for'          reduce using rule 37
	'if'           reduce using rule 37
	'return'       reduce using rule 37
	'while'        reduce using rule 37
	'writeChar'    reduce using rule 37
	'writeFloat'   reduce using rule 37
	'writeInt'     reduce using rule 37
	'writeString'  reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_ident        reduce using rule 37


State 210

	Stm -> LExp '/=' RExp ';' .                         (rule 39)

	'('            reduce using rule 39
	'*'            reduce using rule 39
	';'            reduce using rule 39
	'break'        reduce using rule 39
	'continue'     reduce using rule 39
	'do'           reduce using rule 39
	'else'         reduce using rule 39
	'for'          reduce using rule 39
	'if'           reduce using rule 39
	'return'       reduce using rule 39
	'while'        reduce using rule 39
	'writeChar'    reduce using rule 39
	'writeFloat'   reduce using rule 39
	'writeInt'     reduce using rule 39
	'writeString'  reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_ident        reduce using rule 39


State 211

	Stm -> LExp '=' RExp ';' .                          (rule 35)

	'('            reduce using rule 35
	'*'            reduce using rule 35
	';'            reduce using rule 35
	'break'        reduce using rule 35
	'continue'     reduce using rule 35
	'do'           reduce using rule 35
	'else'         reduce using rule 35
	'for'          reduce using rule 35
	'if'           reduce using rule 35
	'return'       reduce using rule 35
	'while'        reduce using rule 35
	'writeChar'    reduce using rule 35
	'writeFloat'   reduce using rule 35
	'writeInt'     reduce using rule 35
	'writeString'  reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_ident        reduce using rule 35


State 212

	Stm -> Ident '(' ListRExp ')' . ';'                 (rule 33)

	';'            shift, and enter state 213


State 213

	Stm -> Ident '(' ListRExp ')' ';' .                 (rule 33)

	'('            reduce using rule 33
	'*'            reduce using rule 33
	';'            reduce using rule 33
	'break'        reduce using rule 33
	'continue'     reduce using rule 33
	'do'           reduce using rule 33
	'else'         reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'return'       reduce using rule 33
	'while'        reduce using rule 33
	'writeChar'    reduce using rule 33
	'writeFloat'   reduce using rule 33
	'writeInt'     reduce using rule 33
	'writeString'  reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_ident        reduce using rule 33


State 214

	Stm -> PWrite '(' RExp ')' ';' .                    (rule 34)

	'('            reduce using rule 34
	'*'            reduce using rule 34
	';'            reduce using rule 34
	'break'        reduce using rule 34
	'continue'     reduce using rule 34
	'do'           reduce using rule 34
	'else'         reduce using rule 34
	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'return'       reduce using rule 34
	'while'        reduce using rule 34
	'writeChar'    reduce using rule 34
	'writeFloat'   reduce using rule 34
	'writeInt'     reduce using rule 34
	'writeString'  reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_ident        reduce using rule 34


State 215

	Stm -> 'do' Stm 'while' RExp ';' .                  (rule 49)

	'('            reduce using rule 49
	'*'            reduce using rule 49
	';'            reduce using rule 49
	'break'        reduce using rule 49
	'continue'     reduce using rule 49
	'do'           reduce using rule 49
	'else'         reduce using rule 49
	'for'          reduce using rule 49
	'if'           reduce using rule 49
	'return'       reduce using rule 49
	'while'        reduce using rule 49
	'writeChar'    reduce using rule 49
	'writeFloat'   reduce using rule 49
	'writeInt'     reduce using rule 49
	'writeString'  reduce using rule 49
	'{'            reduce using rule 49
	'}'            reduce using rule 49
	L_ident        reduce using rule 49


State 216

	Range -> '{' RExp . '..' RExp '}'                   (rule 56)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'..'           shift, and enter state 224
	'/'            shift, and enter state 91
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97


State 217

	Stm -> 'for' Ident 'in' Range Block .               (rule 51)

	'('            reduce using rule 51
	'*'            reduce using rule 51
	';'            reduce using rule 51
	'break'        reduce using rule 51
	'continue'     reduce using rule 51
	'do'           reduce using rule 51
	'else'         reduce using rule 51
	'for'          reduce using rule 51
	'if'           reduce using rule 51
	'return'       reduce using rule 51
	'while'        reduce using rule 51
	'writeChar'    reduce using rule 51
	'writeFloat'   reduce using rule 51
	'writeInt'     reduce using rule 51
	'writeString'  reduce using rule 51
	'{'            reduce using rule 51
	'}'            reduce using rule 51
	L_ident        reduce using rule 51


State 218

	Stm -> 'for' Ident 'in' Range 'do' . Stm            (rule 50)

	'('            shift, and enter state 107
	'*'            shift, and enter state 65
	';'            shift, and enter state 150
	'break'        shift, and enter state 151
	'continue'     shift, and enter state 152
	'do'           shift, and enter state 153
	'for'          shift, and enter state 154
	'if'           shift, and enter state 155
	'return'       shift, and enter state 156
	'while'        shift, and enter state 157
	'writeChar'    shift, and enter state 158
	'writeFloat'   shift, and enter state 159
	'writeInt'     shift, and enter state 160
	'writeString'  shift, and enter state 161
	'{'            shift, and enter state 139
	L_ident        shift, and enter state 2

	Ident          goto state 145
	Block          goto state 146
	Stm            goto state 223
	LExp           goto state 148
	PWrite         goto state 149

State 219

	Stm -> 'if' RExp Block Stm 'else' . Stm             (rule 46)

	'('            shift, and enter state 107
	'*'            shift, and enter state 65
	';'            shift, and enter state 150
	'break'        shift, and enter state 151
	'continue'     shift, and enter state 152
	'do'           shift, and enter state 153
	'for'          shift, and enter state 154
	'if'           shift, and enter state 155
	'return'       shift, and enter state 156
	'while'        shift, and enter state 157
	'writeChar'    shift, and enter state 158
	'writeFloat'   shift, and enter state 159
	'writeInt'     shift, and enter state 160
	'writeString'  shift, and enter state 161
	'{'            shift, and enter state 139
	L_ident        shift, and enter state 2

	Ident          goto state 145
	Block          goto state 146
	Stm            goto state 222
	LExp           goto state 148
	PWrite         goto state 149

State 220

	Stm -> 'if' RExp 'then' Stm 'else' . Stm            (rule 45)

	'('            shift, and enter state 107
	'*'            shift, and enter state 65
	';'            shift, and enter state 150
	'break'        shift, and enter state 151
	'continue'     shift, and enter state 152
	'do'           shift, and enter state 153
	'for'          shift, and enter state 154
	'if'           shift, and enter state 155
	'return'       shift, and enter state 156
	'while'        shift, and enter state 157
	'writeChar'    shift, and enter state 158
	'writeFloat'   shift, and enter state 159
	'writeInt'     shift, and enter state 160
	'writeString'  shift, and enter state 161
	'{'            shift, and enter state 139
	L_ident        shift, and enter state 2

	Ident          goto state 145
	Block          goto state 146
	Stm            goto state 221
	LExp           goto state 148
	PWrite         goto state 149

State 221

	Stm -> 'if' RExp 'then' Stm 'else' Stm .            (rule 45)

	'('            reduce using rule 45
	'*'            reduce using rule 45
	';'            reduce using rule 45
	'break'        reduce using rule 45
	'continue'     reduce using rule 45
	'do'           reduce using rule 45
	'else'         reduce using rule 45
	'for'          reduce using rule 45
	'if'           reduce using rule 45
	'return'       reduce using rule 45
	'while'        reduce using rule 45
	'writeChar'    reduce using rule 45
	'writeFloat'   reduce using rule 45
	'writeInt'     reduce using rule 45
	'writeString'  reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	L_ident        reduce using rule 45


State 222

	Stm -> 'if' RExp Block Stm 'else' Stm .             (rule 46)

	'('            reduce using rule 46
	'*'            reduce using rule 46
	';'            reduce using rule 46
	'break'        reduce using rule 46
	'continue'     reduce using rule 46
	'do'           reduce using rule 46
	'else'         reduce using rule 46
	'for'          reduce using rule 46
	'if'           reduce using rule 46
	'return'       reduce using rule 46
	'while'        reduce using rule 46
	'writeChar'    reduce using rule 46
	'writeFloat'   reduce using rule 46
	'writeInt'     reduce using rule 46
	'writeString'  reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	L_ident        reduce using rule 46


State 223

	Stm -> 'for' Ident 'in' Range 'do' Stm .            (rule 50)

	'('            reduce using rule 50
	'*'            reduce using rule 50
	';'            reduce using rule 50
	'break'        reduce using rule 50
	'continue'     reduce using rule 50
	'do'           reduce using rule 50
	'else'         reduce using rule 50
	'for'          reduce using rule 50
	'if'           reduce using rule 50
	'return'       reduce using rule 50
	'while'        reduce using rule 50
	'writeChar'    reduce using rule 50
	'writeFloat'   reduce using rule 50
	'writeInt'     reduce using rule 50
	'writeString'  reduce using rule 50
	'{'            reduce using rule 50
	'}'            reduce using rule 50
	L_ident        reduce using rule 50


State 224

	Range -> '{' RExp '..' . RExp '}'                   (rule 56)

	'!'            shift, and enter state 62
	'&'            shift, and enter state 63
	'('            shift, and enter state 64
	'*'            shift, and enter state 65
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'['            shift, and enter state 68
	'false'        shift, and enter state 69
	'readChar'     shift, and enter state 70
	'readFloat'    shift, and enter state 71
	'readInt'      shift, and enter state 72
	'readString'   shift, and enter state 73
	'true'         shift, and enter state 74
	L_ident        shift, and enter state 2
	L_charac       shift, and enter state 75
	L_integ        shift, and enter state 76
	L_doubl        shift, and enter state 77
	L_quoted       shift, and enter state 78

	Ident          goto state 53
	Char           goto state 54
	Integer        goto state 55
	Double         goto state 56
	String         goto state 57
	LExp           goto state 58
	RExp           goto state 225
	PRead          goto state 60
	Literal        goto state 61

State 225

	Range -> '{' RExp '..' RExp . '}'                   (rule 56)
	RExp -> RExp . '||' RExp                            (rule 61)
	RExp -> RExp . '&&' RExp                            (rule 62)
	RExp -> RExp . '<' RExp                             (rule 64)
	RExp -> RExp . '<=' RExp                            (rule 65)
	RExp -> RExp . '==' RExp                            (rule 66)
	RExp -> RExp . '!=' RExp                            (rule 67)
	RExp -> RExp . '>=' RExp                            (rule 68)
	RExp -> RExp . '>' RExp                             (rule 69)
	RExp -> RExp . '+' RExp                             (rule 70)
	RExp -> RExp . '-' RExp                             (rule 71)
	RExp -> RExp . '*' RExp                             (rule 72)
	RExp -> RExp . '/' RExp                             (rule 73)
	RExp -> RExp . '%' RExp                             (rule 74)
	RExp -> RExp . '**' RExp                            (rule 75)

	'!='           shift, and enter state 84
	'%'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'*'            shift, and enter state 87
	'**'           shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'/'            shift, and enter state 91
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	'||'           shift, and enter state 97
	'}'            shift, and enter state 226


State 226

	Range -> '{' RExp '..' RExp '}' .                   (rule 56)

	'do'           reduce using rule 56
	'{'            reduce using rule 56


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 113
Number of terminals: 73
Number of non-terminals: 29
Number of states: 227
